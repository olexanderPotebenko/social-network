[{"/root/Documents/projects/social-network/src/index.js":"1","/root/Documents/projects/social-network/src/Store/redux-store.js":"2","/root/Documents/projects/social-network/src/App.js":"3","/root/Documents/projects/social-network/src/reducers/profileReducer.js":"4","/root/Documents/projects/social-network/src/reducers/messagesReducer.js":"5","/root/Documents/projects/social-network/src/reducers/sidebarReducer.js":"6","/root/Documents/projects/social-network/src/reducers/usersReducer.js":"7","/root/Documents/projects/social-network/src/reducers/notifi.js":"8","/root/Documents/projects/social-network/src/reducers/authReducer.js":"9","/root/Documents/projects/social-network/src/middleware/authMiddleware.js":"10","/root/Documents/projects/social-network/src/middleware/ws.js":"11","/root/Documents/projects/social-network/src/components/Header/HeaderContainer.jsx":"12","/root/Documents/projects/social-network/src/components/Sidebar/Sidebar.jsx":"13","/root/Documents/projects/social-network/src/components/Messages/Messages.jsx":"14","/root/Documents/projects/social-network/src/components/Profile/Profile.jsx":"15","/root/Documents/projects/social-network/src/components/News/News.jsx":"16","/root/Documents/projects/social-network/src/components/Music/Music.jsx":"17","/root/Documents/projects/social-network/src/components/Settings/Settings.jsx":"18","/root/Documents/projects/social-network/src/components/Users/Users.jsx":"19","/root/Documents/projects/social-network/src/components/Auth/SignIn.jsx":"20","/root/Documents/projects/social-network/src/components/Auth/SignUp.jsx":"21","/root/Documents/projects/social-network/src/components/Notification/Notification.jsx":"22","/root/Documents/projects/social-network/src/api/api.js":"23","/root/Documents/projects/social-network/src/hocs/WithAuthData.jsx":"24","/root/Documents/projects/social-network/src/hocs/WithSignInRedirect.jsx":"25","/root/Documents/projects/social-network/src/components/Auth/SignInForm.jsx":"26","/root/Documents/projects/social-network/src/components/Auth/SignUpForm.jsx":"27","/root/Documents/projects/social-network/src/components/Sidebar/AuthInfo/AuthInfo.jsx":"28","/root/Documents/projects/social-network/src/components/Sidebar/MenuItem/MenuItem.jsx":"29","/root/Documents/projects/social-network/src/utils/functions.js":"30","/root/Documents/projects/social-network/src/components/Users/PaginationBar/PaginationBar.jsx":"31","/root/Documents/projects/social-network/src/components/Users/Filter/Filter.jsx":"32","/root/Documents/projects/social-network/src/components/commons/FetchingToggle/FetchingToggle.jsx":"33","/root/Documents/projects/social-network/src/components/commons/ListIsEmpty/ListIsEmpty.jsx":"34","/root/Documents/projects/social-network/src/components/commons/Preloader/Preloader.jsx":"35","/root/Documents/projects/social-network/src/components/commons/BackButton/BackButton.jsx":"36","/root/Documents/projects/social-network/src/components/commons/AvatarByPath/AvatarByPath.jsx":"37","/root/Documents/projects/social-network/src/components/commons/UserItem/UserItem.jsx":"38","/root/Documents/projects/social-network/src/components/commons/CloseButton/CloseButton.jsx":"39","/root/Documents/projects/social-network/src/components/commons/Avatar/Avatar.jsx":"40","/root/Documents/projects/social-network/src/utils/validators.js":"41","/root/Documents/projects/social-network/src/utils/fieldNormalizators.js":"42","/root/Documents/projects/social-network/src/components/Header/Header.jsx":"43","/root/Documents/projects/social-network/src/components/commons/FormsControls/FormsControls.jsx":"44","/root/Documents/projects/social-network/src/components/Profile/Subscribers/Subscribers.jsx":"45","/root/Documents/projects/social-network/src/components/Profile/Posts/Posts.jsx":"46","/root/Documents/projects/social-network/src/components/Messages/Dialog/Dialog.jsx":"47","/root/Documents/projects/social-network/src/components/Profile/Subscribed/Subscribed.jsx":"48","/root/Documents/projects/social-network/src/components/commons/DropDownMenu/DropDownMenu.jsx":"49","/root/Documents/projects/social-network/src/components/commons/Modal/Modal.jsx":"50","/root/Documents/projects/social-network/src/components/Profile/ProfileInfo/ProfileInfo.jsx":"51","/root/Documents/projects/social-network/src/components/Messages/Dialog/DialogInfo/DialogInfo.jsx":"52","/root/Documents/projects/social-network/src/components/Messages/Dialog/MessagesHistory/MessagesHistory.jsx":"53","/root/Documents/projects/social-network/src/components/commons/FollowButton/FollowButton.jsx":"54","/root/Documents/projects/social-network/src/components/Profile/Posts/Post/Post.jsx":"55","/root/Documents/projects/social-network/src/components/commons/Anchor/Anchor.jsx":"56","/root/Documents/projects/social-network/src/components/Profile/Posts/CreatePost/CreatePost.jsx":"57","/root/Documents/projects/social-network/src/components/Messages/Dialog/SendMessage/SendMessage.jsx":"58","/root/Documents/projects/social-network/src/components/commons/FullSizeImage/FullSizeImage.jsx":"59","/root/Documents/projects/social-network/src/components/commons/FullSizeToggle/FullSizeToggle.jsx":"60"},{"size":414,"mtime":1621538138544,"results":"61","hashOfConfig":"62"},{"size":942,"mtime":1621538138504,"results":"63","hashOfConfig":"62"},{"size":2585,"mtime":1621784636168,"results":"64","hashOfConfig":"62"},{"size":4540,"mtime":1621538138544,"results":"65","hashOfConfig":"62"},{"size":4253,"mtime":1621538138544,"results":"66","hashOfConfig":"62"},{"size":1148,"mtime":1621783649689,"results":"67","hashOfConfig":"62"},{"size":2603,"mtime":1621538138548,"results":"68","hashOfConfig":"62"},{"size":1792,"mtime":1621538138544,"results":"69","hashOfConfig":"62"},{"size":4368,"mtime":1621785784222,"results":"70","hashOfConfig":"62"},{"size":699,"mtime":1621538138544,"results":"71","hashOfConfig":"62"},{"size":4830,"mtime":1621783209412,"results":"72","hashOfConfig":"62"},{"size":550,"mtime":1621538138536,"results":"73","hashOfConfig":"62"},{"size":4926,"mtime":1621783632937,"results":"74","hashOfConfig":"62"},{"size":4952,"mtime":1621782072829,"results":"75","hashOfConfig":"62"},{"size":6458,"mtime":1621538138540,"results":"76","hashOfConfig":"62"},{"size":183,"mtime":1621538138540,"results":"77","hashOfConfig":"62"},{"size":186,"mtime":1621538138536,"results":"78","hashOfConfig":"62"},{"size":198,"mtime":1621538138540,"results":"79","hashOfConfig":"62"},{"size":2585,"mtime":1621782581155,"results":"80","hashOfConfig":"62"},{"size":1486,"mtime":1621538138536,"results":"81","hashOfConfig":"62"},{"size":1393,"mtime":1621786817753,"results":"82","hashOfConfig":"62"},{"size":2511,"mtime":1621538138540,"results":"83","hashOfConfig":"62"},{"size":4280,"mtime":1621768673177,"results":"84","hashOfConfig":"62"},{"size":442,"mtime":1621538138544,"results":"85","hashOfConfig":"62"},{"size":453,"mtime":1621782479247,"results":"86","hashOfConfig":"62"},{"size":3211,"mtime":1621682568690,"results":"87","hashOfConfig":"62"},{"size":2862,"mtime":1621538138536,"results":"88","hashOfConfig":"62"},{"size":1909,"mtime":1621538138540,"results":"89","hashOfConfig":"62"},{"size":621,"mtime":1621538138540,"results":"90","hashOfConfig":"62"},{"size":2494,"mtime":1621538138548,"results":"91","hashOfConfig":"62"},{"size":2493,"mtime":1621782040949,"results":"92","hashOfConfig":"62"},{"size":251,"mtime":1621538138540,"results":"93","hashOfConfig":"62"},{"size":1011,"mtime":1621538138544,"results":"94","hashOfConfig":"62"},{"size":233,"mtime":1621538138544,"results":"95","hashOfConfig":"62"},{"size":335,"mtime":1621538138544,"results":"96","hashOfConfig":"62"},{"size":437,"mtime":1621538138544,"results":"97","hashOfConfig":"62"},{"size":1383,"mtime":1621684569611,"results":"98","hashOfConfig":"62"},{"size":1761,"mtime":1621684632522,"results":"99","hashOfConfig":"62"},{"size":649,"mtime":1621538138544,"results":"100","hashOfConfig":"62"},{"size":1235,"mtime":1621783881528,"results":"101","hashOfConfig":"62"},{"size":1813,"mtime":1621538138548,"results":"102","hashOfConfig":"62"},{"size":552,"mtime":1621538138548,"results":"103","hashOfConfig":"62"},{"size":393,"mtime":1621538138536,"results":"104","hashOfConfig":"62"},{"size":4408,"mtime":1621538138544,"results":"105","hashOfConfig":"62"},{"size":1050,"mtime":1621538138540,"results":"106","hashOfConfig":"62"},{"size":3614,"mtime":1621538138540,"results":"107","hashOfConfig":"62"},{"size":2665,"mtime":1621538138536,"results":"108","hashOfConfig":"62"},{"size":1290,"mtime":1621538138540,"results":"109","hashOfConfig":"62"},{"size":1303,"mtime":1621538138544,"results":"110","hashOfConfig":"62"},{"size":1114,"mtime":1621538138544,"results":"111","hashOfConfig":"62"},{"size":8325,"mtime":1621538138540,"results":"112","hashOfConfig":"62"},{"size":2437,"mtime":1621784462357,"results":"113","hashOfConfig":"62"},{"size":4604,"mtime":1621538138536,"results":"114","hashOfConfig":"62"},{"size":2292,"mtime":1621538138544,"results":"115","hashOfConfig":"62"},{"size":8037,"mtime":1621538138540,"results":"116","hashOfConfig":"62"},{"size":4182,"mtime":1621538138540,"results":"117","hashOfConfig":"62"},{"size":2204,"mtime":1621538138540,"results":"118","hashOfConfig":"62"},{"size":5678,"mtime":1621538138536,"results":"119","hashOfConfig":"62"},{"size":3766,"mtime":1621538138544,"results":"120","hashOfConfig":"62"},{"size":972,"mtime":1621538138544,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"1sfkmmu",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"124"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"124"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"124"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"124"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":6,"source":"158","usedDeprecatedRules":"124"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"124"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"124"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"124"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"124"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"124"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"124"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"124"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"124"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"124"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"124"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"124"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"124"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"124"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"124"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"124"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"236","usedDeprecatedRules":"124"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"124"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"124"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"124"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"248","usedDeprecatedRules":"124"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"124"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"124"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"124"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"124"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"124"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"124"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":2,"source":"271","usedDeprecatedRules":"124"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"124"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"/root/Documents/projects/social-network/src/index.js",[],["277","278"],"/root/Documents/projects/social-network/src/Store/redux-store.js",[],"/root/Documents/projects/social-network/src/App.js",["279","280","281","282"],"/root/Documents/projects/social-network/src/reducers/profileReducer.js",["283","284","285"],"import {profileApi} from '../api/api.js';\nimport {stopSubmit} from 'redux-form';\n\nconst ADD_POST = 'ADD-POST';\nconst ADD_NEW_TEXT = 'ADD-NEW-TEXT';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_USER_POSTS = 'SET-USER-POSTS';\nexport const SET_LIKES_POST = 'SET-LIKES-POST';\nconst DELETE_POST = 'DELETE-POST';\nconst UPDATE_PROFILE = 'UPDATE-PROFILE';\nconst SET_PROFILE_FETCHING = 'SET-PROFILE-FETCHING';\nconst SET_POSTS_FETCHING = 'SET-POSTS-FETCHING';\nconst RESET_PROFILE_STATE = 'RESET-PROFILE-STATE';\n\nlet initial_state = {\n  profile: null,\n  postsIsFetching: false,\n  profileIsFetching: false,\n  posts: [\n  ],\n};\n\nlet profileReducer = (state = initial_state, action) => {\n\n  switch (action.type) {\n    case(ADD_POST):\n      return {\n        ...state,\n        posts: state.posts.concat(action.post),\n      };\n    case(ADD_NEW_TEXT):\n      return addNewText(state, action.text);\n    case(SET_USER_PROFILE):\n      return setUserProfile(state, action.profile);\n    case SET_USER_POSTS:\n      return {\n        ...state, \n        //...state.profile,\n        posts: action.posts\n      };\n    case SET_LIKES_POST:\n      let posts = state.posts.map(post => {\n        if(post.id != action.post.id){\n          return post;\n        }else{\n          return action.post;\n        };\n      });\n      return {\n        ...state,\n        posts,\n      };\n    case DELETE_POST: \n      return {\n        ...state,\n        posts: state.posts.filter(post => {\n          return (post.id != action.post.id)\n        }),\n      };\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        profile: {...state.profile},\n      };\n    case SET_PROFILE_FETCHING: \n      return {\n        ...state,\n        profileIsFetching: action.profileIsFetching,\n      };\n    case SET_POSTS_FETCHING:\n      return {\n        ...state,\n        postsIsFetching: action.postsIsFetching,\n      };\n    case RESET_PROFILE_STATE:\n      return initial_state;\n  };\n  return state;\n};\n\nfunction addNewText (state, text) {\n  let state_copy = {...state};\n  state_copy.textNewPost = text;\n  return state_copy;\n};\n\nfunction setUserProfile (state, profile) {\n  let state_copy = {...state};\n  // debugger;\n  state_copy.profile = profile;\n  // debugger;\n  return state_copy;\n};\n\nexport const getProfile = options => dispatch => {\n  dispatch(setProfileFetchingAC(true));\n  profileApi.getProfile(options)\n    .then(data => {\n      dispatch(setProfileFetchingAC(false));\n      if(data.data.result_code === 0){\n        dispatch(setUserProfileActionCreator(data.data));\n      }\n    });\n};\n\nexport const getPosts = options => dispatch => {\n  dispatch(setPostsFetchingAC(true));\n  profileApi.getPosts(options)\n    .then(data => {\n      dispatch(setPostsFetchingAC(false));\n      if(data.result_code === 0 ){\n        dispatch(setUserPosts(data.posts));\n      }\n    });\n};\n\nexport const createPost = options => dispatch => {\n  profileApi.createPost(options)\n    .then(data => {\n      if(data.result_code === 0) {\n        dispatch(addPost(data.post));\n      }else{\n        dispatch(stopSubmit('create_post', {_error: data.message}));\n      };\n    });\n};\n\nexport const likedPost = options => dispatch => {\n  return profileApi.likedPost(options)\n    .then(data => {\n      if(data.result_code === 0) {\n        return dispatch(setPostLikes( data.post, ));\n      }else{\n      };\n    });\n};\n\nexport const deletePost = options => dispatch => {\n  profileApi.deletePost(options)\n    .then(data => {\n      if(data.result_code === 0) {\n        dispatch(deletePostActionCreator( data.post ));\n      }else{\n      };\n    });\n};\n\nexport const updateProfile = options => dispatch => {\n  return profileApi.updateProfile(options)\n    .then(data => {\n      if(data.result_code === 0) {\n        return dispatch(updateProfileActionCreator() );\n      }else{\n      };\n    });\n};\n\n\nexport const setUserProfileActionCreator = profile => ({type: SET_USER_PROFILE, profile});\nexport const setUserPosts = posts => ({type: SET_USER_POSTS, posts});\nexport const addPost = post => ({type: ADD_POST, post});\nexport const setPostLikes = (post) => ({type: SET_LIKES_POST, post}); \nexport const deletePostActionCreator = (post) => ({type: DELETE_POST, post});\nexport const updateProfileActionCreator = () => ({type: UPDATE_PROFILE});\nconst setProfileFetchingAC = profileIsFetching => ({type: SET_PROFILE_FETCHING, profileIsFetching});\nconst setPostsFetchingAC = postsIsFetching => ({type: SET_POSTS_FETCHING, postsIsFetching});\nexport const resetProfileState = () => ({type: RESET_PROFILE_STATE});\n\nexport default profileReducer;\n\n\n","/root/Documents/projects/social-network/src/reducers/messagesReducer.js",["286","287","288","289"],"import {messageApi} from '../api/api';\n\nexport const ADD_NEW_TEXT_MESSAGE = 'ADD-NEW-TEXT-MESSAGE';\nexport const ADD_NEW_MESSAGE = 'ADD-NEW-MESSAGE';\nexport const SET_DIALOGS = 'SET-DIALOGS';\nexport const SET_DIALOG = 'SET-DIALOG';\nexport const SELECT_DIALOG = 'SELECT-DIALOG';\nexport const WS_MESSAGE = 'WS-MESSAGE';\nexport const READ_MESSAGES = 'READ-MESSAGES';\nconst SET_DIALOGS_IS_FETCHING = 'SET-DIALOGS-IS-FETCHING';\nconst SET_DIALOG_IS_FETCHING = 'SET-DIALOG-IS-FETCHING';\n\nlet initial_state = {\n  dialogsIsFetching: true,\n  dialogIsFetching: true,\n  currentDialog: '',\n  newMessage: 0,\n  dialogs: [],\n  dialog: {},\n};\n\nlet messagesReducer = (state = initial_state, action) => {\n  switch (action.type) {\n    case SET_DIALOGS_IS_FETCHING: \n      return {\n        ...state, \n        dialogsIsFetching: action.dialogsIsFetching,\n      };\n    case SET_DIALOG_IS_FETCHING: \n      return {\n        ...state, \n        dialogIsFetching: action.dialogIsFetching,\n      };\n    case SET_DIALOGS: \n      return {\n        ...state,\n        dialogs: action.dialogs,\n      };\n    case SET_DIALOG: \n      return {\n        ...state,\n        dialog: action.dialog,\n      };\n    case SELECT_DIALOG:\n      return {\n        ...state,\n        currentDialog: action.dialog_id,\n      }\n    case READ_MESSAGES: \n      let newState = {\n        ...state,\n        dialog: {...state.dialog,\n          messages: state.dialog.messages.map(mess => {\n            return action.messages.find(item => mess.id == item.id)? {...mess, read: true}: mess;\n          }),\n        },\n      }\n      return newState;\n    default: return state;\n  };\n};\n\nconst setDialogsIsFetching = dialogsIsFetching => ({type: SET_DIALOGS_IS_FETCHING, dialogsIsFetching});\nexport const setDialogIsFetching = dialogIsFetching => ({type: SET_DIALOG_IS_FETCHING, dialogIsFetching});\n\nconst setDialogsActionCreator = dialogs => ({type: SET_DIALOGS, dialogs});\n\nconst setDialogActionCreator = dialog => ({type: SET_DIALOG, dialog});\n\nconst readMessagesActionCreator = messages => ({type: READ_MESSAGES, messages});\n\nexport const selectDialog = dialog_id => ({type: SELECT_DIALOG, dialog_id});\n\nexport const getDialogs = options => dispatch => {\n  dispatch(setDialogsIsFetching(true));\n  return messageApi.getDialogs(options)\n    .then(res => {\n      dispatch(setDialogsIsFetching(false));\n      if(res.data.result_code == 0){\n        return dispatch(setDialogsActionCreator(res.data.dialogs) );\n      }else{\n      };\n    });\n}\nexport const getDialogsWithoutToggle = options => dispatch => {\n  return messageApi.getDialogs(options)\n    .then(res => {\n      if(res.data.result_code == 0){\n        return dispatch(setDialogsActionCreator(res.data.dialogs) );\n      }else{\n      };\n    });\n}\n\nexport const getDialog = options => dispatch => {\n  return messageApi.getDialog(options)\n    .then(res => {\n      if(res.data.result_code === 0){\n        let dialog = {\n          date: res.data.date,\n          dateLastModified: res.data.dateLastModified,\n          user_id: res.data.user_id,\n          messages: res.data.messages,\n          user_avatar: res.data.user_avatar,\n          user_name: res.data.user_name,\n          dialog_id: res.data.dialog_id,\n        };\n        return dispatch(setDialogActionCreator(dialog))\n      } else {\n      }\n    });\n}\n\nexport const deleteDialog = options => dispatch => {\n  messageApi.deleteDialog(options)\n    .then(res => {\n      if(res.data.result_code === 0) {\n        dispatch(getDialogs(options));\n        dispatch(selectDialog(''));\n      } else {\n      }\n    });\n}\n\nexport const sendMessage = options => dispatch => {\n  return messageApi.sendMessage(options)\n    .then(data => {\n      if(data.result_code == 0){\n        dispatch(selectDialog(data.id));\n        dispatch({type: WS_MESSAGE, user_id: data.user_id});\n        dispatch(getDialogsWithoutToggle(options));\n      }\n    });\n};\n\nexport const readMessages = options => dispatch => {\n  console.log(options)\n  messageApi.readMessages(options)\n    .then(data => {\n      if(data.data.result_code === 0){\n        console.log('readMessages');\n        console.log(data);\n        dispatch(readMessagesActionCreator(options.messages));\n        //dispatch(getDialog(options));\n      }\n    });\n}\n\nexport default messagesReducer;\n\n","/root/Documents/projects/social-network/src/reducers/sidebarReducer.js",[],"/root/Documents/projects/social-network/src/reducers/usersReducer.js",["290","291","292"],"import {userApi, followApi} from '../api/api.js';\n\nexport const FOLLOW = 'FOLLOW';\nexport const UNFOLLOW = 'UNFOLLOW';\n\nconst SET_USERS = 'SET-USERS';\nconst SET_USERS_TOTAL_COUNT = 'SET-USERS-TOTAL-COUNT';\nconst SET_PAGE_CURRENT = 'SET-PAGE-CURRENT';\nconst SET_IS_FETCHING = 'SET-IS-FETCHING';\nconst ADD_IS_FOLLOWING_FETCHING = 'ADD-IS-FOLLOWING-FETCHING';\nconst REMOVE_IS_FOLLOWING_FETCHING = 'REMOVE-IS-FOLLOWING-FETCHING';\n\nconst initial_state = {\n  options: {\n    page_size: 8,\n    page_current: 1,\n    total_users_count: 0,\n    is_fetching: false,\n    is_following_fetching: [],\n  },\n  users: [],\n};\n\nlet usersReducer = (state = initial_state, action) => {\n  switch (action.type) {\n    case SET_USERS:\n      return setUsers(state, action.users);\n    case SET_USERS_TOTAL_COUNT:\n      return setTotalUsersCount(state, action.total_users_count);\n    case SET_PAGE_CURRENT:\n      return setPageCurrent(state, action.page_current);\n    case SET_IS_FETCHING: \n      return setIsFetching(state, action.is_fetching);\n    default:\n      return state;\n  };\n};\n\nlet setUsers = (state, users) => {\n  let state_copy = {...state};\n  state_copy.users = [...users];\n  return state_copy;\n};\n\nlet setTotalUsersCount = (state, total_users_count) => {\n  let state_copy = {...state};\n  state_copy.options = {...state.options};\n  state_copy.options.total_users_count = total_users_count;\n  return state_copy;\n};\n\nlet setPageCurrent = (state, page_current) => {\n  let state_copy = {...state};\n  state_copy.options = {...state.options};\n  state_copy.options.page_current = page_current;\n  return state_copy;\n};\n\nlet setIsFetching = (state, is_fetching) => {\n  let state_copy = {...state};\n  state_copy.options = {...state.options};\n  state_copy.options.is_fetching = is_fetching;\n  return state_copy;\n}\n\nlet setUsersActionCreator = users => {\n  return {type: SET_USERS, users};\n};\n\nlet setUsersCountActionCreator = total_users_count => {\n  return {type: SET_USERS_TOTAL_COUNT, total_users_count};\n};\n\nlet setPageCurrentActionCreator = page_current => {\n  return {type: SET_PAGE_CURRENT, page_current};\n};\n\nlet setIsFetchingActionCreator = is_fetching => {\n  return {type: SET_IS_FETCHING, is_fetching};\n};\n\nexport const getUsers = (options) => dispatch => {\n  dispatch(setPageCurrentActionCreator(options.page_current));\n  dispatch(setIsFetchingActionCreator(true));\n  userApi.getUsers(options)\n    .then(data => {\n      dispatch(setUsersActionCreator(data.items) );\n      dispatch(setUsersCountActionCreator(data.totalCount) );\n      dispatch(setIsFetchingActionCreator(false) );\n    });\n}\n\nexport default usersReducer;\n","/root/Documents/projects/social-network/src/reducers/notifi.js",[],"/root/Documents/projects/social-network/src/reducers/authReducer.js",["293","294"],"/root/Documents/projects/social-network/src/middleware/authMiddleware.js",["295"],"import {SET_AUTH_DATA} from '../reducers/authReducer.js';\nimport {WS_MESSAGE, getDialogs} from '../reducers/messagesReducer.js';\n\nconst authMiddleware = store => next => action => {\n\n  let state = store.getState();\n  let result;\n\n  switch(action.type) {\n    case SET_AUTH_DATA:\n      result = next(action);\n      state = store.getState();\n      console.log('STATE: ');\n      console.log(state);\n      let options = {\n        id: state.auth.id,\n        token: state.auth.token,\n      };\n      console.log('OPTIONS');\n      console.log(options);\n      store.dispatch(getDialogs(options));\n      break;\n    default:\n      result = next(action);\n  };\n\n  return result;\n}\n\nexport default authMiddleware;\n","/root/Documents/projects/social-network/src/middleware/ws.js",["296","297","298","299","300","301","302"],"/root/Documents/projects/social-network/src/components/Header/HeaderContainer.jsx",["303","304"],"import React from 'react';\nimport {connect} from 'react-redux';\nimport * as axios from 'axios';\nimport Header from './Header';\nimport {setAuthDataActionCreator} from '../../reducers/authReducer.js';\n\nclass HeaderContainer extends React.Component {\n    componentDidMount() {\n    };\n\n    render() {\n        return <Header {...this.props} />\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.auth,\n    };\n};\n\nconst mapDispatchToProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);\n\n","/root/Documents/projects/social-network/src/components/Sidebar/Sidebar.jsx",["305","306","307","308","309","310","311","312","313"],"/root/Documents/projects/social-network/src/components/Messages/Messages.jsx",["314","315","316","317","318","319","320","321","322","323"],"/root/Documents/projects/social-network/src/components/Profile/Profile.jsx",["324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341"],"import React from 'react';\nimport styles from './Profile.module.css';\nimport {connect} from 'react-redux';\nimport {NavLink, Route} from 'react-router-dom';\nimport {compose} from 'redux';\nimport {withRouter} from 'react-router-dom';\nimport {getProfile} from '../../reducers/profileReducer.js';\n\n//hocs\nimport WithAuthData from '../../hocs/WithAuthData.jsx';\nimport WithSignInRedirect from '../../hocs/WithSignInRedirect.jsx';\n\n//reducers\nimport {sendMessage, getDialogs, selectDialog} from '../../reducers/messagesReducer';\n\n//components\nimport Preloader from '../commons/Preloader/Preloader.jsx';\nimport DropDownMenu from '../commons/DropDownMenu/DropDownMenu';\nimport Posts from './Posts/Posts';\nimport Subscribers from './Subscribers/Subscribers';\nimport Subscribed from './Subscribed/Subscribed';\nimport Modal from '../commons/Modal/Modal';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport BackButtom from '../commons/BackButton/BackButton.jsx';\nimport FetchingToggle from '../commons/FetchingToggle/FetchingToggle.jsx';\nimport AvatarByPath from '../commons/AvatarByPath/AvatarByPath.jsx';\n\nimport avatar from '../../assets/images/avatar_default.png';\n\n\nclass Profile extends React.Component {\n\n  state = {\n    profInfoViewMode: false,\n    scrollTop: 0,\n    load: false,\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillUpdate() {\n  }\n\n  changeVisibleModal = ((bool) => this.setState({profInfoViewMode: bool})).bind(this);\n\n  onLoad = () => {\n    this.setState({load: true});\n  }\n  onError = () => {\n    this.setState({load: true, photo: avatar});\n  }\n\n  render() {\n\n    if(!this.props.profile) {\n      return <Preloader />;\n    };\n    let {status, name, photos, contacts, email} = this.props.profile;\n\n    let menu_items = [\n      {\n        value: 'more info',\n        onClick: ((e) => {\n          this.changeVisibleModal(true)\n        }).bind(this),\n      },\n      {\n        value: 'subscribers',\n        onClick: (e => {\n          this.props.history.push(`/profile/${this.props.profile.id}/subscribers/`);\n        }).bind(this),\n      },\n      {\n        value: 'subscribed',\n        onClick: (e => {\n          this.props.history.push(`/profile/${this.props.profile.id}/subscribed/`);\n        }).bind(this),\n      },\n    ];\n\n    if(this.props.auth.id !== this.props.profile.id){\n      menu_items.push({\n        value: 'send message',\n        onClick: ((e) => {\n\n          let options = {\n            id: this.props.auth.id,\n            token: this.props.auth.token,\n            user_id: this.props.profile.id,\n            message: {\n              date: new Date(),\n              text: '',\n            },\n          };\n\n          this.props.history.push(`/messages/${this.props.auth.id}/`);\n          this.props.selectDialog('');\n          this.props.sendMessage(options);\n          this.props.getDialogs(options);\n        }).bind(this),\n      });\n    };\n\n    let photoSmall = this.props.profile ? this.props.profile.photos.small: avatar;\n    return <div className={styles.wrp} >\n\n      <div className={styles['header-wrp']}>\n        <div className={styles.header}\n\n          style={ (() => {\n            return !this.props.history.location.pathname.split('/').includes('posts')? \n              {'grid-template-columns': '80px 1fr 80px'}: {'grid-template-columns': '1fr 80px'}\n          })() } >\n\n          {\n            !this.props.history.location.pathname.split('/').includes('posts') &&\n              <div>\n              <BackButtom func={(()=>{\n                this.props.history.push(`/profile/${this.props.profile.id}/posts/`);\n          }).bind(this)}/>\n        </div>\n      }\n\n      <div className={styles['user-info']}>\n        <div className={styles.avatar}>\n          <AvatarByPath id={this.props.profile.id} photo={photoSmall} />\n       </div>\n\n        <div className={styles['profile-name']} >\n          <h5>\n            {this.props.profile.name}\n          </h5>\n        </div>\n      </div>\n\n      <div>\n        <div >\n          <DropDownMenu \n            items={menu_items}/>\n        </div>\n      </div>\n\n      </div>\n      </div>\n\n      <div>\n        <Route component={Posts} path={'/profile/:user_id/posts'} />\n        <Route component={Subscribers} path={'/profile/:user_id/subscribers'}  />\n        <Route component={Subscribed} path={'/profile/:user_id/subscribed'}  />\n      </div>\n      {\n        this.state.profInfoViewMode && <Modal width={800} height={420} \n          Component={ProfileInfo}\n          changeVisibleModal={this.changeVisibleModal} />\n      }\n    {\n      this.props.profileIsFetching\n        && \n          <div className={styles['fetching-wrp']}>\n            <div className={styles['fetching']}>\n              <FetchingToggle width={50} height={50}/>\n            </div>\n          </div>\n    }\n      </div>\n  }\n};\n\nclass ProfileContainer extends React.Component {\n  constructor(props) {\n    super(props);\n  };\n\n  componentDidMount () {\n\n    // let user_id = this.props.match.params.user_id;\n    let user_id = this.props.auth.id;\n    user_id = user_id;\n    let options = {\n      user_id,\n      id: this.props.auth? this.props.auth.id: '',\n      token: this.props.auth? this.props.auth.token: '',\n    };\n    this.props.getProfile(options);\n  }\n\n  componentWillUpdate(props) {\n\n    if(props.profile !== null){\n      let route_profile = props.location.pathname\n        .split('/').filter(item => item !== '')[1];\n      let current_profile = props.profile.id;\n\n      if(route_profile !== current_profile) {\n        let user_id = route_profile;\n        let options = {\n          user_id,\n          id: this.props.auth? this.props.auth.id: '',\n          token: this.props.auth? this.props.auth.token: '',\n        };\n        this.props.getProfile(options);\n      };\n    };\n  }\n\n  render() {\n\n    return <Profile {...this.props} />\n  }\n}\n\nlet mapsStateToProps = (state) => {\n  return {\n    profileIsFetching: state.profilePage.profileIsFetching,\n    postsIsFetching: state.profilePage.postsIsFetching,\n    profile: state.profilePage.profile,\n    id: state.profilePage.profile && state.profilePage.profile.id,\n    posts: state.profilePage.posts,\n    subscribers: state.profilePage.profile && state.profilePage.profile.subscribers || [],\n    subscribed: state.profilePage.profile && state.profilePage.profile.subscribed_to || [],\n  };\n};\n\nexport default compose(\n  connect(mapsStateToProps, {getProfile, sendMessage, getDialogs, selectDialog}),\n  WithAuthData,\n  WithSignInRedirect,\n)(withRouter(ProfileContainer));\n","/root/Documents/projects/social-network/src/components/News/News.jsx",["342"],"import React from 'react';\nimport cls from './News.module.css';\n\nconst News = (props) => {\n    return (\n        <div>\n            News\n        </div>\n    );\n};\n\nexport default News;\n\n","/root/Documents/projects/social-network/src/components/Music/Music.jsx",["343"],"import React from 'react';\nimport cls from './Music.module.css';\n\nconst Music = (props) => {\n    return (\n        <div>\n            Music\n        </div>\n    );\n};\n\nexport default Music;\n","/root/Documents/projects/social-network/src/components/Settings/Settings.jsx",["344"],"import React from 'react';\nimport cls from './Settings.module.css';\n\nconst Settings = (props) => {\n    return (\n        <div>\n            Settings\n        </div>\n    );\n};\n\nexport default Settings;\n","/root/Documents/projects/social-network/src/components/Users/Users.jsx",["345","346","347","348","349","350","351","352","353","354","355","356"],"/root/Documents/projects/social-network/src/components/Auth/SignIn.jsx",[],"/root/Documents/projects/social-network/src/components/Auth/SignUp.jsx",["357"],"/root/Documents/projects/social-network/src/components/Notification/Notification.jsx",["358","359","360"],"import React from 'react';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport {NavLink} from 'react-router-dom';\nimport WithAuthData from '../../hocs/WithAuthData.jsx';\nimport {removeNotification, setOpacity} from '../../reducers/notifi.js';\nimport CloseButton from '../commons/CloseButton/CloseButton.jsx';\nimport Avatar from '../commons/Avatar/Avatar.jsx';\n\nimport styles from './Notification.module.css';\nimport avatar from '../../assets/images/avatar_default.png';\n\nimport {getHoursMinutesSeconds} from '../../utils/functions.js';\n\nclass Notification extends React.Component {\n\n  componentDidMount () {\n\n    //alert('Create component');\n    let interval = setInterval(() => {\n      // console.log(interval + ' interval');\n      setTimeout(() => {\n        this.props.notifications.forEach(item => {\n          let now = new Date().getTime();\n          let end = item.date + 7 * 1000;\n          let rest = (end - now)/(end - item.date);\n          rest = rest < 0? 0: rest;\n          // console.log(rest);\n          if(now > end) this.props.removeNotification(item.id);\n          else if (rest < .8) this.props.setOpacity(item.id, rest);\n        });\n      }, 20);\n    }, 100);\n  }\n\n  render() {\n\n    let avatarStyles = {\n      wrp: {\n        width: 50,\n        height: 50,\n      },\n      avatar: {\n      },\n    };\n\n    let notifications = this.props.notifications.map(item => \n      <div className={styles['item-wrp']}>\n        <div className={styles.item} \n          style={ {opacity: item.opacity} }>\n          <Avatar id={item.user.id} styles={avatarStyles}/>\n          <div>\n            <div className={styles.name}>\n              {item.user.name}\n            </div>\n            <div className={styles.description}>\n              {item.description + ' ' + getHoursMinutesSeconds(item.date)}\n            </div>\n          </div>\n          <div className={styles.close}>\n            <CloseButton close={this.props.removeNotification.bind(this, item.id)} />\n          </div>\n        </div>\n      </div>\n    );\n\n\n    return <div className={styles.wrp}\n      style={ {bottom: 80*this.props.notifications.length} }>\n      <div className={styles.container}>\n        {notifications}\n      </div>\n    </div>\n  }\n}\n\nconst mapsStateToProps = state => {\n  return {\n    notifications: state.notifi.notifications,\n  }\n}\n\nconst mapsDispatchToProps = {\n  removeNotification,\n  setOpacity,\n}\n\nexport default compose (\n  WithAuthData,\n  connect(mapsStateToProps, mapsDispatchToProps)\n)(Notification);\n\n","/root/Documents/projects/social-network/src/api/api.js",[],"/root/Documents/projects/social-network/src/hocs/WithAuthData.jsx",[],"/root/Documents/projects/social-network/src/hocs/WithSignInRedirect.jsx",["361"],"/root/Documents/projects/social-network/src/components/Auth/SignInForm.jsx",["362","363","364","365","366","367","368","369","370"],"/root/Documents/projects/social-network/src/components/Auth/SignUpForm.jsx",["371","372","373","374","375","376"],"import React from 'react';\nimport {Field,Fields, reduxForm} from 'redux-form';\nimport {NavLink} from 'react-router-dom';\nimport {requiredFields, matchPasswords, minLengthCreator, \n  maxLengthCreator, emailValidate, onlyLetters, complexPassword} from '../../utils/validators.js';\nimport {nameNor, } from '../../utils/fieldNormalizators.js';\nimport {Input, Button, ErrorForm, } from '../commons/FormsControls/FormsControls.jsx';\nimport FetchingToggle from '../commons/FetchingToggle/FetchingToggle.jsx';\nimport styles from './Auth.module.css';\n\nconst maxLength20 = maxLengthCreator(20);\nconst maxLength30 = maxLengthCreator(30);\nconst maxLength50 = maxLengthCreator(50);\nconst minLength6 = minLengthCreator(6);\n\nclass SignUpForm extends React.Component {\n\n  render() {\n    const {handleSubmit} = this.props;\n\n    return <div> \n      <form onSubmit={handleSubmit} className={styles.items_container} >\n        {\n          this.props.auth.is_fetching \n            && <div>\n            <div className={styles['fetching-wrp']}>\n        <div className={styles['fetching']}>\n          <FetchingToggle />\n        </div>\n      </div>\n    </div>\n        || this.props.server_error && <ErrorForm message={this.props.server_error} /> \n        || <div> </div>\n        }\n        <div>\n          <Field name='first_name' autoFocus={true}\n            validate={[requiredFields, maxLength20, onlyLetters]}\n            normalize={nameNor}\n            component={Input}\n            placeholder=' Enter your first name' />\n        </div>\n\n        <div>\n          <Field name='last_name' \n            validate={[requiredFields, maxLength20, onlyLetters]}\n            normalize={nameNor}\n            component={Input}\n            placeholder=' Enter your last name' />\n        </div>\n        <div>\n          <Field name='email' validate={[requiredFields, emailValidate, \n              maxLength50, minLength6]}\n            component={Input}\n            placeholder=' Enter your email' />\n        </div>\n        <div>\n          <Field name='password' validate={[requiredFields, \n              maxLength20, minLength6, complexPassword]}\n            component={Input}\n            type='password'\n            placeholder=' Create your password' />\n        </div>\n        <div>\n          <Field name='check password' \n            type='password'\n            validate={[requiredFields, matchPasswords ]}\n            component={Input}\n            placeholder=' Enter password again' />\n        </div>\n        <div className={styles.button_wrapper}>\n          <Button error={this.props.error} name={'Sign Up'} type='submit' \n            disabled={this.props.auth.is_fetching}/>\n        </div>\n        <NavLink to='/signin'>\n          Or authorization\n        </NavLink>\n\n    </form>\n                                        </div>\n  }\n};\n\nexport default reduxForm({form: 'signup'})(SignUpForm);\n","/root/Documents/projects/social-network/src/components/Sidebar/AuthInfo/AuthInfo.jsx",["377","378"],"import React from 'react';\nimport styles from './AuthInfo.module.css';\nimport {NavLink} from 'react-router-dom';\nimport default_avatar from '../../../assets/images/avatar_default.png';\n\nimport WithAuthData from '../../../hocs/WithAuthData.jsx';\n\nimport AvatarByPath from '../../commons/AvatarByPath/AvatarByPath.jsx';\n\nlet AuthInfo = (props) => {\n\n  let avatar = props.auth.photo || default_avatar;\n  let indicator_styles = '';\n  switch(props.auth.ws.readyState){\n    case 0:     //'CONNECTING':\n      indicator_styles = 'rgba(127, 155, 0, .7)';\n      break;\n    case 1:     //'OPEN':\n      indicator_styles = 'rgba(127, 255, 0, .7)';\n      break;\n    case 2:     //'CLOSING':\n      indicator_styles = 'rgba(255, 127, 0, .7)';\n      break;\n    case 3:     //'CLOSED':\n      indicator_styles = 'rgba(255, 44, 0, .7)';\n      break;\n  };\n\n  return <div className={styles.wrapper}>\n    <div>\n      <NavLink  className={styles.avatar_wrapper} to={`/profile/${props.auth.id}/posts`}\n        onClick={() => { props.setEditMode(false) } }>\n        <div>\n          <div className={styles.avatar}>\n            <AvatarByPath id={props.auth.id} photo={props.auth.photo}/>\n          <div className={styles.indicator} \n            style={ {\n              'background-color': indicator_styles,\n              'box-shadow': `0 0 5px ${indicator_styles}`,\n            } }>\n          </div>\n          </div>\n        </div>\n      </NavLink>\n      <br></br>\n      <span className={styles.name}>{props.auth.name}</span>\n      <br></br>\n      <span className={styles.email}>{props.auth.email}</span>\n      <br></br>\n    </div>\n    <div>\n      <NavLink className={styles.logout_button} to='/signin' \n        onClick={()=>{\n          props.setEditMode(false);\n          setTimeout(() => props.setAuthData({is_auth: false}));\n        }}>\n        ...Exit\n      </NavLink>\n    </div>\n  </div>\n\n};\n\nexport default WithAuthData(AuthInfo);\n","/root/Documents/projects/social-network/src/components/Sidebar/MenuItem/MenuItem.jsx",[],"/root/Documents/projects/social-network/src/utils/functions.js",["379","380"],"const MONTHS2 = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst MONTHS1 = [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \"july\", \"august\", \"september\", \"october\", \"november\", \"december\"];\nconst MONTHS = [\"jan.\", \"feb.\", \"mar.\", \"apr.\", \"may\", \"june\", \"july\", \"aug.\", \"sep.\", \"oct.\", \"nov.\", \"dec.\"];\n\nexport function getFormatedDate(date){\n\n    date = new Date(date);\n      let getTwoSymb = (str) => {\n        str += \"\";\n        str = str.length < 2 ? `0${str}`: str;\n        return str;\n      };\n\n      let hrs_mnt_sec = [\n        getTwoSymb( date.getHours() ),\n        getTwoSymb( date.getMinutes() ),\n        getTwoSymb( date.getSeconds() )\n      ].join(\":\");\n\n    let now = new Date();\n    let diff = now - date;\n    let str = '';\n\n    let pm_or_am = date % (1000*3600*24) > 1000*3600*12 ? ' am': ' pm';\n\n    if(diff > (3600*1000*24*364)){\n        str = 'over a year ago...';\n    }else if(diff > 3600*24*1000){\n        str = `${MONTHS2[date.getMonth()]} ${date.getDate()}`\n    };\n\n    \n    return str || hrs_mnt_sec + pm_or_am;\n\n}\n\nexport function getHoursMinutes (date) {\n  date = new Date(date);\n  let minutes = date.getMinutes();\n  minutes = minutes > 9? minutes: '0' + minutes;\n  let hours = date.getHours();\n  hours = hours > 9? hours: '0' + hours;\n  return hours + ':' + minutes;\n}\n\nexport function getDateMonth (date) {\n   date = new Date(date);\n  let day = date.getDate();\n  let month = MONTHS2[date.getMonth()];\n\n  return month + ' ' + day;\n}\n\nexport function getHoursMinutesSeconds (date) {\n  date = new Date(date);\n  let seconds = date.getSeconds();\n  seconds = seconds > 9? seconds: '0' + seconds;\n  return getHoursMinutes(date) + ':' + seconds;\n}\n\n\n\nexport function fitImage (e) {\n        let img = new Image();\n        img.src = e.target.currentSrc;\n        let width, height;\n        if(true){\n            width = e.currentTarget.parentElement.clientWidth;\n            height = width * img.height/ img.width;\n        }else if(img.width < this.state.widthMin){\n            width = this.state.widthMin;\n            height = this.state.widthMin * img.height / img.width;\n        }else if(img.width < this.state.widthMax){\n            width = img.width;\n            height = img.height;\n        }else{\n            \n            width = this.state.widthMax;\n            height = this.state.widthMax * img.height / img.width;\n        };\n\n        this.setState({ width, height });\n\n    };\n\n\n","/root/Documents/projects/social-network/src/components/Users/PaginationBar/PaginationBar.jsx",["381","382","383","384","385","386"],"/root/Documents/projects/social-network/src/components/Users/Filter/Filter.jsx",[],"/root/Documents/projects/social-network/src/components/commons/FetchingToggle/FetchingToggle.jsx",["387"],"import React from 'react';\nimport toggle from '../../../assets/images/toggle.png';\nimport styles from './FetchingToggle.module.css';\n\nlet FetchingToggle = (props) => {\n  let {\n    height=30, width=30, \n    background='rgba(200, 200, 230, .2)', color='#bbb'\n  } = props;\n\n  return <div className={styles.wrp + ' ' + background}\n    style={ {\n      'background-color': background,\n      color,\n      width, height,\n    } }>\n    <svg fill=\"none\" class=\"rubicons refresh\" xmlns=\"http://www.w3.org/2000/svg\" width={width-4} height={height-4} viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"1.5\">\n      <path d=\"M15 9h6V3\" stroke-linecap=\"round\"></path>\n      <path d=\"M3 10c1.458-4.1 5-7 9-7a10.1192 10.1192 0 019 6\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n      <path d=\"M9 15H3v6\" stroke-linecap=\"round\"></path>\n      <path d=\"M21 14c-1.458 4.1-4.8 7-9 7a10.3682 10.3682 0 01-9-6\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n    </svg>\n  </div>\n};\n\nexport default FetchingToggle;\n","/root/Documents/projects/social-network/src/components/commons/ListIsEmpty/ListIsEmpty.jsx",[],"/root/Documents/projects/social-network/src/components/commons/Preloader/Preloader.jsx",["388"],"import React from 'react';\nimport loader_image from '../../../assets/images/loading.jpg';\nimport cls from './Preloader.module.css';\n\nconst Preloader = (props) => {\n\n    return (\n        <div className={cls.loader}>\n            <img className={cls.loader_image} src={loader_image} />\n        </div>\n    );\n};\n\nexport default Preloader;\n","/root/Documents/projects/social-network/src/components/commons/BackButton/BackButton.jsx",["389"],"import React from 'react';\nimport styles from './BackButton.module.css';\nimport {withRouter} from 'react-router-dom';\nimport {compose} from 'redux';\n\nimport backImg from '../../../assets/images/back.png';\n\nconst BackButton = (props) => {\n\n  return <button className={styles['back-button']}\n    onClick={() => {\n      props.func();\n    } } >\n    <img src={backImg} />\n  </button>\n}\n\nexport default compose(\n  withRouter\n)(BackButton);\n\n\n\n","/root/Documents/projects/social-network/src/components/commons/AvatarByPath/AvatarByPath.jsx",["390"],"/root/Documents/projects/social-network/src/components/commons/UserItem/UserItem.jsx",["391","392"],"/root/Documents/projects/social-network/src/components/commons/CloseButton/CloseButton.jsx",["393","394"],"import React from 'react';\nimport styles from './CloseButton.module.css';\nimport criss_cross from '../../../assets/images/criss-cross.png';\n\nlet CloseButton = (props) => {\n\n    return <div className={styles.wrp}>\n        <a onClick={\n            (e) => {\n                e.preventDefault();\n                props.close();\n          } }>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"rubicons x\" width=\"25\" height=\"25\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"1.5\" fill=\"none\">\n            <path d=\"M18 6L6 18M18 18L6 6\" stroke-linecap=\"round\"></path>\n          </svg>\n        </a>\n    </div>\n}\n\nexport default CloseButton;\n","/root/Documents/projects/social-network/src/components/commons/Avatar/Avatar.jsx",["395"],"/root/Documents/projects/social-network/src/utils/validators.js",["396","397","398"],"export const requiredFields = value => {\n    return value ? undefined: 'Field is required !';\n};\n\nexport const maxLengthCreator = (max_length) => (value) => {\n    return value && value.length <= max_length? undefined: `Max length is ${max_length}`;\n};\n\nexport const maxLengthOrNothingCreator = (max_length) => (value) => {\n    return !value || value.length <= max_length? undefined: `Max length is ${max_length}`;\n};\n\nexport const minLengthCreator = (min_length) => (value) => {\n    return value && value.length >= min_length? undefined: `Min length is ${min_length}`;\n};\n\nexport const minLengthOrNothingCreator = (min_length) => (value) => {\n    return !value || value.length >= min_length? undefined: `Min length is ${min_length}`;\n};\n\n\nexport const emailValidate = (address) => {\n   let reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n   return reg.test(address)? undefined: 'Enter correct email address';\n}\nexport const phoneNumberValidate = phone => {\n    let reg = /^(0|[1-9][0-9]{9})$/i;\n    return reg.test(phone) ? undefined: 'Enter correct phone number';\n}\nexport const onlyLetters = value => {\n    let reg = /^\\s*[a-z]*\\s*$/i;\n        return reg.test(value) ? undefined: 'Fields must been equals english letters only';\n}\nexport const matchPasswords = (password, all_values) => {\n  return password === all_values.password? undefined: 'Enter passwords is no match';\n}\nexport const complexPassword = value => { \n  let regs = [\n    /[a-z]/,\n    /[A-Z]/,\n    /\\d/,\n  ];\n  let test = regs.reduce((result, reg) => {\n    return result && reg.test(value);\n  }, true);\n\n  return test? undefined: 'Password must include numbers and letters in uppercase and lowercase';\n}\n\nexport const onlyDigit = value => {\n  return /^\\d*$/.test(value)? undefined: 'Fields must been equals digits only';\n}\n\n\n","/root/Documents/projects/social-network/src/utils/fieldNormalizators.js",[],"/root/Documents/projects/social-network/src/components/Header/Header.jsx",["399"],"import React from 'react';\nimport cls from './Header.module.css';\n\nconst Header = (props) => {\n    return (\n        <header className={cls.header}>\n            <div className={cls.logo_wrapper}>\n                <img className={cls.header_logo} src='https://images.opencollective.com/reactjs-dallas/7be2a10/logo/256.png' />\n            </div>\n        </header>\n    )\n};\n\nexport default Header;\n","/root/Documents/projects/social-network/src/components/commons/FormsControls/FormsControls.jsx",["400","401"],"import React from 'react';\nimport styles from './FormsControls.module.css';\n\nexport const Input = ({input, meta, ...props}) => {\n\n  let input_styles = [styles.input];\n  let error_heandler = meta.touched && !meta.active && meta.error;\n  let success_handler = meta.touched && !meta.active && !meta.error;\n  if(error_heandler)\n    input_styles.push(styles.input_error);\n  else if(success_handler)\n    input_styles.push(styles.input_success);\n\n  input_styles = input_styles.join(' ');\n\n  return <>\n    <div className={styles.input_wrapper}>\n      <div className={styles.input_container}>\n        <div className={styles.required_payload} >\n          { (input.name[0].toUpperCase() + input.name.slice(1))\n              .split('')\n              .map(item => item == '_'? ' ': item)}\n        </div>\n        <input className={input_styles} {...input} {...props} \n        ref={props.reference}/>\n        {error_heandler && <ErrorField error={meta.error} />}\n      </div>\n    </div>\n  </>\n};\n\nexport const Button = ({type, name, disabled}) => {\n\n  return <div className={styles.button_wrapper} >\n    <button className={styles.button} disabled={disabled} \n      type={type}>{name}</button>\n  </div>\n};\n\nconst ErrorField = ({error}) => {\n\n  return <div className={styles.field_error_wrapper}>\n    <span className={styles.field_error}> {error} </span>\n  </div>\n};\n\nexport const ErrorForm = ({message}) => {\n  return <div>\n    {\n      message && <>\n        <div className={styles.error_form}>\n    <span className={styles.error_form_text}> {message} </span>\n  </div>\n      </>\n    }\n    </div>\n};\n\nexport const TextArea = ({input, meta, ...props}) => {\n\n  let input_styles = [styles.input];\n  let error_heandler = meta.touched && !meta.active && meta.error;\n  let success_handler = meta.touched && !meta.active && !meta.error;\n  if(error_heandler)\n    input_styles.push(styles.input_error);\n  else if(success_handler)\n    input_styles.push(styles.input_success);\n\n  return <div className={styles.textarea_wrapper}>\n    <textarea {...input} {...props} \n      className='commons-font-for-input'\n    />\n    {error_heandler && <ErrorField error={meta.error} />}\n    </div>\n};\n\nexport const InputImage = ({ \n  input: { value: omitValue, onChange, onBlur, ...inputProps }, \n  meta: omitMeta, \n  change_photo_button,\n  ...props \n}) => {\n\n  let input = React.createRef();\n\n  setTimeout(() => {\n    if(change_photo_button.current){\n      change_photo_button.current.addEventListener(\"click\", () => {\n        if(input.current) input.current.click();\n      });\n    };\n  }, 100);\n\n  const adaptFileEventToValue = delegate => e => {\n\n    let fr = new FileReader();\n\n    fr.addEventListener(\"load\", function (e) {\n      if(props.avatar_ref.current) props.avatar_ref.current.src = fr.result;\n    }, false);\n\n    if(e.target.files.length) fr.readAsDataURL(e.target.files[0]);\n    return e.target.files[0]? delegate(e.target.files[0]): props.avatar_ref.current.src;\n  };\n\n  return <div>\n    <input \n      ref={input}\n      onChange={adaptFileEventToValue(onChange)}\n      onBlur={adaptFileEventToValue(onBlur)}\n      type=\"file\"\n      accept='image/*'\n      {...props.input}\n      {...props}\n      style={ {position: 'absolute', opacity: 0, width: 0, height: 0} }\n    />\n  </div>\n}\n\nexport const InputImage2 = ({ \n  input: { value: omitValue, onChange, onBlur, ...inputProps }, \n  meta: omitMeta, \n  choose_photo_button,\n  choosed_file_name,\n  ...props \n}) => {\n\n  let input = React.createRef();\n\n  setTimeout(() => {\n    if(choose_photo_button.current){\n      choose_photo_button.current.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        if(input.current) input.current.click();\n      }, false);\n    };\n  }, 100);\n\n  const adaptFileEventToValue = delegate => e => {\n\n    if(choosed_file_name.current)\n      choosed_file_name.current.innerText = e.target.files[0].name;\n\n    return delegate(e.target.files[0]);\n  };\n\n  const onSelectImage= e => {\n    const maxSize = 500000; //2MB\n    let file = e.currentTarget.files[0];\n    if(file.size > maxSize)\n      return;\n    adaptFileEventToValue(onChange)(e);\n  };\n\n  return <div className={styles['input-image2-wrp']}>\n    <input \n      ref={input}\n      onChange={onSelectImage}\n      onBlur={adaptFileEventToValue(onBlur)}\n      type=\"image\"\n      {...props.input}\n      {...props}\n      style={ {position: 'absolute', opacity: 0, width: 0, height: 0} }\n    />\n  </div>\n}\n\n","/root/Documents/projects/social-network/src/components/Profile/Subscribers/Subscribers.jsx",["402","403"],"import React from 'react';\nimport styles from './Subscribers.module.css';\nimport {connect} from 'react-redux';\nimport ListIsEmpty from '../../commons/ListIsEmpty/ListIsEmpty';\nimport UserItem from '../../commons/UserItem/UserItem';\nimport Anchor from '../../commons/Anchor/Anchor';\n\nclass Subscribers extends React.Component {\n\n  render() {\n\n    let subscribers = this.props.subscribers.map(user => \n      <UserItem user={user} /> );\n\n    let scrollbar = React.createRef();\n\n    return <div className={styles.wrp}>\n      <div style={ {position: 'absolute', bottom: 0, right: 30} }>\n        <Anchor scrollbar={scrollbar} />\n      </div>\n      <div ref={scrollbar} className={styles.scrollbar}>\n\n        {\n          this.props.subscribers\n            && this.props.subscribers.length\n            && subscribers\n            || <ListIsEmpty />\n        }\n      </div>\n    </div>\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    subscribers: state.profilePage.profile.subscribers,\n  };\n};\n\nexport default connect(mapStateToProps, {})(Subscribers);\n","/root/Documents/projects/social-network/src/components/Profile/Posts/Posts.jsx",["404","405","406","407","408","409","410","411"],"import React from 'react';\nimport {connect} from 'react-redux';\nimport {reduxForm, Field} from 'redux-form';\n\nimport styles from './Posts.module.css';\nimport default_avatar from '../../../assets/images/avatar_default.png';\n\nimport {getPosts, createPost} from '../../../reducers/profileReducer';\nimport Post from './Post/Post.jsx';\n\nimport {TextArea, Button} from '../../commons/FormsControls/FormsControls';\nimport Anchor from '../../commons/Anchor/Anchor';\nimport Modal from '../../commons/Modal/Modal';\nimport ListIsEmpty from '../../commons/ListIsEmpty/ListIsEmpty';\nimport CreatePost from './CreatePost/CreatePost';\nimport FetchingToggle from '../../commons/FetchingToggle/FetchingToggle.jsx';\n\n\nclass Posts extends React.Component {\n\n  state = {\n    postedModal: false,\n  }\n\n  componentDidMount() {\n    let options = {\n      user_id: this.props.profile.id, \n    }\n    this.props.getPosts(options);\n  }\n\n  componentWillUpdate() {\n    if(this.props.profile !== null){\n      let route_profile = this.props.location.pathname\n        .split('/').filter(item => item !== '')[1];\n      let current_profile = this.props.profile.id;\n\n      if(route_profile !== current_profile) {\n\n        let options = {\n          user_id: route_profile, \n        }\n\n        this.props.getPosts(options);\n      };\n    };\n  }\n\n  onSubmit = (post) => {\n    this.changeVisibleModal(false);\n    let {id, token} = this.props.auth;\n    let fd = new FormData();\n    fd.append('text', post.create_post);\n    fd.append('image', post.picture);\n    let options = {\n      id, token,\n      post: fd,\n    }\n    this.props.createPost(options);\n  };\n\n  changeVisibleModal = ((bool) => this.setState({postedModal: bool})).bind(this);\n\n  render() {\n\n    let scrollbar = React.createRef();\n    let posts = [];\n    if(this.props.posts){\n      posts = this.props.posts.map( (item) =>  {\n        return (\n          <Post avatar={default_avatar} \n            posts={this.props.posts}\n            post={item} \n            auth={this.props.auth} \n            scrollbar={scrollbar}\n            profile={this.props.profile}></Post>\n        ) \n      }\n      );\n      posts.reverse();\n    }\n\n    return (\n      <div className={styles.wrp} >\n        <div style={ {position: 'absolute', bottom: 0, right: 30} }>\n          <Anchor scrollbar={scrollbar} />\n        </div>\n        {\n          this.state.postedModal && <Modal width={700} height={500} Component={CreatePost}\n        changeVisibleModal={ this.changeVisibleModal }\n        onSubmit={this.onSubmit} />\n        }\n      {\n        this.props.auth.id == this.props.profile.id &&\n          <div className={styles.create_post_button_wrapper}>\n            <button className={styles.create_post_button}\n              onClick={() => {this.changeVisibleModal(true)}} >\n              CREATE NEW POST\n            </button>\n          </div>\n      }\n      <div ref={scrollbar} className={styles.scrollbar}>\n\n        {\n          this.props.postsIsFetching? \n\n            <div className={styles['fetching-wrp']}>\n        <div className={styles['fetching']}>\n          <FetchingToggle width={50} height={50}/>\n        </div>\n      </div>\n          : posts.length > 0 && posts\n          || <ListIsEmpty />\n        }\n      </div>\n      </div>\n    );\n  }\n};\n\nlet mapsStateToProps = (state) => ({\n  postsIsFetching: state.profilePage.postsIsFetching,\n  textNewPost: state.profilePage.textNewPost,\n  profile: state.profilePage.profile,\n  posts: state.profilePage.posts,\n  auth: state.auth,\n});\n\nlet mapsDispatchToProps = {\n  getPosts,\n  createPost,\n};\n\n\nexport default connect(mapsStateToProps, mapsDispatchToProps)(Posts); \n\n\n","/root/Documents/projects/social-network/src/components/Messages/Dialog/Dialog.jsx",["412","413","414"],"import React from 'react';\nimport styles from './Dialog.module.css';\nimport {compose} from 'redux';\nimport {NavLink} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport WithAuthData from '../../../hocs/WithAuthData.jsx';\n\n\nimport {getDialog, sendMessage, setDialogIsFetching} from '../../../reducers/messagesReducer.js';\n\nimport SendMessage from './SendMessage/SendMessage';\nimport MessagesHistory from './MessagesHistory/MessagesHistory.jsx';\nimport DialogInfo from './DialogInfo/DialogInfo.jsx';\nimport FetchingToggle from '../../commons/FetchingToggle/FetchingToggle.jsx';\n\nclass Dialog extends React.Component {\n\n  componentDidMount () {\n   \n  let options = {\n      id: this.props.auth.id,\n      token: this.props.auth.token,\n      dialog_id: this.props.currentDialog,\n    };\n\n    this.props.setDialogIsFetching(true);\n    this.props.getDialog(options)\n      .then(res => this.props.setDialogIsFetching(false));\n  }\n\n  onSubmit = (formData) => {\n    //let {id, token, user_id, message} = options;\n    let message = {\n      text: formData['send-message'],\n      date: new Date(),\n    };\n    let options = {\n      id: this.props.auth.id,\n      token: this.props.auth.token,\n      user_id: this.props.messagesPage.dialog.user_id,\n      message,\n    };\n    this.props.sendMessage(options).then(res => {\n      let options2 = {\n        id: this.props.auth.id,\n        token: this.props.auth.token,\n        dialog_id: this.props.currentDialog,\n      };\n\n      this.props.getDialog(options2)\n    });\n\n  }\n\n  state = {\n    wrp: React.createRef(),\n  }\n\n  render() {\n\n    return <>\n      {\n        this.props.dialogIsFetching\n          && <div className={styles['fetching-wrp']}>\n      <div className={styles['fetching']}>\n        <FetchingToggle width={50} height={50}/>\n      </div>\n    </div>\n      || \n      <div ref={this.state.wrp} className={styles.wrp}\n        style={ {\n          'grid-template-rows': '80px 1fr 120px',\n        } }>\n        <div className={styles['dialog-info']}>\n          <DialogInfo history={this.props.history} />\n        </div>\n        <MessagesHistory />\n        <div className={styles['send-message']}>\n          <SendMessage onSubmit={this.onSubmit} wrp={this.state.wrp} />\n        </div>\n      </div>\n      }\n      </>\n  }\n\n}\n\nconst mapsStateToProps = (state) => {\n  return {\n    currentDialog: state.messagesPage.currentDialog,\n    messagesPage: state.messagesPage,\n    dialogIsFetching: state.messagesPage.dialogIsFetching,\n  };\n}\n\nconst mapsDispatchToProps = {\n  getDialog,\n  sendMessage,\n  setDialogIsFetching,\n};\n\nexport default compose (\n  WithAuthData,\n  connect(mapsStateToProps, mapsDispatchToProps)\n)(Dialog);\n","/root/Documents/projects/social-network/src/components/Profile/Subscribed/Subscribed.jsx",["415","416"],"import React from 'react';\nimport {connect} from 'react-redux';\nimport styles from './Subscribed.module.css';\nimport ListIsEmpty from '../../commons/ListIsEmpty/ListIsEmpty';\nimport UserItem from '../../commons/UserItem/UserItem';\nimport Anchor from '../../commons/Anchor/Anchor';\n\nclass Subscribed extends React.Component {\n\n    render() {\n    console.log('SUBSCRIBIED');\n    console.log(this.props.subscribed);\n\n        let subscribed = this.props.subscribed.map(user => \n            <UserItem user={user} /> );\n\n        let scrollbar = React.createRef();\n      return <div className={styles.wrp}>\n        <div style={ {position: 'absolute', bottom: 0, right: 30} }>\n          <Anchor scrollbar={scrollbar} />\n        </div>\n        <div ref={scrollbar} className={styles.scrollbar}>\n                <div>\n                {\n                    this.props.subscribed\n                        && this.props.subscribed.length\n                        && subscribed\n                        || <ListIsEmpty />\n                }\n                    </div>\n                    </div>\n                    </div>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        subscribed: state.profilePage.profile.subscribed_to,\n    };\n};\n\nexport default connect(mapStateToProps, {})(Subscribed);\n","/root/Documents/projects/social-network/src/components/commons/DropDownMenu/DropDownMenu.jsx",["417","418"],"import React from 'react';\nimport menu_black from '../../../assets/images/menu_black.png';\nimport menu_white from '../../../assets/images/menu_white.png';\n\nimport styles from './DropDownMenu.module.css';\n\nclass DropDownMenu extends React.Component {\n\n  state = {\n    editMode: false,\n  }\n\n  toggleEditMode = () => {\n    this.setState({editMode: !this.state.editMode});\n  }\n  offEdditMode = () => {\n    this.setState({editMode: false});\n  }\n\n  render() {\n\n    let items = this.props.items\n      .map(item => {\n        return <div className={styles.item} \n        onClick={(e) => {\n          this.offEdditMode();\n          e.preventDefault();\n          item.onClick();\n          }}>\n          {item.svg}\n          <div className={styles.text}>\n            {item.value}\n          </div>\n        </div>\n      });\n\n    return <nav className={styles.wrp}\n    > \n      {\n        this.state.editMode && <div className={styles['items-wrp']} >\n      <div className={styles.items}>\n        {items}\n      </div>\n    </div>\n      }\n      <button className={styles['menu-button']}\n        tabIndex={-1}// set autofocus\n        onClick={this.toggleEditMode} \n        onBlur={() => setTimeout(this.offEdditMode, 200)} >\n        <img src={menu_black} />\n      </button>\n      </nav>;\n  }\n}\n\nexport default DropDownMenu;\n","/root/Documents/projects/social-network/src/components/commons/Modal/Modal.jsx",["419","420"],"import React from 'react';\nimport styles from './Modal.module.css';\nimport CloseButton from '../CloseButton/CloseButton';\n\nclass Modal extends React.Component {\n\n  componentDidMount(){\n    document.addEventListener(\"keydown\", this.escFunction, false);\n  }\n  componentWillUnmount(){\n    document.removeEventListener(\"keydown\", this.escFunction, false);\n  }\n\n  escFunction(event) {\n    document.addEventListener('keydown', (event) => {\n      if(event.code == 'Escape')\n        this.props.changeVisibleModal(false);\n    });\n  }\n\n  render() {\n    return <div className={styles.wrapper} >\n      <div className='shading' >\n        <div className={styles['content-wrp']}>\n        <div className={styles.content} \n          onClick={event => event.stopPropagation() } >\n          <div className={styles['close-button']}>\n            <div>\n              <CloseButton close={(() => \n                  this.props.changeVisibleModal(false)).bind(this)} />\n            </div>\n          </div>\n          <this.props.Component {...this.props} />\n        </div>\n        </div>\n      </div>\n    </div>\n  }\n}\n\nexport default Modal;\n","/root/Documents/projects/social-network/src/components/Profile/ProfileInfo/ProfileInfo.jsx",["421","422","423","424","425","426","427","428","429","430","431","432","433","434"],"import React from 'react';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport {Field, reduxForm} from 'redux-form';\nimport {requiredFields, maxLengthCreator, minLengthOrNothingCreator, \n  emailValidate, phoneNumberValidate} from '../../../utils/validators.js';\nimport {nameNor, phoneNumberNor} from '../../../utils/fieldNormalizators.js';\nimport styles from './ProfileInfo.module.css';\nimport WithAuthData from '../../../hocs/WithAuthData';\nimport {updateProfile, getProfile} from '../../../reducers/profileReducer';\n\nimport {InputImage, Button, ErrorForm} from '../../commons/FormsControls/FormsControls.jsx';\nimport poster from '../../../assets/images/space.jpg';\nimport default_avatar from '../../../assets/images/avatar_default.png';\nimport FetchingToggle from '../../commons/FetchingToggle/FetchingToggle';\nimport AvatarByPath from '../../commons/AvatarByPath/AvatarByPath.jsx';\n\nlet svg = [\n  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"rubicons pencil-write\" width=\"36\" height=\"36\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"1.5\" fill=\"none\">\n    <path d=\"M3 21h18M12.8889 5.5556l3.5555 3.5555M7.5556 18L20 5.5556 16.4444 2 4 14.4444V18h3.5556z\" stroke-linecap=\"round\"></path>\n  </svg>,\n];\n\nconst maxLength30 = maxLengthCreator(30);\n\nconst Input2 = ({input, meta, editMode, ...props}) => {\n\n  let input_styles = [styles.input];\n  input_styles.push(styles.input2_text);\n  input_styles = input_styles.join(' ');\n\n  return <>\n    <div className={styles.input2_wrapper}>\n      <div className={styles.input_container}>\n        {\n          editMode\n            && <input className={input_styles} {...input} {...props}/>\n      || <div className={styles.input2_text} >{input.value}</div>\n      }\n      </div>\n    </div>\n  </>\n};\n\nclass ProfileInfo extends React.Component {\n\n  state = {\n    editMode: false,\n    isFetching: false,\n  }\n\n  changeEditMode = () => {\n    this.setState({editMode: !this.state.editMode});\n  }\n\n  changeIsFetching = () => {\n    this.setState({isFetching: !this.state.isFetching});\n  }\n\n  onSubmit = async ({phone, address, DOB, picture}) => {\n    let formData = new FormData();\n    if(phone)\n      formData.append('phone', phone);\n    if(address)\n      formData.append('address', address);\n    if(DOB)\n      formData.append('DOB', DOB);\n    if(picture)\n      formData.append('image', picture);\n\n    let options = {\n      formData,\n      id: this.props.auth.id,\n      token: this.props.auth.token,\n    };\n\n    this.changeIsFetching();\n    this.props.updateProfile(options)\n      .then(res => {\n        this.changeIsFetching();\n        this.changeEditMode();\n        this.props.changeVisibleModal(false);\n        // toto возможно нужно будет удалить 7 строк снизу\n        let user_id = this.props.profile.id;\n        user_id = user_id;\n        let options = {\n          user_id,\n          id: this.props.auth? this.props.auth.id: '',\n          token: this.props.auth? this.props.auth.token: '',\n        };\n        this.props.getProfile(options);\n      });\n  }\n\n  render () {\n    let avatar_img = this.props.photo || default_avatar;\n    let save_button = React.createRef();\n    let avatar_ref = React.createRef();\n    let change_photo_button = React.createRef();\n    let avatarStyles = {\n      wrp: {\n        width: '200px',\n        height: '200px',\n      },\n      img: {\n        'border-radius': 5,\n      },\n    };\n    return (\n      <div className={styles.wrapper}>\n        <div className={styles.avatar}>\n          <AvatarByPath id={this.props.profile.id} photo={this.props.profile.photos.small} styles={avatarStyles} />\n          {\n            this.state.editMode && <div className={styles['change-photo-button']} >\n          <button ref={change_photo_button} >\n            {svg[0]}\n          </button>\n        </div>\n        }\n      </div>\n\n        <ProfileInfoReduxForm onSubmit={this.onSubmit} \n          auth={this.props.auth}\n          profile={this.props.profile}\n          changeEditMode={this.changeEditMode.bind(this)}\n          state={this.state}\n          avatar_ref={avatar_ref}\n          change_photo_button={change_photo_button}\n          editMode={this.state.editMode} save_button={save_button} />\n      </div>\n    );\n  }\n};\n\nclass ProfileInfoForm extends React.Component {\n\n  render() {\n\n    const getFormatDate = () => {\n      let date = new Date();\n      let result = `${date.getFullYear()}-${1 + +date.getMonth()}-${date.getDate()}`.replace(/-(\\d)-/g, '-0$1-');\n      return result;\n    };\n    this.props.editMode || this.props.reset();\n    let info = [\n      {\n        name: 'name', placeholder: 'Enter your name', \n        validate: [requiredFields], normalize: undefined, \n        type: 'text'\n      },\n      {\n        name: 'email', placeholder: 'Enter your email', \n        validate: [requiredFields, emailValidate], normalize: undefined, \n        type: 'text'\n      },\n      {\n        name: 'phone', placeholder: 'Enter your phone number', \n        validate: [], phoneNumberNor, \n        type: 'text'\n      },\n      {\n        name: 'address', placeholder: 'Enter your address', \n        validate: [], nameNor, \n        type: 'text'\n      },\n      {\n        name: 'DOB', placeholder: 'Enter your age', \n        validate: [], normalize: undefined, \n        type: 'date', max: getFormatDate(),\n      },\n    ];\n\n    info = info\n      .filter(item => \n        this.props.editMode || Object.keys(this.props.initialValues).includes(item.name))\n        .map((item, i) => {\n          return <li>\n            <span className={styles['item-field']}>\n              {item.name + ': '}\n            </span>\n            <div className={styles['item-data']}>\n\n              <Field {...item}\n                autoFocus={i === 2} \n                editMode={ ['name', 'email'].includes(item.name)? undefined: this.props.editMode}\n                component={Input2} \n                placeholder={item.placeholder} />\n            </div>\n\n          </li>\n        });\n    if(this.props.avatar_ref.current){\n      this.props.avatar_ref.current.innerHTML = `<img src=\"\" />`;\n    }\n\n    return <form onSubmit={this.props.handleSubmit} \n      className={styles['list-info']} autoFocus={true}>\n      <ul>\n        {info}\n        {\n          this.props.state.editMode \n            && <Field name=\"picture\" component={InputImage} \n        change_photo_button={this.props.change_photo_button}\n        type=\"file\" value={null} avatar_ref={this.props.avatar_ref} />\n      }\n      </ul>\n      {\n        this.props.auth.id == this.props.profile.id\n          && <div className={styles['buttons-wrapper']}>\n      {\n        !this.props.state.editMode \n          && <button className={'commons-modal-button'}\n      onClick={(e) => {\n        e.preventDefault();\n        this.props.changeEditMode();\n      }\n      } >\n      CHANGE\n    </button>\n      || <button name={'submit'} type='submit' \n        disabled={this.props.state.isFetching}\n        className={'commons-modal-button'} >\n        SAVE\n      </button>\n      }\n      {\n        this.props.state.isFetching\n          && \n          <div  style={ {\n            float: 'left', \n            height: '35px', width: '35px',\n            padding: '5px', 'box-sizing': 'border-box',\n            'margin-right': '10px'\n      } } >\n      <FetchingToggle background={true} />\n                                    </div>\n      }\n      {\n        this.props.state.editMode && \n          <button \n        className={'commons-modal-button' + ' ' \n          + styles['change-info-cancel']}\n      onClick={this.props.changeEditMode} >\n      CANCEL\n                                            </button>\n      }\n                                        </div>\n      }\n\n                                    </form>\n  }\n};\n\n\nlet ProfileInfoReduxForm = compose(\n  connect(\n    state => ({\n      initialValues: {\n        ...state.profilePage.profile,\n        ...state.profilePage.profile.info[0],\n      }// pull initial values from account reducer\n    })\n  ),\n  reduxForm({form: 'profile-info'}),\n)(ProfileInfoForm)\n\nlet mapStateToProps = (state) => {\n  return {\n    profile: state.profilePage.profile,\n    photo: state.profilePage.profile.photos? state.profilePage.profile.photos.small: '',\n  }\n};\n\nexport default compose(\n  connect(mapStateToProps, {updateProfile, getProfile}),\n  WithAuthData)\n(ProfileInfo);\n","/root/Documents/projects/social-network/src/components/Messages/Dialog/DialogInfo/DialogInfo.jsx",["435","436"],"/root/Documents/projects/social-network/src/components/Messages/Dialog/MessagesHistory/MessagesHistory.jsx",["437","438","439","440","441","442","443"],"import React from 'react';\nimport styles from './MessagesHistory.module.css';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport WithAuthData from '../../../../hocs/WithAuthData.jsx';\nimport {getHoursMinutes, getDateMonth} from '../../../../utils/functions.js';\nimport {readMessages} from '../../../../reducers/messagesReducer.js';\nimport Anchor from '../../../commons/Anchor/Anchor.jsx';\n\nclass MessagesHistory extends React.Component {\n\n  state = {\n    isRendered: false,\n  }\n\n  scrollDown = (scrollbar) => {\n    scrollbar.current.scrollTop = scrollbar.current.scrollHeight;\n  }\n\n  render() {\n\n    let getDateComponent = (str) => {\n      return <div className={styles['time-date']}><div>{str}</div></div>\n    };\n\n    let history = 'message list is empty..';\n    if(this.props.messages) {\n      let messages = this.props.messages.map((mess, index, arr) => {\n        let isFinal = index === arr.length -1 \n          || mess.userId != arr[index + 1].userId\n          || new Date(mess.date).getDate() != new Date(arr[index + 1].date).getDate();\n        let time = getHoursMinutes(mess.date);\n        let elem;\n        if(mess.userId === this.props.auth.id) {\n          elem = <div className={styles['message-wrp']}>\n            <div className={styles.message + ' ' + styles['message-right'] \n                + ' ' + (isFinal && styles['message-right-with-arrow'])}>\n              {mess.text}\n              <div>\n                <div className={styles.read}>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" \n                    class=\"rubicons check\" \n                    width=\"19\" height=\"19\" viewBox=\"0 0 24 24\" \n                    stroke={mess.read && \"currentColor\" || \"#335\"} stroke-width=\"2.5\" fill=\"none\">\n                    <path d=\"M4 13l5 5L20 6\" stroke-linecap=\"round\"></path>\n                  </svg>\n                </div>\n                <div className={styles.time}>\n                  {time}\n                </div>\n              </div>\n            </div>\n          </div>\n        } else {\n          elem = <div className={styles['message-wrp']}>\n            <div className={styles.message + ' ' + styles['message-left']\n                + ' ' + (isFinal && styles['message-left-with-arrow'])}>\n              {mess.text}\n              <div>\n                <div className={styles.time}>\n                  {time}\n                </div>\n              </div>\n            </div>\n          </div>\n        }\n        return elem;\n      });\n\n      history = []; \n      let now = new Date().getDate();\n      this.props.messages.forEach((mess, index, arr) => {\n        let date = new Date(mess.date).getDate();\n\n        if (index ===  0 && now != date) {\n          history.push(getDateComponent(getDateMonth(mess.date)));\n          history.push(messages[index]);\n        } else if (arr.length === 1 || index === 0 || date != new Date(arr[index - 1].date).getDate()){\n          if(date == now ) history.push(getDateComponent('Today'));\n          else history.push(getDateComponent(getDateMonth(mess.date))); \n          history.push(messages[index]);\n        } else {\n          history.push(messages[index]);\n        }\n      })\n\n      history.push(<div style={ {\n        height: '40px',\n        } } ></div>);\n    };\n\n    let scrollbar = React.createRef();\n    setTimeout(() => {\n      if(scrollbar.current && !this.state.isRendered) this.scrollDown(scrollbar);\n    }, 50);\n\n    //let {id, token, dialog_id, messages} = options;\n    if(this.props.messages) {\n      let unreadMessages = this.props.messages\n        .filter(mess => mess.userId !== this.props.auth.id && !mess.read);\n\n      console.log('UNREAD MESS');\n      console.log(unreadMessages);\n      if(unreadMessages.length){\n        let options = {\n          id: this.props.auth.id,\n          token: this.props.auth.token,\n          dialog_id: this.props.dialog.dialog_id,\n          messages: unreadMessages,\n        }\n        //alert(options.messages.length);\n        this.props.readMessages(options);\n      }\n    }\n\n    return <div className={styles.wrp}>\n      <div style={ {position: 'absolute', bottom: 0, right: 30} }>\n        <Anchor scrollbar={scrollbar} direction={'down'} />\n      </div>\n      <div ref={scrollbar} className={styles.scrollbar}>\n        {history}\n      </div>\n    </div>\n  }\n};\n\nconst mapsStateToProps = state => {\n  return {\n    messages: state.messagesPage.dialog.messages,\n    dialog: state.messagesPage.dialog,\n  };\n};\n\nconst mapsDispatchToProps = {\n  readMessages,\n};\n\nexport default compose (\n  WithAuthData,\n  connect(mapsStateToProps, mapsDispatchToProps),\n)(MessagesHistory);\n","/root/Documents/projects/social-network/src/components/commons/FollowButton/FollowButton.jsx",["444","445","446","447","448","449"],"import React from 'react';\nimport styles from './FollowButton.module.css';\nimport {connect} from 'react-redux';\nimport {followApi} from '../../../api/api';\nimport {setSubscribed, follow, unfollow} from '../../../reducers/authReducer';\n\nclass FollowButton extends React.Component {\n\n  state = {\n    isFetching: false,\n    followed: undefined,\n  }\n\n  componentDidMount() {\n\n    let followed = this.props.subscribed.map(user => user.id).includes(this.props.user.id);\n    this.setState({ followed });\n  }\n\n  setIsFetching = isFetching => {\n    this.setState({isFetching})\n  }\n  setIsFollow = isFollow => {\n    this.setState({followed: isFollow});\n  }\n\n\n  onFollow () {\n    let options = {\n      id: this.props.auth.id,\n      user_id: this.props.user.id,\n      token: this.props.auth.token,\n    };\n    this.setState({isFetching: true});\n    this.props.follow(\n      options, this.props.user, this.setIsFetching.bind(this), this.setIsFollow.bind(this)\n    );\n  };\n\n  onUnfollow () {\n    let options = {\n      id: this.props.auth.id,\n      user_id: this.props.user.id,\n      token: this.props.auth.token,\n    };\n    this.setState({isFetching: true});\n    this.props.unfollow(\n      options, this.props.user, this.setIsFetching.bind(this), this.setIsFollow.bind(this)\n    );\n  };\n\n  isDisabled () {\n    return this.state.isFetching;\n  };\n\n  render() {\n\n    let stylesArr = ['commons-modal-button'];\n    stylesArr.push(this.state.followed? styles.followed: styles.follow);\n\n    return (\n      <div className={styles.wrp}>\n        <div className={styles.container}>\n          { this.props.user.id == this.props.auth.id\n              && <button className={'commons-modal-button ' + styles.me}\n          disabled={true}>\n          ME\n        </button>\n          || <button className={stylesArr.join(' ')}\n            disabled={this.isDisabled()}\n            onClick={ this.state.followed ? \n                this.onUnfollow.bind(this): this.onFollow.bind(this) }>\n            {this.state.followed && 'FOLLOWED' || 'FOLLOW'}\n          </button>\n          }\n      </div>\n      </div>\n    );\n  }\n};\n\nlet mapStateToProps = (state) => {\n  return {\n    auth: state.auth,\n    subscribed: state.auth.subscribed_to,\n  }\n};\n\nexport default connect(mapStateToProps, {setSubscribed, follow, unfollow})(FollowButton);\n","/root/Documents/projects/social-network/src/components/Profile/Posts/Post/Post.jsx",["450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465"],"import React from 'react';\nimport {connect} from 'react-redux';\nimport {likedPost, deletePost} from '../../../../reducers/profileReducer';\nimport styles from './Post.module.css';\nimport {getFormatedDate} from '../../../../utils/functions';\n\nimport heart from '../../../../assets/images/heart.png';\nimport heart_fool from '../../../../assets/images/heart_fool.png';\nimport criss_cross from '../../../../assets/images/criss-cross.png';\n\nimport FetchingToggle from '../../../commons/FetchingToggle/FetchingToggle';\nimport FullSizeToggle from '../../../commons/FullSizeToggle/FullSizeToggle';\nimport FullSizeImage from '../../../commons/FullSizeImage/FullSizeImage';\nimport Modal from '../../../commons/Modal/Modal';\nimport UserItem from '../../../commons/UserItem/UserItem.jsx';\nimport CloseButton from '../../../commons/CloseButton/CloseButton.jsx';\nimport ListIsEmpty from '../../../commons/ListIsEmpty/ListIsEmpty.jsx';\n\nimport {profileApi} from '../../../../api/api.js';\n\nclass Post extends React.Component {\n\n  componentDidMount() {\n    if(!this.state.interval){\n      let interval = setInterval(() => {\n        // console.log(this.state.interval);\n        if(this.state.imageWrp.current \n          && this.state.imageWrp.current.clientWidth != this.state.widthMax) {\n          // console.log(this.state.widthMax);\n          this.setState({widthMax: this.state.imageWrp.current.clientWidth});\n        }\n        if(this.state.img)\n          this.fitImage();\n      }, 500);\n      this.setState({interval});\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.interval);\n  }\n\n  state = {\n    interval: undefined,\n    imageWrp: React.createRef(),\n    img: undefined,\n    widthMax: 0,\n    heightMax: 400,\n    width: 0,\n    height: 0,\n    withPicture: !!this.props.post.picture,\n    isLoadPicture: false, \n\n    like_fetching: false,\n    isFullSize: false,\n    showWhoLikedModal: false,\n  }\n\n  fitImage (e) {\n    let width, height;\n    width = this.state.imageWrp.current.clientWidth;\n    // width = e.currentTarget.parentElement.clientWidth;\n    height = width * this.state.img.height/ this.state.img.width;\n\n    this.setState({width, height });\n  };\n\n  async onLikes (e) {\n    let options = {\n      id: this.props.auth.id,\n      user_id: this.props.profile.id,\n      token: this.props.auth.token,\n      post_id: this.props.post.id,\n    };\n\n    this.setState({ like_fetching: true });\n    await this.props.likedPost(options);\n    this.setState({ like_fetching: false});\n\n  };\n\n  async onDelete(e) {\n    let options = {\n      id: this.props.auth.id,\n      token: this.props.auth.token,\n      post_id: this.props.post.id,\n    };\n\n    await this.props.deletePost(options);\n  }\n\n  isLiked () {\n    return this.props.post.likes.includes(this.props.auth.id)? heart_fool: heart;\n  }\n\n  fullSizeToggle () {\n    this.setState({isFullSize: !this.state.isFullSize})\n  }\n\n  showWhoLikedModalToggle () {\n    this.setState({showWhoLikedModal: !this.state.showWhoLikedModal});\n  }\n\n  render () {\n    window.localState = this.state;\n\n    let users_ho_liked = this.props.post.likes.map(id => {\n      return <div className={styles.user_ho_liked}></div>\n    });\n\n    return (\n      <div className={styles.wrapper}>\n        {\n          this.props.auth.id === this.props.profile.id \n            && <a href='' onClick={(e) => { e.preventDefault() } }>\n        <div className={styles.criss_cross} >\n          <CloseButton close={this.onDelete.bind(this)} />\n        </div>\n      </a>\n        }\n        <div className={styles.date}>\n          {getFormatedDate(this.props.post.date)}\n        </div>\n        <div className={styles.post}>\n          <div ref={this.state.imageWrp} className={styles.post_picture_wrp}\n            style={ {'max-height': this.state.heightMax} }>\n            <div className={styles['full-size']}>\n            <FullSizeToggle \n              isFullSize={this.state.isFullSize}\n              fullSizeToggle={this.fullSizeToggle.bind(this)}/>\n            </div>\n            <img src={this.props.post.picture} className={styles.post_picture}\n              onLoad={(e) => {\n                let img = new Image();\n                img.src = e.currentTarget.currentSrc;\n                this.setState({img, isLoadPicture: true});\n                //setTimeout(() => this.fitImage(e));\n              } } \n              style={{\n                width: '100%', height: this.state.isLoadPicture? 0:200,\n              }}\n            />\n            <div style={ {\n              'background-image': `url(\"${this.props.post.picture}\")`,\n              'background-repeat': 'no-repeat',\n              'background-size': 'contain',\n              'background-position': 'center',\n              position: 'relative',\n              width: this.state.width,\n              height: this.state.height,\n              }}>\n          </div>\n              { !this.state.isLoadPicture\n                  && <div className={styles.fetching}>\n              <FetchingToggle />\n            </div>\n            }\n          </div>\n\n          <div className={styles.text}>\n            {this.props.post.text}\n          </div>\n\n          <div className={styles.likes} >\n            <a href='' onClick={(e) => { e.preventDefault() }} >\n              <div className={styles.count}>\n                <div className={styles.text} \n                  onClick={this.showWhoLikedModalToggle.bind(this)}>\n                  {this.props.post.likes.length}\n                </div>\n                <div className={styles.user_ho_liked_wrp} \n                  style={{'max-width': this.state.user_count_edit_mode && '120px' || '0px'}} >\n                  {users_ho_liked.splice(0, 3)}\n                  ...\n                </div>\n              </div>\n            </a>\n            <a href='' onClick={(e) => { e.preventDefault() }} >\n              <div className={styles.heart} onClick={this.onLikes.bind(this)}> \n                {\n                  !this.state.like_fetching \n                    && <img src={this.isLiked()} />\n              || <FetchingToggle width={22} height={22}/>\n              }\n              </div>\n            </a>\n          </div>\n        </div>\n        {\n          this.state.isFullSize\n            && <FullSizeImage \n          fullSizeToggle={this.fullSizeToggle.bind(this)}\n        posts={this.props.posts}\n        picture={this.props.post.picture}\n        width={this.state.width}\n        height={this.state.height}\n        isFullSize={this.state.isFullSize}\n        />\n        }\n      {\n        this.state.showWhoLikedModal \n          && <Modal \n            changeVisibleModal={this.showWhoLikedModalToggle.bind(this)}\n            scrollbar={this.props.scrollbar}\n            likes={this.props.post.likes}\n            post_id={this.props.post.id}\n            user_id={this.props.profile.id}\n            Component={WhoLikedModal} />\n      }\n      </div>\n    );\n  }\n};\n\nclass WhoLikedModal extends React.Component {\n  componentDidMount() {\n    this.setState({isFetching: true});\n    let options = {\n      user_id: this.props.user_id,\n      post_id: this.props.post_id,\n    };\n    profileApi.getLikersPost(options)\n      .then(data => {\n        if(data.result_code == 0){\n          // console.log('res' + data.users);\n          this.setState({likers: data.users});\n        }else{\n        }\n        this.setState({isFetching: false});\n      });\n  }\n\n  state = {\n    likers: [],\n    isFetching: false,\n  }\n\n  render () {\n    let users = this.state.likers.map(user => {\n      return <UserItem user={user} \n        changeVisibleModal={() => {\n          this.props.changeVisibleModal();\n          this.props.scrollbar.current.scrollTop = 0;\n        } }\n      />\n    });\n\n    return <div className={styles['likers-wrp']}>\n      <div className={styles.scrollbar} >\n        {\n          this.state.isFetching\n            && <div className={styles.fetching}>\n        <FetchingToggle />\n      </div>\n      ||( users.length\n      && users\n      || <ListIsEmpty />)\n      }\n    </div>\n      </div>\n  }\n}\n\nexport default connect(() => {}, {likedPost, deletePost})(Post);\n\n","/root/Documents/projects/social-network/src/components/commons/Anchor/Anchor.jsx",["466","467","468"],"import React from 'react';\nimport styles from './Anchor.module.css';\nimport arrow from '../../../assets/images/arrow.svg';\nimport {Transition} from 'react-transition-group';\n\nconst svg = <svg fill=\"none\" class=\"rubicons chevron-up\" xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"1.5\">\n  <path d=\"M18 15l-6-6-6 6\" stroke-linecap=\"round\"></path>\n</svg>;\n\nclass Anchor extends React.Component {\n\n  componentDidMount() {\n\n    this.setState({ isMoveUp: false, visible: false, direction: this.props.direction || 'up' });\n    setTimeout(() => this.addScollListener(), 200);\n  }\n\n  addScollListener = () => {\n    this.props.scrollbar.current\n      && this.props.scrollbar.current.addEventListener('scroll', e => {\n        let scrollTop = e.target.scrollTop;\n        let clientHeight = e.target.clientHeight;\n        let scrollHeight = e.target.scrollHeight;\n        this.setState({ scrollTop, clientHeight, scrollHeight });\n        if(this.state.direction === 'up') {\n          if(scrollTop > clientHeight/4){\n            this.setState({visible: true})\n          }else{\n            this.setState({visible: false})\n          }\n        } else {\n          if(scrollTop < scrollHeight - clientHeight*2){\n            this.setState({visible: true})\n          }else{\n            this.setState({visible: false})\n          }\n        }\n      });\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n\n    let bool = this.props.scrollbar.current != nextProps.scrollbar.current;\n    this.props.scrollbar && nextProps.scrollbar\n      && bool\n      && this.addScollListener();\n\n    if(nextState.isMoveUp){\n      setTimeout(() => {\n        this.props.scrollbar.current.scrollTop -= this.state.moveUpSpeed;\n        if(this.state.direction === 'up') {\n          if(this.props.scrollbar.current.scrollTop < 20){\n            this.props.scrollbar.current.scrollTop = 0;\n            this.setState({ isMoveUp: false });\n          } else if(this.state.scrollTop > this.state.clientHeight){\n            this.props.scrollbar.current.scrollTop = this.state.clientHeight;\n          }\n        } else {\n          if(this.props.scrollbar.current.scrollTop > \n            this.props.scrollbar.current.scrollHeight - this.props.scrollbar.current.clientHeight - 100) {\n            this.props.scrollbar.current.scrollTop = this.props.scrollbar.current.scrollHeight;\n            this.setState({ isMoveUp: false });\n          } else if(this.props.scrollbar.current.scrollTop < \n            this.props.scrollbar.current.scrollHeight - this.props.scrollbar.current.clientHeight * 2) {\n            this.props.scrollbar.current.scrollTop = \n              this.props.scrollbar.current.scrollHeight - this.props.scrollbar.current.clientHeight * 2;\n          }\n        }\n\n      }, 50);\n    }\n  }\n\n  state = { \n    visible: false,\n    direction: undefined,\n    isMoveUp: false,\n  }\n\n  move = (e) => {\n    //console.log(this.props.scrollbar.current.scrollTop);\n    e.preventDefault();\n    let current = this.props.scrollbar.current;\n    let moveUpSpeed = 40; \n    if(this.state.direction === 'down')\n      moveUpSpeed *= -1;\n    this.setState({isMoveUp: true, moveUpSpeed});\n  }\n\n  render () {\n\n    const duration = 150;\n\n    const defaultStyle = {\n      position: 'absolute',\n      transition: `bottom ${duration}ms linear, opacity ${duration}ms linear`,\n      bottom: 0,\n      transform: 'translateY(100%)',\n    }\n\n    const transitionStyles = {\n      entered: { \n        opacity: 1, \n        bottom: '100%',\n      }, \n      exited: { \n        opacity: 0,\n        bottom: '0%',\n      },\n    };\n\n    setTimeout(() => console.log(this.state.direction), 100);\n    return <div className={styles.wrp}>\n      <Transition in={this.state.visible} timeout={duration}>\n        {state => (\n            <button \n          className={styles.container}\n        onClick={this.move} \n        style={{\n          ...defaultStyle,\n          ...transitionStyles[state]\n        }}>\n        <div style={ this.state.direction === 'up'? {}: {transform: 'rotate(180deg)'} }>\n          {svg}\n        </div>\n      </button>\n        )}\n    </Transition>\n      </div>\n  }\n}\n\nexport default Anchor;\n","/root/Documents/projects/social-network/src/components/Profile/Posts/CreatePost/CreatePost.jsx",["469"],"import React from 'react';\nimport {reduxForm, Field} from 'redux-form';\nimport styles from './CreatePost.module.css';\n\nimport {TextArea, Button, ErrorForm, InputImage2} from '../../../commons/FormsControls/FormsControls';\nimport {maxLengthOrNothingCreator} from '../../../../utils/validators.js';\n\nlet svg = [\n  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"rubicons pencil-write\" width=\"36\" height=\"36\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"1.5\" fill=\"none\">\n    <path d=\"M3 21h18M12.8889 5.5556l3.5555 3.5555M7.5556 18L20 5.5556 16.4444 2 4 14.4444V18h3.5556z\" stroke-linecap=\"round\"></path>\n  </svg>,\n];\n\nlet maxLengthOrNothing650 = maxLengthOrNothingCreator(650);\n\nclass CreatePost extends React.Component {\n\n  render () {\n\n    let choose_photo_button = React.createRef();\n    let choosed_file_name = React.createRef();\n\n    return <form className={styles.form} onSubmit={this.props.handleSubmit} >\n      <div className={styles.input_wrapper} >\n        <div className={styles['input-text-wrp']}>\n          <Field name='create_post' autoFocus={true} \n            validate={[maxLengthOrNothing650]}\n            component={TextArea} \n            placeholder=' Enter your posts' />\n        </div>\n        <div className={styles.server_response}>\n          <ErrorForm message={this.props.error} />\n        </div>\n      </div>\n      <div className={styles['choose-button-wrp']}>\n        <Field name=\"picture\" component={InputImage2} \n          choose_photo_button={choose_photo_button}\n          choosed_file_name={choosed_file_name}\n          type=\"file\" value={null} />\n        <button ref={choose_photo_button} className={styles['choose-button']}>\n          {svg[0]}\n        </button>\n        <div className={styles['choosed-file-name']} ref={choosed_file_name}>\n          no file choosen\n        </div>\n      </div>\n      <div>\n        <button className={'commons-modal-button ' + \n            styles['create-post-button']}\n          error={this.props.error} name={'Create post'} \n          type='submit' \n          disabled={this.props.is_fetching}>\n          POSTED\n        </button>\n      </div>\n    </form>\n  }\n};\n\nexport default reduxForm({form: 'create_post'})(CreatePost); \n\n\n","/root/Documents/projects/social-network/src/components/Messages/Dialog/SendMessage/SendMessage.jsx",["470","471","472","473","474","475","476","477"],"import React from 'react';\nimport {Field, reset, reduxForm} from 'redux-form';\nimport {compose} from 'redux';\nimport {connect} from 'react-redux';\nimport WithAuthData from '../../../../hocs/WithAuthData.jsx';\n\nimport styles from './SendMessage.module.css';\n\nimport {Button} from '../../../commons/FormsControls/FormsControls.jsx';\nimport {getDialog} from '../../../../reducers/messagesReducer.js';\n\nlet svg = [\n  <svg fill=\"none\" class=\"rubicons send-alt\" xmlns=\"http://www.w3.org/2000/svg\" \n    width=\"36\" height=\"36\" \n    viewBox=\"0 0 24 24\" \n    stroke=\"currentColor\" stroke-width=\"1.5\">\n    <path d=\"M20 12L4 4l3.556 8L4 20l16-8zM7.556 12H20\" stroke-linecap=\"round\"></path>\n  </svg>,\n];\n\n\nconst maxlength = 1001;\n\nconst TextArea2 = ({input, meta, textareaIsFocused, toggleTextareaFocused, ...props}) => {\n  if(props.propsRef.current) {\n    setTimeout(() => {\n      if(props.propsRef.current && !textareaIsFocused) {\n        toggleTextareaFocused();\n        props.propsRef.current.focus();\n      }\n    }, 100);\n  }\n  return <div className={styles['input-wrp']}>\n    <textarea ref={props.propsRef} {...input} {...props} />\n  </div>\n};\n\nclass SendMessage extends React.Component {\n\n  componentDidMount () {\n\n    let interval;\n    if(!this.state.interval) {\n      interval = setInterval(() => {\n        let {wrp, input, field, textarea, interval, styles, text} = this.state;\n\n        if (input.current && wrp.current) {\n          if(!Object.keys(styles).length) {\n            this.setState({\n              styles: {\n                'input-max-width': input.current.clientWidth,\n                'input-start-height': input.current.clientHeight,\n                'input-max-height': 600,\n                'input-height': input.current.clientHeight,\n\n                'wrp-start-grid-template-rows': wrp.current.style.gridTemplateRows,\n                'wrp-grid-template-rows': wrp.current.style.gridTemplateRows,\n              }\n            })\n          } else {\n\n            let inputHeight = this.state.input.current.clientHeight;\n            if(inputHeight != this.state.styles['input-height']) {\n              let startWrpStyle = styles['wrp-start-grid-template-rows'];\n              let newWrpStyle = [];\n              newWrpStyle = newWrpStyle.concat(startWrpStyle.split(' ').slice(0, 2), \n                (parseInt(startWrpStyle.split(' ')[2]) \n                  + (inputHeight - styles['input-start-height']) ) + 'px' ).join(' ');\n              this.setState({\n                styles: {\n                  ...styles,\n                  ['input-height']: inputHeight,\n                  ['wrp-grid-template-rows']: newWrpStyle, \n                }\n              })\n            }\n          }\n        }\n\n        if(textarea.current && input.current) {\n          if(text != textarea.current.innerHTML) {\n            let newText = textarea.current.innerHTML;\n            newText.slice(0, maxlength - 1000);\n            textarea.current.value = newText;\n            this.setState({text: newText});\n          }\n        }\n\n      }, 10)\n      this.setState({interval});\n    }\n  }\n\n  state = {\n    field: React.createRef(),\n    textarea: React.createRef(),\n    textareaIsFocused: false,\n    wrp: this.props.wrp,\n    input: React.createRef(),\n    interval: false,\n    styles: {},\n    text: '',\n  }\n\n  toggleTextareaFocused = () => {\n    this.setState({textareaIsFocused: true});\n  }\n\n  render() {\n\n    if(this.state.wrp.current) {\n      this.state.wrp.current.style.gridTemplateRows = this.state.styles['wrp-grid-template-rows'];\n    }\n    let button = React.createRef();\n    return <div className={styles.wrp}>\n      <div></div>\n      <form className={styles['form-wrp']} onSubmit={this.props.handleSubmit}>\n\n        <div className={styles['send-message-wrp']}>\n          <div className={styles['send-message']}\n            style={ {\n              'max-width': this.state.styles['input-max-width'],\n              'max-height': this.state.styles['input-max-height'],\n            } }> \n            <div ref={this.state.input} contenteditable='true'\n              onChange={e => {\n              }\n              }\n            >\n              {this.state.text}\n            </div>\n            <Field ref={this.state.field} name='send-message'\n              autoFocus={true}\n              disabled={this.props.dialogIsFetching}\n              dialogIsFetching={this.props.dialogIsFetching}\n              textareaIsFocused={this.state.textareaIsFocused}\n              toggleTextareaFocused={this.toggleTextareaFocused.bind(this)}\n              style={ {height: '15px', 'overflow': 'hidden' } }\n              validate={[]} placeholder='enter text message...'\n              component={TextArea2} \n              propsRef={this.state.textarea}\n              normalize={ value => value.slice(0, maxlength) }\n              onChange={(e) => {\n                if(e.nativeEvent.inputType === 'insertLineBreak') {\n                  e.preventDefault();\n                  this.props.handleSubmit();\n              } } }\n            /> \n          </div>\n        </div>\n\n        <div className={styles['submit-button-wrp']}>\n          <button >\n            {svg[0]}\n          </button>\n        </div>\n        <div>\n        </div>\n      </form>\n      <div></div>\n    </div>\n  }\n}\n\nconst mapsStateToProps = state => {\n  return {\n    currentDialog: state.messagesPage.currentDialog,\n    dialogIsFetching: state.messagesPage.dialogIsFetching,\n  }\n};\n\nconst mapsDispatchToProps = {\n  getDialog,\n};\n\nexport default compose(\n  reduxForm({form: 'sendMessage',\n    onSubmitSuccess: (data, dispatch) => dispatch(reset('sendMessage')),\n  }),\n  WithAuthData,\n  connect(mapsStateToProps, mapsDispatchToProps),\n)(SendMessage);\n","/root/Documents/projects/social-network/src/components/commons/FullSizeImage/FullSizeImage.jsx",["478","479","480","481","482","483"],"import React from 'react';\nimport styles from './FullSizeImage.module.css';\nimport FullSizeToggle from '../FullSizeToggle/FullSizeToggle.jsx';\n\nlet svg = [\n  <svg fill=\"none\" class=\"rubicons chevron-left\" xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"1.5\">\n    <path d=\"M15 6l-6 6 6 6\" stroke-linecap=\"round\"></path>\n  </svg>,\n  <svg fill=\"none\" class=\"rubicons chevron-right\" xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"1.5\">\n    <path d=\"M9 18l6-6-6-6\" stroke-linecap=\"round\"></path>\n  </svg>,\n];\n\nclass FullSizeImage extends React.Component {\n\n  constuctor() {\n    this.super();\n    this.setState({itemPhoto: 0});\n  }\n\n  componentDidMount () {\n    setTimeout( () => {\n      this.setState({render: true})\n    }, 100);\n    let itemPhoto = this.props.posts.findIndex(\n      post => post.picture == this.props.picture);\n    this.setState({\n      itemPhoto\n    });\n\n    window.addEventListener('resize', () => {\n      this.forceUpdate();\n    });\n  }\n\n  componentWillUpdate () {\n    window.removeEventListener('resize', () => {\n      this.forceUpdate();\n    });\n  }\n\n  state = {\n    itemPhoto: this.props.posts.length - 1,\n  }\n\n  nextPhoto = () => {\n    this.setState({\n      itemPhoto: --this.state.itemPhoto,\n    });\n  }\n\n  backPhoto = () => {\n    this.setState({\n      itemPhoto: ++this.state.itemPhoto,\n    });\n  }\n\n  render() {\n    let wrp_ref = React.createRef();\n    let container_ref = React.createRef();\n    let widthPicture = 0;\n    let heightPicture = 0;\n\n    let photos = this.props.posts.map(\n      (post) => {\n        let picture = post.picture;\n        return (<div ref={container_ref} className={styles.container} \n          style={ {\n            width: document.body.clientWidth, \n            height: document.body.clientHeight,\n            float: 'left',\n            position: 'relative',\n            overflow: 'hidden',\n          } }\n        >\n          <div style={ {\n            position: 'absolute',\n            top: -1, bottom: -1, left: -1, right: -1,\n            } }>\n            <img \n              style={ {\n                'background-image': `url(${picture})`,\n                'background-repeat': 'no-repeat',\n                'background-size': 'contain',\n                'background-position': 'center',\n              } }/>\n          </div>\n        </div>\n        );\n      });\n    photos = photos.reverse();\n\n    return <div className={styles.wrp}\n      ref={wrp_ref}\n      style={ {\n        width: document.body.clientWidth, \n        height: document.body.clientHeight,\n      } }\n    >\n      <div style={ {\n        width: document.body.clientWidth * this.props.posts.length,\n        position: 'absolute',\n        top: 0, bottom: 0,\n        transition: this.state.render && 'right .3s ease',\n        right: -document.body.clientWidth * (this.state.itemPhoto),\n        display: 'inline-block',\n        } }>\n        {photos}\n      </div>\n      <div className={styles['toggle-panel-wrp']} >\n        <div className={styles['toggle-panel']}>\n          <button className={styles['back-button']}\n            disabled={this.state.itemPhoto >= this.props.posts.length - 1}\n            onClick={this.backPhoto}\n          >\n            {svg[0]} \n          </button>\n          <div className={styles['full-size']}>\n            <FullSizeToggle fullSizeToggle={this.props.fullSizeToggle} \n              isFullSize={this.props.isFullSize} />\n          </div>\n          <button className={styles['next-button']}\n            disabled={this.state.itemPhoto <= 0}\n            onClick={this.nextPhoto}>\n            {svg[1]}\n          </button>\n        </div>\n      </div>\n    </div>\n  }\n}\n\nexport default FullSizeImage;\n","/root/Documents/projects/social-network/src/components/commons/FullSizeToggle/FullSizeToggle.jsx",[],{"ruleId":"484","replacedBy":"485"},{"ruleId":"486","replacedBy":"487"},{"ruleId":"488","severity":1,"message":"489","line":14,"column":8,"nodeType":"490","messageId":"491","endLine":14,"endColumn":23},{"ruleId":"488","severity":1,"message":"492","line":18,"column":8,"nodeType":"490","messageId":"491","endLine":18,"endColumn":12},{"ruleId":"488","severity":1,"message":"493","line":19,"column":8,"nodeType":"490","messageId":"491","endLine":19,"endColumn":13},{"ruleId":"488","severity":1,"message":"494","line":20,"column":8,"nodeType":"490","messageId":"491","endLine":20,"endColumn":16},{"ruleId":"495","severity":1,"message":"496","line":25,"column":3,"nodeType":"497","messageId":"498","endLine":77,"endColumn":4},{"ruleId":"499","severity":1,"message":"500","line":43,"column":20,"nodeType":"501","messageId":"502","endLine":43,"endColumn":22},{"ruleId":"499","severity":1,"message":"500","line":57,"column":27,"nodeType":"501","messageId":"502","endLine":57,"endColumn":29},{"ruleId":"499","severity":1,"message":"503","line":54,"column":57,"nodeType":"501","messageId":"502","endLine":54,"endColumn":59},{"ruleId":"499","severity":1,"message":"503","line":79,"column":31,"nodeType":"501","messageId":"502","endLine":79,"endColumn":33},{"ruleId":"499","severity":1,"message":"503","line":88,"column":31,"nodeType":"501","messageId":"502","endLine":88,"endColumn":33},{"ruleId":"499","severity":1,"message":"503","line":128,"column":27,"nodeType":"501","messageId":"502","endLine":128,"endColumn":29},{"ruleId":"488","severity":1,"message":"504","line":1,"column":18,"nodeType":"490","messageId":"491","endLine":1,"endColumn":27},{"ruleId":"488","severity":1,"message":"505","line":10,"column":7,"nodeType":"490","messageId":"491","endLine":10,"endColumn":32},{"ruleId":"488","severity":1,"message":"506","line":11,"column":7,"nodeType":"490","messageId":"491","endLine":11,"endColumn":35},{"ruleId":"488","severity":1,"message":"507","line":9,"column":7,"nodeType":"490","messageId":"491","endLine":9,"endColumn":22},{"ruleId":"499","severity":1,"message":"500","line":47,"column":63,"nodeType":"501","messageId":"502","endLine":47,"endColumn":65},{"ruleId":"488","severity":1,"message":"508","line":2,"column":9,"nodeType":"490","messageId":"491","endLine":2,"endColumn":19},{"ruleId":"495","severity":1,"message":"496","line":39,"column":7,"nodeType":"497","messageId":"498","endLine":107,"endColumn":8},{"ruleId":"499","severity":1,"message":"503","line":47,"column":71,"nodeType":"501","messageId":"502","endLine":47,"endColumn":73},{"ruleId":"499","severity":1,"message":"503","line":54,"column":48,"nodeType":"501","messageId":"502","endLine":54,"endColumn":50},{"ruleId":"499","severity":1,"message":"503","line":72,"column":50,"nodeType":"501","messageId":"502","endLine":72,"endColumn":52},{"ruleId":"495","severity":1,"message":"496","line":114,"column":3,"nodeType":"497","messageId":"498","endLine":156,"endColumn":4},{"ruleId":"499","severity":1,"message":"500","line":144,"column":70,"nodeType":"501","messageId":"502","endLine":144,"endColumn":72},{"ruleId":"499","severity":1,"message":"500","line":146,"column":18,"nodeType":"501","messageId":"502","endLine":146,"endColumn":20},{"ruleId":"488","severity":1,"message":"509","line":3,"column":13,"nodeType":"490","messageId":"491","endLine":3,"endColumn":18},{"ruleId":"488","severity":1,"message":"510","line":5,"column":9,"nodeType":"490","messageId":"491","endLine":5,"endColumn":33},{"ruleId":"488","severity":1,"message":"511","line":2,"column":9,"nodeType":"490","messageId":"491","endLine":2,"endColumn":16},{"ruleId":"499","severity":1,"message":"503","line":31,"column":32,"nodeType":"501","messageId":"502","endLine":31,"endColumn":34},{"ruleId":"499","severity":1,"message":"500","line":32,"column":32,"nodeType":"501","messageId":"502","endLine":32,"endColumn":34},{"ruleId":"488","severity":1,"message":"512","line":52,"column":11,"nodeType":"490","messageId":"491","endLine":52,"endColumn":18},{"ruleId":"488","severity":1,"message":"513","line":54,"column":9,"nodeType":"490","messageId":"491","endLine":54,"endColumn":18},{"ruleId":"514","severity":1,"message":"515","line":56,"column":33,"nodeType":"516","messageId":"517","endLine":56,"endColumn":35},{"ruleId":"514","severity":1,"message":"515","line":56,"column":65,"nodeType":"516","messageId":"517","endLine":56,"endColumn":67},{"ruleId":"488","severity":1,"message":"518","line":61,"column":11,"nodeType":"490","messageId":"491","endLine":61,"endColumn":18},{"ruleId":"519","severity":1,"message":"520","line":100,"column":13,"nodeType":"521","endLine":100,"endColumn":35},{"ruleId":"499","severity":1,"message":"500","line":33,"column":75,"nodeType":"501","messageId":"502","endLine":33,"endColumn":77},{"ruleId":"499","severity":1,"message":"503","line":33,"column":85,"nodeType":"501","messageId":"502","endLine":33,"endColumn":87},{"ruleId":"514","severity":1,"message":"515","line":53,"column":11,"nodeType":"516","messageId":"517","endLine":53,"endColumn":13},{"ruleId":"514","severity":1,"message":"515","line":56,"column":11,"nodeType":"516","messageId":"517","endLine":56,"endColumn":13},{"ruleId":"488","severity":1,"message":"522","line":77,"column":9,"nodeType":"490","messageId":"491","endLine":77,"endColumn":15},{"ruleId":"499","severity":1,"message":"500","line":80,"column":37,"nodeType":"501","messageId":"502","endLine":80,"endColumn":39},{"ruleId":"519","severity":1,"message":"520","line":114,"column":9,"nodeType":"521","endLine":116,"endColumn":36},{"ruleId":"499","severity":1,"message":"500","line":136,"column":41,"nodeType":"501","messageId":"502","endLine":136,"endColumn":43},{"ruleId":"514","severity":1,"message":"515","line":137,"column":15,"nodeType":"516","messageId":"517","endLine":137,"endColumn":17},{"ruleId":"514","severity":1,"message":"515","line":141,"column":11,"nodeType":"516","messageId":"517","endLine":141,"endColumn":13},{"ruleId":"488","severity":1,"message":"511","line":4,"column":9,"nodeType":"490","messageId":"491","endLine":4,"endColumn":16},{"ruleId":"523","severity":1,"message":"524","line":45,"column":76,"nodeType":"525","messageId":"502","endLine":45,"endColumn":80,"fix":"526"},{"ruleId":"488","severity":1,"message":"527","line":59,"column":10,"nodeType":"490","messageId":"491","endLine":59,"endColumn":16},{"ruleId":"488","severity":1,"message":"528","line":59,"column":18,"nodeType":"490","messageId":"491","endLine":59,"endColumn":22},{"ruleId":"488","severity":1,"message":"529","line":59,"column":24,"nodeType":"490","messageId":"491","endLine":59,"endColumn":30},{"ruleId":"488","severity":1,"message":"530","line":59,"column":32,"nodeType":"490","messageId":"491","endLine":59,"endColumn":40},{"ruleId":"488","severity":1,"message":"531","line":59,"column":42,"nodeType":"490","messageId":"491","endLine":59,"endColumn":47},{"ruleId":"523","severity":1,"message":"524","line":66,"column":12,"nodeType":"525","messageId":"502","endLine":66,"endColumn":16,"fix":"532"},{"ruleId":"523","severity":1,"message":"524","line":72,"column":12,"nodeType":"525","messageId":"502","endLine":72,"endColumn":16,"fix":"533"},{"ruleId":"523","severity":1,"message":"524","line":78,"column":12,"nodeType":"525","messageId":"502","endLine":78,"endColumn":16,"fix":"534"},{"ruleId":"523","severity":1,"message":"524","line":101,"column":12,"nodeType":"525","messageId":"502","endLine":101,"endColumn":16,"fix":"535"},{"ruleId":"523","severity":1,"message":"524","line":121,"column":14,"nodeType":"525","messageId":"502","endLine":121,"endColumn":18,"fix":"536"},{"ruleId":"537","severity":1,"message":"538","line":171,"column":3,"nodeType":"539","messageId":"540","endLine":173,"endColumn":4},{"ruleId":"541","severity":1,"message":"542","line":179,"column":15,"nodeType":"490","messageId":"543","endLine":179,"endColumn":22},{"ruleId":"514","severity":1,"message":"515","line":220,"column":44,"nodeType":"516","messageId":"517","endLine":220,"endColumn":46},{"ruleId":"514","severity":1,"message":"515","line":220,"column":85,"nodeType":"516","messageId":"517","endLine":220,"endColumn":87},{"ruleId":"514","severity":1,"message":"515","line":221,"column":43,"nodeType":"516","messageId":"517","endLine":221,"endColumn":45},{"ruleId":"514","severity":1,"message":"515","line":221,"column":86,"nodeType":"516","messageId":"517","endLine":221,"endColumn":88},{"ruleId":"488","severity":1,"message":"544","line":2,"column":8,"nodeType":"490","messageId":"491","endLine":2,"endColumn":11},{"ruleId":"488","severity":1,"message":"544","line":2,"column":8,"nodeType":"490","messageId":"491","endLine":2,"endColumn":11},{"ruleId":"488","severity":1,"message":"544","line":2,"column":8,"nodeType":"490","messageId":"491","endLine":2,"endColumn":11},{"ruleId":"488","severity":1,"message":"509","line":8,"column":13,"nodeType":"490","messageId":"491","endLine":8,"endColumn":18},{"ruleId":"488","severity":1,"message":"545","line":9,"column":19,"nodeType":"490","messageId":"491","endLine":9,"endColumn":25},{"ruleId":"488","severity":1,"message":"546","line":9,"column":27,"nodeType":"490","messageId":"491","endLine":9,"endColumn":35},{"ruleId":"488","severity":1,"message":"547","line":9,"column":37,"nodeType":"490","messageId":"491","endLine":9,"endColumn":58},{"ruleId":"488","severity":1,"message":"548","line":9,"column":60,"nodeType":"490","messageId":"491","endLine":9,"endColumn":83},{"ruleId":"488","severity":1,"message":"549","line":9,"column":85,"nodeType":"490","messageId":"491","endLine":9,"endColumn":106},{"ruleId":"488","severity":1,"message":"550","line":9,"column":108,"nodeType":"490","messageId":"491","endLine":9,"endColumn":134},{"ruleId":"488","severity":1,"message":"551","line":9,"column":136,"nodeType":"490","messageId":"491","endLine":9,"endColumn":163},{"ruleId":"488","severity":1,"message":"552","line":9,"column":165,"nodeType":"490","messageId":"491","endLine":9,"endColumn":191},{"ruleId":"488","severity":1,"message":"553","line":14,"column":9,"nodeType":"490","messageId":"491","endLine":14,"endColumn":16},{"ruleId":"537","severity":1,"message":"538","line":17,"column":3,"nodeType":"539","messageId":"540","endLine":20,"endColumn":4},{"ruleId":"499","severity":1,"message":"503","line":38,"column":54,"nodeType":"501","messageId":"502","endLine":38,"endColumn":56},{"ruleId":"488","severity":1,"message":"554","line":6,"column":9,"nodeType":"490","messageId":"491","endLine":6,"endColumn":16},{"ruleId":"488","severity":1,"message":"511","line":4,"column":9,"nodeType":"490","messageId":"491","endLine":4,"endColumn":16},{"ruleId":"488","severity":1,"message":"555","line":11,"column":8,"nodeType":"490","messageId":"491","endLine":11,"endColumn":14},{"ruleId":"488","severity":1,"message":"556","line":20,"column":9,"nodeType":"490","messageId":"491","endLine":20,"endColumn":17},{"ruleId":"488","severity":1,"message":"557","line":2,"column":9,"nodeType":"490","messageId":"491","endLine":2,"endColumn":16},{"ruleId":"488","severity":1,"message":"558","line":3,"column":9,"nodeType":"490","messageId":"491","endLine":3,"endColumn":15},{"ruleId":"488","severity":1,"message":"559","line":3,"column":17,"nodeType":"490","messageId":"491","endLine":3,"endColumn":22},{"ruleId":"537","severity":1,"message":"538","line":27,"column":3,"nodeType":"539","messageId":"540","endLine":29,"endColumn":4},{"ruleId":"499","severity":1,"message":"500","line":44,"column":24,"nodeType":"501","messageId":"502","endLine":44,"endColumn":26},{"ruleId":"499","severity":1,"message":"500","line":44,"column":66,"nodeType":"501","messageId":"502","endLine":44,"endColumn":68},{"ruleId":"514","severity":1,"message":"515","line":57,"column":13,"nodeType":"516","messageId":"517","endLine":57,"endColumn":15},{"ruleId":"514","severity":1,"message":"515","line":64,"column":9,"nodeType":"516","messageId":"517","endLine":64,"endColumn":11},{"ruleId":"514","severity":1,"message":"560","line":64,"column":9,"nodeType":"516","messageId":"517","endLine":64,"endColumn":11},{"ruleId":"514","severity":1,"message":"560","line":64,"column":36,"nodeType":"516","messageId":"517","endLine":64,"endColumn":38},{"ruleId":"488","severity":1,"message":"561","line":2,"column":15,"nodeType":"490","messageId":"491","endLine":2,"endColumn":21},{"ruleId":"488","severity":1,"message":"562","line":12,"column":7,"nodeType":"490","messageId":"491","endLine":12,"endColumn":18},{"ruleId":"514","severity":1,"message":"515","line":25,"column":13,"nodeType":"516","messageId":"517","endLine":25,"endColumn":15},{"ruleId":"514","severity":1,"message":"515","line":32,"column":9,"nodeType":"516","messageId":"517","endLine":32,"endColumn":11},{"ruleId":"514","severity":1,"message":"560","line":32,"column":9,"nodeType":"516","messageId":"517","endLine":32,"endColumn":11},{"ruleId":"514","severity":1,"message":"560","line":32,"column":36,"nodeType":"516","messageId":"517","endLine":32,"endColumn":38},{"ruleId":"488","severity":1,"message":"563","line":12,"column":7,"nodeType":"490","messageId":"491","endLine":12,"endColumn":13},{"ruleId":"495","severity":1,"message":"496","line":14,"column":3,"nodeType":"497","messageId":"498","endLine":27,"endColumn":4},{"ruleId":"488","severity":1,"message":"564","line":2,"column":7,"nodeType":"490","messageId":"491","endLine":2,"endColumn":14},{"ruleId":"488","severity":1,"message":"565","line":3,"column":7,"nodeType":"490","messageId":"491","endLine":3,"endColumn":13},{"ruleId":"488","severity":1,"message":"553","line":4,"column":9,"nodeType":"490","messageId":"491","endLine":4,"endColumn":16},{"ruleId":"499","severity":1,"message":"503","line":20,"column":34,"nodeType":"501","messageId":"502","endLine":20,"endColumn":36},{"ruleId":"499","severity":1,"message":"503","line":30,"column":12,"nodeType":"501","messageId":"502","endLine":30,"endColumn":14},{"ruleId":"499","severity":1,"message":"503","line":41,"column":26,"nodeType":"501","messageId":"502","endLine":41,"endColumn":28},{"ruleId":"566","severity":1,"message":"567","line":42,"column":21,"nodeType":"568","messageId":"569","endLine":44,"endColumn":8},{"ruleId":"499","severity":1,"message":"500","line":51,"column":12,"nodeType":"501","messageId":"502","endLine":51,"endColumn":14},{"ruleId":"488","severity":1,"message":"570","line":2,"column":8,"nodeType":"490","messageId":"491","endLine":2,"endColumn":14},{"ruleId":"519","severity":1,"message":"520","line":9,"column":13,"nodeType":"521","endLine":9,"endColumn":68},{"ruleId":"519","severity":1,"message":"520","line":14,"column":5,"nodeType":"521","endLine":14,"endColumn":26},{"ruleId":"519","severity":1,"message":"520","line":46,"column":7,"nodeType":"521","endLine":49,"endColumn":34},{"ruleId":"488","severity":1,"message":"571","line":3,"column":9,"nodeType":"490","messageId":"491","endLine":3,"endColumn":19},{"ruleId":"519","severity":1,"message":"520","line":44,"column":13,"nodeType":"521","endLine":46,"endColumn":40},{"ruleId":"488","severity":1,"message":"572","line":3,"column":8,"nodeType":"490","messageId":"491","endLine":3,"endColumn":19},{"ruleId":"573","severity":1,"message":"574","line":8,"column":9,"nodeType":"521","endLine":12,"endColumn":15},{"ruleId":"519","severity":1,"message":"520","line":45,"column":7,"nodeType":"521","endLine":48,"endColumn":34},{"ruleId":"575","severity":1,"message":"576","line":23,"column":30,"nodeType":"577","messageId":"578","endLine":23,"endColumn":31,"suggestions":"579"},{"ruleId":"575","severity":1,"message":"580","line":23,"column":35,"nodeType":"577","messageId":"578","endLine":23,"endColumn":36,"suggestions":"581"},{"ruleId":"575","severity":1,"message":"576","line":23,"column":51,"nodeType":"577","messageId":"578","endLine":23,"endColumn":52,"suggestions":"582"},{"ruleId":"519","severity":1,"message":"520","line":8,"column":17,"nodeType":"521","endLine":8,"endColumn":128},{"ruleId":"499","severity":1,"message":"503","line":22,"column":33,"nodeType":"501","messageId":"502","endLine":22,"endColumn":35},{"ruleId":"519","severity":1,"message":"583","line":156,"column":5,"nodeType":"521","endLine":164,"endColumn":7},{"ruleId":"514","severity":1,"message":"515","line":26,"column":13,"nodeType":"516","messageId":"517","endLine":26,"endColumn":15},{"ruleId":"514","severity":1,"message":"515","line":27,"column":13,"nodeType":"516","messageId":"517","endLine":27,"endColumn":15},{"ruleId":"488","severity":1,"message":"584","line":3,"column":9,"nodeType":"490","messageId":"491","endLine":3,"endColumn":18},{"ruleId":"488","severity":1,"message":"585","line":3,"column":20,"nodeType":"490","messageId":"491","endLine":3,"endColumn":25},{"ruleId":"488","severity":1,"message":"586","line":11,"column":9,"nodeType":"490","messageId":"491","endLine":11,"endColumn":17},{"ruleId":"488","severity":1,"message":"587","line":11,"column":19,"nodeType":"490","messageId":"491","endLine":11,"endColumn":25},{"ruleId":"523","severity":1,"message":"524","line":62,"column":71,"nodeType":"525","messageId":"502","endLine":62,"endColumn":75,"fix":"588"},{"ruleId":"499","severity":1,"message":"503","line":94,"column":28,"nodeType":"501","messageId":"502","endLine":94,"endColumn":30},{"ruleId":"514","severity":1,"message":"515","line":112,"column":30,"nodeType":"516","messageId":"517","endLine":112,"endColumn":32},{"ruleId":"514","severity":1,"message":"515","line":113,"column":11,"nodeType":"516","messageId":"517","endLine":113,"endColumn":13},{"ruleId":"488","severity":1,"message":"511","line":4,"column":9,"nodeType":"490","messageId":"491","endLine":4,"endColumn":16},{"ruleId":"514","severity":1,"message":"515","line":64,"column":11,"nodeType":"516","messageId":"517","endLine":64,"endColumn":13},{"ruleId":"514","severity":1,"message":"515","line":69,"column":7,"nodeType":"516","messageId":"517","endLine":69,"endColumn":9},{"ruleId":"514","severity":1,"message":"515","line":27,"column":25,"nodeType":"516","messageId":"517","endLine":27,"endColumn":27},{"ruleId":"514","severity":1,"message":"515","line":28,"column":25,"nodeType":"516","messageId":"517","endLine":28,"endColumn":27},{"ruleId":"488","severity":1,"message":"589","line":3,"column":8,"nodeType":"490","messageId":"491","endLine":3,"endColumn":18},{"ruleId":"519","severity":1,"message":"520","line":50,"column":9,"nodeType":"521","endLine":50,"endColumn":33},{"ruleId":"499","severity":1,"message":"503","line":16,"column":21,"nodeType":"501","messageId":"502","endLine":16,"endColumn":23},{"ruleId":"523","severity":1,"message":"524","line":30,"column":57,"nodeType":"525","messageId":"502","endLine":30,"endColumn":61,"fix":"590"},{"ruleId":"488","severity":1,"message":"591","line":5,"column":43,"nodeType":"490","messageId":"491","endLine":5,"endColumn":68},{"ruleId":"488","severity":1,"message":"592","line":6,"column":18,"nodeType":"490","messageId":"491","endLine":6,"endColumn":37},{"ruleId":"488","severity":1,"message":"587","line":12,"column":21,"nodeType":"490","messageId":"491","endLine":12,"endColumn":27},{"ruleId":"488","severity":1,"message":"593","line":12,"column":29,"nodeType":"490","messageId":"491","endLine":12,"endColumn":38},{"ruleId":"488","severity":1,"message":"594","line":13,"column":8,"nodeType":"490","messageId":"491","endLine":13,"endColumn":14},{"ruleId":"488","severity":1,"message":"562","line":24,"column":7,"nodeType":"490","messageId":"491","endLine":24,"endColumn":18},{"ruleId":"514","severity":1,"message":"515","line":37,"column":13,"nodeType":"516","messageId":"517","endLine":37,"endColumn":15},{"ruleId":"514","severity":1,"message":"515","line":38,"column":7,"nodeType":"516","messageId":"517","endLine":38,"endColumn":9},{"ruleId":"541","severity":1,"message":"542","line":85,"column":19,"nodeType":"490","messageId":"543","endLine":85,"endColumn":26},{"ruleId":"488","severity":1,"message":"595","line":96,"column":9,"nodeType":"490","messageId":"491","endLine":96,"endColumn":19},{"ruleId":"499","severity":1,"message":"503","line":208,"column":28,"nodeType":"501","messageId":"502","endLine":208,"endColumn":30},{"ruleId":"514","severity":1,"message":"515","line":212,"column":11,"nodeType":"516","messageId":"517","endLine":212,"endColumn":13},{"ruleId":"514","severity":1,"message":"515","line":220,"column":7,"nodeType":"516","messageId":"517","endLine":220,"endColumn":9},{"ruleId":"596","severity":1,"message":"597","line":241,"column":43,"nodeType":"501","messageId":"598","endLine":241,"endColumn":44},{"ruleId":"488","severity":1,"message":"599","line":3,"column":8,"nodeType":"490","messageId":"491","endLine":3,"endColumn":15},{"ruleId":"523","severity":1,"message":"524","line":53,"column":14,"nodeType":"525","messageId":"502","endLine":53,"endColumn":18,"fix":"600"},{"ruleId":"499","severity":1,"message":"500","line":30,"column":26,"nodeType":"501","messageId":"502","endLine":30,"endColumn":28},{"ruleId":"499","severity":1,"message":"500","line":31,"column":44,"nodeType":"501","messageId":"502","endLine":31,"endColumn":46},{"ruleId":"514","severity":1,"message":"515","line":44,"column":39,"nodeType":"516","messageId":"517","endLine":44,"endColumn":41},{"ruleId":"514","severity":1,"message":"515","line":44,"column":57,"nodeType":"516","messageId":"517","endLine":44,"endColumn":59},{"ruleId":"499","severity":1,"message":"500","line":75,"column":33,"nodeType":"501","messageId":"502","endLine":75,"endColumn":35},{"ruleId":"499","severity":1,"message":"500","line":78,"column":60,"nodeType":"501","messageId":"502","endLine":78,"endColumn":62},{"ruleId":"499","severity":1,"message":"503","line":79,"column":19,"nodeType":"501","messageId":"502","endLine":79,"endColumn":21},{"ruleId":"488","severity":1,"message":"504","line":4,"column":9,"nodeType":"490","messageId":"491","endLine":4,"endColumn":18},{"ruleId":"499","severity":1,"message":"503","line":64,"column":32,"nodeType":"501","messageId":"502","endLine":64,"endColumn":34},{"ruleId":"514","severity":1,"message":"515","line":65,"column":15,"nodeType":"516","messageId":"517","endLine":65,"endColumn":17},{"ruleId":"514","severity":1,"message":"515","line":69,"column":11,"nodeType":"516","messageId":"517","endLine":69,"endColumn":13},{"ruleId":"514","severity":1,"message":"515","line":73,"column":34,"nodeType":"516","messageId":"517","endLine":73,"endColumn":36},{"ruleId":"514","severity":1,"message":"515","line":73,"column":48,"nodeType":"516","messageId":"517","endLine":73,"endColumn":50},{"ruleId":"488","severity":1,"message":"572","line":9,"column":8,"nodeType":"490","messageId":"491","endLine":9,"endColumn":19},{"ruleId":"499","severity":1,"message":"500","line":28,"column":54,"nodeType":"501","messageId":"502","endLine":28,"endColumn":56},{"ruleId":"573","severity":1,"message":"601","line":115,"column":16,"nodeType":"521","endLine":115,"endColumn":68},{"ruleId":"519","severity":1,"message":"520","line":132,"column":13,"nodeType":"521","endLine":142,"endColumn":15},{"ruleId":"573","severity":1,"message":"601","line":165,"column":13,"nodeType":"521","endLine":165,"endColumn":65},{"ruleId":"514","severity":1,"message":"515","line":172,"column":72,"nodeType":"516","messageId":"517","endLine":172,"endColumn":74},{"ruleId":"514","severity":1,"message":"515","line":172,"column":83,"nodeType":"516","messageId":"517","endLine":172,"endColumn":85},{"ruleId":"573","severity":1,"message":"601","line":178,"column":13,"nodeType":"521","endLine":178,"endColumn":65},{"ruleId":"514","severity":1,"message":"515","line":182,"column":21,"nodeType":"516","messageId":"517","endLine":182,"endColumn":23},{"ruleId":"519","severity":1,"message":"520","line":182,"column":24,"nodeType":"521","endLine":182,"endColumn":52},{"ruleId":"514","severity":1,"message":"515","line":183,"column":15,"nodeType":"516","messageId":"517","endLine":183,"endColumn":17},{"ruleId":"499","severity":1,"message":"503","line":224,"column":29,"nodeType":"501","messageId":"502","endLine":224,"endColumn":31},{"ruleId":"514","severity":1,"message":"515","line":252,"column":13,"nodeType":"516","messageId":"517","endLine":252,"endColumn":15},{"ruleId":"514","severity":1,"message":"515","line":255,"column":7,"nodeType":"516","messageId":"517","endLine":255,"endColumn":9},{"ruleId":"514","severity":1,"message":"515","line":256,"column":7,"nodeType":"516","messageId":"517","endLine":256,"endColumn":9},{"ruleId":"514","severity":1,"message":"515","line":257,"column":7,"nodeType":"516","messageId":"517","endLine":257,"endColumn":9},{"ruleId":"488","severity":1,"message":"602","line":3,"column":8,"nodeType":"490","messageId":"491","endLine":3,"endColumn":13},{"ruleId":"499","severity":1,"message":"500","line":43,"column":45,"nodeType":"501","messageId":"502","endLine":43,"endColumn":47},{"ruleId":"488","severity":1,"message":"603","line":83,"column":9,"nodeType":"490","messageId":"491","endLine":83,"endColumn":16},{"ruleId":"488","severity":1,"message":"587","line":5,"column":19,"nodeType":"490","messageId":"491","endLine":5,"endColumn":25},{"ruleId":"488","severity":1,"message":"587","line":9,"column":9,"nodeType":"490","messageId":"491","endLine":9,"endColumn":15},{"ruleId":"488","severity":1,"message":"604","line":45,"column":26,"nodeType":"490","messageId":"491","endLine":45,"endColumn":31},{"ruleId":"488","severity":1,"message":"556","line":45,"column":43,"nodeType":"490","messageId":"491","endLine":45,"endColumn":51},{"ruleId":"499","severity":1,"message":"500","line":63,"column":28,"nodeType":"501","messageId":"502","endLine":63,"endColumn":30},{"ruleId":"605","severity":1,"message":"606","line":72,"column":19,"nodeType":"607","messageId":"608","endLine":72,"endColumn":48,"fix":"609"},{"ruleId":"605","severity":1,"message":"610","line":73,"column":19,"nodeType":"607","messageId":"608","endLine":73,"endColumn":58,"fix":"611"},{"ruleId":"499","severity":1,"message":"500","line":81,"column":19,"nodeType":"501","messageId":"502","endLine":81,"endColumn":21},{"ruleId":"612","severity":1,"message":"613","line":112,"column":7,"nodeType":"614","messageId":"615","endLine":112,"endColumn":35},{"ruleId":"499","severity":1,"message":"503","line":26,"column":28,"nodeType":"501","messageId":"502","endLine":26,"endColumn":30},{"ruleId":"612","severity":1,"message":"613","line":48,"column":20,"nodeType":"614","messageId":"615","endLine":48,"endColumn":30},{"ruleId":"612","severity":1,"message":"613","line":54,"column":20,"nodeType":"614","messageId":"615","endLine":54,"endColumn":30},{"ruleId":"488","severity":1,"message":"616","line":61,"column":9,"nodeType":"490","messageId":"491","endLine":61,"endColumn":21},{"ruleId":"488","severity":1,"message":"617","line":62,"column":9,"nodeType":"490","messageId":"491","endLine":62,"endColumn":22},{"ruleId":"519","severity":1,"message":"520","line":80,"column":13,"nodeType":"521","endLine":86,"endColumn":20},"no-native-reassign",["618"],"no-negated-in-lhs",["619"],"no-unused-vars","'HeaderContainer' is defined but never used.","Identifier","unusedVar","'News' is defined but never used.","'Music' is defined but never used.","'Settings' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'followApi' is defined but never used.","'ADD_IS_FOLLOWING_FETCHING' is assigned a value but never used.","'REMOVE_IS_FOLLOWING_FETCHING' is assigned a value but never used.","'SET_SUBSCRIBERS' is assigned a value but never used.","'WS_MESSAGE' is defined but never used.","'axios' is defined but never used.","'setAuthDataActionCreator' is defined but never used.","'NavLink' is defined but never used.","'maxLeft' is assigned a value but never used.","'animation' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'rubicon' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'dialog' is assigned a value but never used.","no-extra-bind","The function binding is unnecessary.","CallExpression",{"range":"620","text":"621"},"'status' is assigned a value but never used.","'name' is assigned a value but never used.","'photos' is assigned a value but never used.","'contacts' is assigned a value but never used.","'email' is assigned a value but never used.",{"range":"622","text":"621"},{"range":"623","text":"621"},{"range":"624","text":"621"},{"range":"625","text":"621"},{"range":"626","text":"621"},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-self-assign","'user_id' is assigned to itself.","selfAssignment","'cls' is defined but never used.","'follow' is defined but never used.","'unfollow' is defined but never used.","'followedActionCreator' is defined but never used.","'unfollowedActionCreator' is defined but never used.","'setUsersActionCreator' is defined but never used.","'setUsersCountActionCreator' is defined but never used.","'setPageCurrentActionCreator' is defined but never used.","'setIsFetchingActionCreator' is defined but never used.","'userApi' is defined but never used.","'authApi' is defined but never used.","'avatar' is defined but never used.","'interval' is assigned a value but never used.","'connect' is defined but never used.","'change' is defined but never used.","'reset' is defined but never used.","Unexpected mix of '||' and '&&'.","'Fields' is defined but never used.","'maxLength30' is assigned a value but never used.","'avatar' is assigned a value but never used.","'MONTHS1' is assigned a value but never used.","'MONTHS' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'onPageChanged'.","ArrowFunctionExpression","unsafeRefs","'toggle' is defined but never used.","'profileApi' is defined but never used.","'criss_cross' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["627","628"],"Unnecessary escape character: \\@.",["629","630"],["631","632"],"<input> elements with type=\"image\" must have a text alternative through the `alt`, `aria-label`, or `aria-labelledby` prop.","'reduxForm' is defined but never used.","'Field' is defined but never used.","'TextArea' is defined but never used.","'Button' is defined but never used.",{"range":"633","text":"621"},"'menu_white' is defined but never used.",{"range":"634","text":"621"},"'minLengthOrNothingCreator' is defined but never used.","'phoneNumberValidate' is defined but never used.","'ErrorForm' is defined but never used.","'poster' is defined but never used.","'avatar_img' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'backImg' is defined but never used.",{"range":"635","text":"621"},"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'arrow' is defined but never used.","'current' is assigned a value but never used.","'field' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property ['input-height'] found.","Property","unnecessarilyComputedProperty",{"range":"636","text":"637"},"Unnecessarily computed property ['wrp-grid-template-rows'] found.",{"range":"638","text":"639"},"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","'widthPicture' is assigned a value but never used.","'heightPicture' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[1424,1435],"",[1853,1864],[2033,2044],[2211,2222],[2839,2850],[3561,3572],{"messageId":"640","fix":"641","desc":"642"},{"messageId":"643","fix":"644","desc":"645"},{"messageId":"640","fix":"646","desc":"642"},{"messageId":"643","fix":"647","desc":"645"},{"messageId":"640","fix":"648","desc":"642"},{"messageId":"643","fix":"649","desc":"645"},[1684,1695],[928,939],[1422,1433],[2537,2553],"'input-height'",[2586,2612],"'wrp-grid-template-rows'","removeEscape",{"range":"650","text":"621"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"651","text":"652"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"653","text":"621"},{"range":"654","text":"652"},{"range":"655","text":"621"},{"range":"656","text":"652"},[812,813],[812,812],"\\",[817,818],[817,817],[833,834],[833,833]]