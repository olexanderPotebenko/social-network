{"ast":null,"code":"var _jsxFileName = \"/root/Documents/projects/social-network/src/components/Profile/ProfileInfo/ProfileInfo.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { requiredFields, maxLengthCreator, minLengthOrNothingCreator, emailValidate, phoneNumberValidate } from '../../../utils/validators.js';\nimport { nameNor, phoneNumberNor } from '../../../utils/fieldNormalizators.js';\nimport styles from './ProfileInfo.module.css';\nimport WithAuthData from '../../../hocs/WithAuthData';\nimport { updateProfile, getProfile } from '../../../reducers/profileReducer';\nimport { InputImage, Button, ErrorForm } from '../../commons/FormsControls/FormsControls.jsx';\nimport poster from '../../../assets/images/space.jpg';\nimport default_avatar from '../../../assets/images/avatar_default.png';\nimport FetchingToggle from '../../commons/FetchingToggle/FetchingToggle';\nimport AvatarByPath from '../../commons/AvatarByPath/AvatarByPath.jsx';\nlet svg = [/*#__PURE__*/React.createElement(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  class: \"rubicons pencil-write\",\n  width: \"36\",\n  height: \"36\",\n  viewBox: \"0 0 24 24\",\n  stroke: \"currentColor\",\n  \"stroke-width\": \"1.5\",\n  fill: \"none\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 21h18M12.8889 5.5556l3.5555 3.5555M7.5556 18L20 5.5556 16.4444 2 4 14.4444V18h3.5556z\",\n  \"stroke-linecap\": \"round\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }\n}))];\nconst maxLength30 = maxLengthCreator(30);\n\nconst Input2 = ({\n  input,\n  meta,\n  editMode,\n  ...props\n}) => {\n  let input_styles = [styles.input];\n  input_styles.push(styles.input2_text);\n  input_styles = input_styles.join(' ');\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.input2_wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.input_container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, editMode && /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: input_styles\n  }, input, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }\n  })) || /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.input2_text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }\n  }, input.value))));\n};\n\n_c = Input2;\n\nclass ProfileInfo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editMode: false,\n      isFetching: false\n    };\n\n    this.changeEditMode = () => {\n      this.setState({\n        editMode: !this.state.editMode\n      });\n    };\n\n    this.changeIsFetching = () => {\n      this.setState({\n        isFetching: !this.state.isFetching\n      });\n    };\n\n    this.onSubmit = async ({\n      phone,\n      address,\n      DOB,\n      picture\n    }) => {\n      let formData = new FormData();\n      if (phone) formData.append('phone', phone);\n      if (address) formData.append('address', address);\n      if (DOB) formData.append('DOB', DOB);\n      if (picture) formData.append('image', picture);\n      let options = {\n        formData,\n        id: this.props.auth.id,\n        token: this.props.auth.token\n      };\n      this.changeIsFetching();\n      this.props.updateProfile(options).then(res => {\n        this.changeIsFetching();\n        this.changeEditMode();\n        this.props.changeVisibleModal(false); // toto возможно нужно будет удалить 7 строк снизу\n\n        let user_id = this.props.profile.id;\n        user_id = user_id;\n        let options = {\n          user_id,\n          id: this.props.auth ? this.props.auth.id : '',\n          token: this.props.auth ? this.props.auth.token : ''\n        };\n        this.props.getProfile(options);\n      });\n    };\n  }\n\n  render() {\n    let avatar_img = this.props.photo || default_avatar;\n    let save_button = /*#__PURE__*/React.createRef();\n    let avatar_ref = /*#__PURE__*/React.createRef();\n    let change_photo_button = /*#__PURE__*/React.createRef();\n    let avatarStyles = {\n      wrp: {\n        width: '200px',\n        height: '200px'\n      },\n      img: {\n        'border-radius': 5\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.wrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AvatarByPath, {\n      id: this.props.profile.id,\n      photo: this.props.profile.photos.small,\n      styles: avatarStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }), this.state.editMode && /*#__PURE__*/React.createElement(\"div\", {\n      className: styles['change-photo-button'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      ref: change_photo_button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, svg[0]))), /*#__PURE__*/React.createElement(ProfileInfoReduxForm, {\n      onSubmit: this.onSubmit,\n      auth: this.props.auth,\n      profile: this.props.profile,\n      changeEditMode: this.changeEditMode.bind(this),\n      state: this.state,\n      avatar_ref: avatar_ref,\n      change_photo_button: change_photo_button,\n      editMode: this.state.editMode,\n      save_button: save_button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\n;\n\nclass ProfileInfoForm extends React.Component {\n  render() {\n    const getFormatDate = () => {\n      let date = new Date();\n      let result = `${date.getFullYear()}-${1 + +date.getMonth()}-${date.getDate()}`.replace(/-(\\d)-/g, '-0$1-');\n      return result;\n    };\n\n    this.props.editMode || this.props.reset();\n    let info = [{\n      name: 'name',\n      placeholder: 'Enter your name',\n      validate: [requiredFields],\n      normalize: undefined,\n      type: 'text'\n    }, {\n      name: 'email',\n      placeholder: 'Enter your email',\n      validate: [requiredFields, emailValidate],\n      normalize: undefined,\n      type: 'text'\n    }, {\n      name: 'phone',\n      placeholder: 'Enter your phone number',\n      validate: [],\n      phoneNumberNor,\n      type: 'text'\n    }, {\n      name: 'address',\n      placeholder: 'Enter your address',\n      validate: [],\n      nameNor,\n      type: 'text'\n    }, {\n      name: 'DOB',\n      placeholder: 'Enter your age',\n      validate: [],\n      normalize: undefined,\n      type: 'date',\n      max: getFormatDate()\n    }];\n    info = info.filter(item => this.props.editMode || Object.keys(this.props.initialValues).includes(item.name)).map((item, i) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: styles['item-field'],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }\n      }, item.name + ': '), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles['item-data'],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Field, Object.assign({}, item, {\n        autoFocus: i === 2,\n        editMode: ['name', 'email'].includes(item.name) ? undefined : this.props.editMode,\n        component: Input2,\n        placeholder: item.placeholder,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }\n      }))));\n    });\n\n    if (this.props.avatar_ref.current) {\n      this.props.avatar_ref.current.innerHTML = `<img src=\"\" />`;\n    }\n\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit,\n      className: styles['list-info'],\n      autoFocus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }\n    }, info, this.props.state.editMode && /*#__PURE__*/React.createElement(Field, {\n      name: \"picture\",\n      component: InputImage,\n      change_photo_button: this.props.change_photo_button,\n      type: \"file\",\n      value: null,\n      avatar_ref: this.props.avatar_ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 16\n      }\n    })), this.props.auth.id == this.props.profile.id && /*#__PURE__*/React.createElement(\"div\", {\n      className: styles['buttons-wrapper'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 14\n      }\n    }, !this.props.state.editMode && /*#__PURE__*/React.createElement(\"button\", {\n      className: 'commons-modal-button',\n      onClick: e => {\n        e.preventDefault();\n        this.props.changeEditMode();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 14\n      }\n    }, \"CHANGE\") || /*#__PURE__*/React.createElement(\"button\", {\n      name: 'submit',\n      type: \"submit\",\n      disabled: this.props.state.isFetching,\n      className: 'commons-modal-button',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 10\n      }\n    }, \"SAVE\"), this.props.state.isFetching && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: 'left',\n        height: '35px',\n        width: '35px',\n        padding: '5px',\n        'box-sizing': 'border-box',\n        'margin-right': '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FetchingToggle, {\n      background: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 7\n      }\n    })), this.props.state.editMode && /*#__PURE__*/React.createElement(\"button\", {\n      className: 'commons-modal-button' + ' ' + styles['change-info-cancel'],\n      onClick: this.props.changeEditMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }\n    }, \"CANCEL\")));\n  }\n\n}\n\n;\nlet ProfileInfoReduxForm = compose(connect(state => ({\n  initialValues: { ...state.profilePage.profile,\n    ...state.profilePage.profile.info[0]\n  } // pull initial values from account reducer\n\n})), reduxForm({\n  form: 'profile-info'\n}))(ProfileInfoForm);\n\nlet mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile,\n    photo: state.profilePage.profile.photos ? state.profilePage.profile.photos.small : ''\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  updateProfile,\n  getProfile\n}), WithAuthData)(ProfileInfo);\n\nvar _c;\n\n$RefreshReg$(_c, \"Input2\");","map":{"version":3,"sources":["/root/Documents/projects/social-network/src/components/Profile/ProfileInfo/ProfileInfo.jsx"],"names":["React","connect","compose","Field","reduxForm","requiredFields","maxLengthCreator","minLengthOrNothingCreator","emailValidate","phoneNumberValidate","nameNor","phoneNumberNor","styles","WithAuthData","updateProfile","getProfile","InputImage","Button","ErrorForm","poster","default_avatar","FetchingToggle","AvatarByPath","svg","maxLength30","Input2","input","meta","editMode","props","input_styles","push","input2_text","join","input2_wrapper","input_container","value","ProfileInfo","Component","state","isFetching","changeEditMode","setState","changeIsFetching","onSubmit","phone","address","DOB","picture","formData","FormData","append","options","id","auth","token","then","res","changeVisibleModal","user_id","profile","render","avatar_img","photo","save_button","createRef","avatar_ref","change_photo_button","avatarStyles","wrp","width","height","img","wrapper","avatar","photos","small","bind","ProfileInfoForm","getFormatDate","date","Date","result","getFullYear","getMonth","getDate","replace","reset","info","name","placeholder","validate","normalize","undefined","type","max","filter","item","Object","keys","initialValues","includes","map","i","current","innerHTML","handleSubmit","e","preventDefault","float","padding","ProfileInfoReduxForm","profilePage","form","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport {Field, reduxForm} from 'redux-form';\nimport {requiredFields, maxLengthCreator, minLengthOrNothingCreator, \n  emailValidate, phoneNumberValidate} from '../../../utils/validators.js';\nimport {nameNor, phoneNumberNor} from '../../../utils/fieldNormalizators.js';\nimport styles from './ProfileInfo.module.css';\nimport WithAuthData from '../../../hocs/WithAuthData';\nimport {updateProfile, getProfile} from '../../../reducers/profileReducer';\n\nimport {InputImage, Button, ErrorForm} from '../../commons/FormsControls/FormsControls.jsx';\nimport poster from '../../../assets/images/space.jpg';\nimport default_avatar from '../../../assets/images/avatar_default.png';\nimport FetchingToggle from '../../commons/FetchingToggle/FetchingToggle';\nimport AvatarByPath from '../../commons/AvatarByPath/AvatarByPath.jsx';\n\nlet svg = [\n  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"rubicons pencil-write\" width=\"36\" height=\"36\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"1.5\" fill=\"none\">\n    <path d=\"M3 21h18M12.8889 5.5556l3.5555 3.5555M7.5556 18L20 5.5556 16.4444 2 4 14.4444V18h3.5556z\" stroke-linecap=\"round\"></path>\n  </svg>,\n];\n\nconst maxLength30 = maxLengthCreator(30);\n\nconst Input2 = ({input, meta, editMode, ...props}) => {\n\n  let input_styles = [styles.input];\n  input_styles.push(styles.input2_text);\n  input_styles = input_styles.join(' ');\n\n  return <>\n    <div className={styles.input2_wrapper}>\n      <div className={styles.input_container}>\n        {\n          editMode\n            && <input className={input_styles} {...input} {...props}/>\n      || <div className={styles.input2_text} >{input.value}</div>\n      }\n      </div>\n    </div>\n  </>\n};\n\nclass ProfileInfo extends React.Component {\n\n  state = {\n    editMode: false,\n    isFetching: false,\n  }\n\n  changeEditMode = () => {\n    this.setState({editMode: !this.state.editMode});\n  }\n\n  changeIsFetching = () => {\n    this.setState({isFetching: !this.state.isFetching});\n  }\n\n  onSubmit = async ({phone, address, DOB, picture}) => {\n    let formData = new FormData();\n    if(phone)\n      formData.append('phone', phone);\n    if(address)\n      formData.append('address', address);\n    if(DOB)\n      formData.append('DOB', DOB);\n    if(picture)\n      formData.append('image', picture);\n\n    let options = {\n      formData,\n      id: this.props.auth.id,\n      token: this.props.auth.token,\n    };\n\n    this.changeIsFetching();\n    this.props.updateProfile(options)\n      .then(res => {\n        this.changeIsFetching();\n        this.changeEditMode();\n        this.props.changeVisibleModal(false);\n        // toto возможно нужно будет удалить 7 строк снизу\n        let user_id = this.props.profile.id;\n        user_id = user_id;\n        let options = {\n          user_id,\n          id: this.props.auth? this.props.auth.id: '',\n          token: this.props.auth? this.props.auth.token: '',\n        };\n        this.props.getProfile(options);\n      });\n  }\n\n  render () {\n    let avatar_img = this.props.photo || default_avatar;\n    let save_button = React.createRef();\n    let avatar_ref = React.createRef();\n    let change_photo_button = React.createRef();\n    let avatarStyles = {\n      wrp: {\n        width: '200px',\n        height: '200px',\n      },\n      img: {\n        'border-radius': 5,\n      },\n    };\n    return (\n      <div className={styles.wrapper}>\n        <div className={styles.avatar}>\n          <AvatarByPath id={this.props.profile.id} photo={this.props.profile.photos.small} styles={avatarStyles} />\n          {\n            this.state.editMode && <div className={styles['change-photo-button']} >\n          <button ref={change_photo_button} >\n            {svg[0]}\n          </button>\n        </div>\n        }\n      </div>\n\n        <ProfileInfoReduxForm onSubmit={this.onSubmit} \n          auth={this.props.auth}\n          profile={this.props.profile}\n          changeEditMode={this.changeEditMode.bind(this)}\n          state={this.state}\n          avatar_ref={avatar_ref}\n          change_photo_button={change_photo_button}\n          editMode={this.state.editMode} save_button={save_button} />\n      </div>\n    );\n  }\n};\n\nclass ProfileInfoForm extends React.Component {\n\n  render() {\n\n    const getFormatDate = () => {\n      let date = new Date();\n      let result = `${date.getFullYear()}-${1 + +date.getMonth()}-${date.getDate()}`.replace(/-(\\d)-/g, '-0$1-');\n      return result;\n    };\n    this.props.editMode || this.props.reset();\n    let info = [\n      {\n        name: 'name', placeholder: 'Enter your name', \n        validate: [requiredFields], normalize: undefined, \n        type: 'text'\n      },\n      {\n        name: 'email', placeholder: 'Enter your email', \n        validate: [requiredFields, emailValidate], normalize: undefined, \n        type: 'text'\n      },\n      {\n        name: 'phone', placeholder: 'Enter your phone number', \n        validate: [], phoneNumberNor, \n        type: 'text'\n      },\n      {\n        name: 'address', placeholder: 'Enter your address', \n        validate: [], nameNor, \n        type: 'text'\n      },\n      {\n        name: 'DOB', placeholder: 'Enter your age', \n        validate: [], normalize: undefined, \n        type: 'date', max: getFormatDate(),\n      },\n    ];\n\n    info = info\n      .filter(item => \n        this.props.editMode || Object.keys(this.props.initialValues).includes(item.name))\n        .map((item, i) => {\n          return <li>\n            <span className={styles['item-field']}>\n              {item.name + ': '}\n            </span>\n            <div className={styles['item-data']}>\n\n              <Field {...item}\n                autoFocus={i === 2} \n                editMode={ ['name', 'email'].includes(item.name)? undefined: this.props.editMode}\n                component={Input2} \n                placeholder={item.placeholder} />\n            </div>\n\n          </li>\n        });\n    if(this.props.avatar_ref.current){\n      this.props.avatar_ref.current.innerHTML = `<img src=\"\" />`;\n    }\n\n    return <form onSubmit={this.props.handleSubmit} \n      className={styles['list-info']} autoFocus={true}>\n      <ul>\n        {info}\n        {\n          this.props.state.editMode \n            && <Field name=\"picture\" component={InputImage} \n        change_photo_button={this.props.change_photo_button}\n        type=\"file\" value={null} avatar_ref={this.props.avatar_ref} />\n      }\n      </ul>\n      {\n        this.props.auth.id == this.props.profile.id\n          && <div className={styles['buttons-wrapper']}>\n      {\n        !this.props.state.editMode \n          && <button className={'commons-modal-button'}\n      onClick={(e) => {\n        e.preventDefault();\n        this.props.changeEditMode();\n      }\n      } >\n      CHANGE\n    </button>\n      || <button name={'submit'} type='submit' \n        disabled={this.props.state.isFetching}\n        className={'commons-modal-button'} >\n        SAVE\n      </button>\n      }\n      {\n        this.props.state.isFetching\n          && \n          <div  style={ {\n            float: 'left', \n            height: '35px', width: '35px',\n            padding: '5px', 'box-sizing': 'border-box',\n            'margin-right': '10px'\n      } } >\n      <FetchingToggle background={true} />\n                                    </div>\n      }\n      {\n        this.props.state.editMode && \n          <button \n        className={'commons-modal-button' + ' ' \n          + styles['change-info-cancel']}\n      onClick={this.props.changeEditMode} >\n      CANCEL\n                                            </button>\n      }\n                                        </div>\n      }\n\n                                    </form>\n  }\n};\n\n\nlet ProfileInfoReduxForm = compose(\n  connect(\n    state => ({\n      initialValues: {\n        ...state.profilePage.profile,\n        ...state.profilePage.profile.info[0],\n      }// pull initial values from account reducer\n    })\n  ),\n  reduxForm({form: 'profile-info'}),\n)(ProfileInfoForm)\n\nlet mapStateToProps = (state) => {\n  return {\n    profile: state.profilePage.profile,\n    photo: state.profilePage.profile.photos? state.profilePage.profile.photos.small: '',\n  }\n};\n\nexport default compose(\n  connect(mapStateToProps, {updateProfile, getProfile}),\n  WithAuthData)\n(ProfileInfo);\n"]},"metadata":{},"sourceType":"module"}