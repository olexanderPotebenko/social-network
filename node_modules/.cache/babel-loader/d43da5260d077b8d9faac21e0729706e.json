{"ast":null,"code":"import { v4 } from 'uuid';\nimport { profileApi } from '../api/api.js';\nexport const ADD_NOTIFICATIONS = 'ADD-NOTIFICATIONS';\nexport const REMOVE_NOTIFICATION = 'REMOVE-NOTIFICATION';\nexport const SET_OPACITY = 'SET-OPACITY';\nexport const SEND_YOU_MESSAGE = 'send you message';\nexport const FOLLOW_YOU = 'subscribed to you';\nexport const LIKE_YOUR_POST = 'liked your post';\nlet initial_state = {\n  notifications: []\n};\n\nlet notifi = (state = initial_state, action) => {\n  switch (action.type) {\n    case ADD_NOTIFICATIONS:\n      let newState = { ...state,\n        notifications: state.notifications.concat({\n          id: v4(),\n          opacity: 1,\n          date: new Date().getTime(),\n          user: action.user,\n          description: action.description\n        }).slice(-4)\n      };\n      return newState;\n\n    case REMOVE_NOTIFICATION:\n      return { ...state,\n        notifications: state.notifications.filter(item => item.id !== action.id)\n      };\n\n    case SET_OPACITY:\n      return { ...state,\n        notifications: state.notifications.map(item => item.id === action.id ? { ...item,\n          opacity: action.opacity\n        } : item)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const addNotificationActionCreator = (user, description) => ({\n  type: ADD_NOTIFICATIONS,\n  user,\n  description\n});\nexport const removeNotification = id => ({\n  type: REMOVE_NOTIFICATION,\n  id\n});\nexport const setOpacity = (id, opacity) => ({\n  type: SET_OPACITY,\n  id,\n  opacity\n});\nexport const addNotification = (options, description) => dispatch => {\n  profileApi.getProfile(options).then(res => {\n    let user = {\n      id: options.user_id,\n      name: res.data.name\n    };\n    dispatch(addNotificationActionCreator(user, description));\n  });\n};\nexport default notifi;","map":{"version":3,"sources":["/root/Documents/projects/social-network/src/reducers/notifi.js"],"names":["v4","profileApi","ADD_NOTIFICATIONS","REMOVE_NOTIFICATION","SET_OPACITY","SEND_YOU_MESSAGE","FOLLOW_YOU","LIKE_YOUR_POST","initial_state","notifications","notifi","state","action","type","newState","concat","id","opacity","date","Date","getTime","user","description","slice","filter","item","map","addNotificationActionCreator","removeNotification","setOpacity","addNotification","options","dispatch","getProfile","then","res","user_id","name","data"],"mappings":"AAAA,SAAQA,EAAR,QAAiB,MAAjB;AACA,SAAQC,UAAR,QAAyB,eAAzB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AAEP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,UAAU,GAAG,mBAAnB;AAEP,OAAO,MAAMC,cAAc,GAAG,iBAAvB;AAEP,IAAIC,aAAa,GAAG;AAClBC,EAAAA,aAAa,EAAE;AADG,CAApB;;AAIA,IAAIC,MAAM,GAAG,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,iBAAL;AACE,UAAIY,QAAQ,GAAG,EACb,GAAGH,KADU;AAEbF,QAAAA,aAAa,EAAEE,KAAK,CAACF,aAAN,CAAoBM,MAApB,CAA2B;AACxCC,UAAAA,EAAE,EAAEhB,EAAE,EADkC;AAExCiB,UAAAA,OAAO,EAAE,CAF+B;AAGxCC,UAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EAHkC;AAIxCC,UAAAA,IAAI,EAAET,MAAM,CAACS,IAJ2B;AAKxCC,UAAAA,WAAW,EAAEV,MAAM,CAACU;AALoB,SAA3B,EAMZC,KANY,CAMN,CAAC,CANK;AAFF,OAAf;AAUA,aAAOT,QAAP;;AACF,SAAKX,mBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELF,QAAAA,aAAa,EAAEE,KAAK,CAACF,aAAN,CAAoBe,MAApB,CAA2BC,IAAI,IAAIA,IAAI,CAACT,EAAL,KAAYJ,MAAM,CAACI,EAAtD;AAFV,OAAP;;AAIA,SAAKZ,WAAL;AACA,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,aAAa,EAAEE,KAAK,CAACF,aAAN,CACdiB,GADc,CACVD,IAAI,IAAIA,IAAI,CAACT,EAAL,KAAYJ,MAAM,CAACI,EAAnB,GAAuB,EAAC,GAAGS,IAAJ;AAAUR,UAAAA,OAAO,EAAEL,MAAM,CAACK;AAA1B,SAAvB,GAA2DQ,IADzD;AAFV,OAAP;;AAKF;AACE,aAAOd,KAAP;AAzBJ;AA2BD,CA5BD;;AA8BA,OAAO,MAAMgB,4BAA4B,GAAG,CAACN,IAAD,EAAOC,WAAP,MACzC;AAACT,EAAAA,IAAI,EAAEX,iBAAP;AAA0BmB,EAAAA,IAA1B;AAAgCC,EAAAA;AAAhC,CADyC,CAArC;AAEP,OAAO,MAAMM,kBAAkB,GAAGZ,EAAE,KAAK;AAACH,EAAAA,IAAI,EAAEV,mBAAP;AAA4Ba,EAAAA;AAA5B,CAAL,CAA7B;AAEP,OAAO,MAAMa,UAAU,GAAG,CAACb,EAAD,EAAKC,OAAL,MAAkB;AAACJ,EAAAA,IAAI,EAAET,WAAP;AAAoBY,EAAAA,EAApB;AAAwBC,EAAAA;AAAxB,CAAlB,CAAnB;AAEP,OAAO,MAAMa,eAAe,GAAG,CAACC,OAAD,EAAUT,WAAV,KAA0BU,QAAQ,IAAI;AACnE/B,EAAAA,UAAU,CAACgC,UAAX,CAAsBF,OAAtB,EACGG,IADH,CACQC,GAAG,IAAI;AACX,QAAId,IAAI,GAAG;AACTL,MAAAA,EAAE,EAAEe,OAAO,CAACK,OADH;AAETC,MAAAA,IAAI,EAAEF,GAAG,CAACG,IAAJ,CAASD;AAFN,KAAX;AAIAL,IAAAA,QAAQ,CAACL,4BAA4B,CAACN,IAAD,EAAOC,WAAP,CAA7B,CAAR;AACD,GAPH;AAQD,CATM;AAWP,eAAeZ,MAAf","sourcesContent":["import {v4} from 'uuid';\nimport {profileApi} from '../api/api.js';\n\nexport const ADD_NOTIFICATIONS = 'ADD-NOTIFICATIONS';\nexport const REMOVE_NOTIFICATION = 'REMOVE-NOTIFICATION';\nexport const SET_OPACITY = 'SET-OPACITY';\n\nexport const SEND_YOU_MESSAGE = 'send you message';\nexport const FOLLOW_YOU = 'subscribed to you';\n\nexport const LIKE_YOUR_POST = 'liked your post';\n\nlet initial_state = {\n  notifications: [],\n};\n\nlet notifi = (state = initial_state, action) => {\n  switch (action.type) {\n    case ADD_NOTIFICATIONS:\n      let newState = {\n        ...state,\n        notifications: state.notifications.concat({\n          id: v4(),\n          opacity: 1,\n          date: new Date().getTime(),\n          user: action.user,\n          description: action.description,\n        }).slice(-4),\n      }\n      return newState;\n    case REMOVE_NOTIFICATION:\n      return {\n        ...state,\n        notifications: state.notifications.filter(item => item.id !== action.id),\n      }\n      case SET_OPACITY:\n      return {\n        ...state,\n        notifications: state.notifications\n        .map(item => item.id === action.id? {...item, opacity: action.opacity}: item),\n      }\n    default:\n      return state;\n  }\n}\n\nexport const addNotificationActionCreator = (user, description) => \n  ({type: ADD_NOTIFICATIONS, user, description});\nexport const removeNotification = id => ({type: REMOVE_NOTIFICATION, id});\n\nexport const setOpacity = (id, opacity) => ({type: SET_OPACITY, id, opacity});\n\nexport const addNotification = (options, description) => dispatch => {\n  profileApi.getProfile(options)\n    .then(res => {\n      let user = {\n        id: options.user_id,\n        name: res.data.name,\n      };\n      dispatch(addNotificationActionCreator(user, description));\n    });\n}\n\nexport default notifi;\n\n"]},"metadata":{},"sourceType":"module"}