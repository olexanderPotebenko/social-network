{"ast":null,"code":"var _jsxFileName = \"/root/Documents/projects/social-network/src/components/Profile/Posts/Post/Post.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { likedPost, deletePost } from '../../../../reducers/profileReducer';\nimport styles from './Post.module.css';\nimport { getFormatedDate } from '../../../../utils/functions';\nimport heart from '../../../../assets/images/heart.png';\nimport heart_fool from '../../../../assets/images/heart_fool.png';\nimport criss_cross from '../../../../assets/images/criss-cross.png';\nimport FetchingToggle from '../../../commons/FetchingToggle/FetchingToggle';\nimport FullSizeToggle from '../../../commons/FullSizeToggle/FullSizeToggle';\nimport FullSizeImage from '../../../commons/FullSizeImage/FullSizeImage';\nimport Modal from '../../../commons/Modal/Modal';\nimport UserItem from '../../../commons/UserItem/UserItem.jsx';\nimport CloseButton from '../../../commons/CloseButton/CloseButton.jsx';\nimport ListIsEmpty from '../../../commons/ListIsEmpty/ListIsEmpty.jsx';\nimport { profileApi } from '../../../../api/api.js';\n\nclass Post extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      interval: undefined,\n      imageWrp: /*#__PURE__*/React.createRef(),\n      img: undefined,\n      widthMax: 0,\n      heightMax: 400,\n      width: 0,\n      height: 0,\n      withPicture: !!this.props.post.picture,\n      isLoadPicture: false,\n      like_fetching: false,\n      isFullSize: false,\n      showWhoLikedModal: false\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.interval) {\n      let interval = setInterval(() => {\n        // console.log(this.state.interval);\n        if (this.state.imageWrp.current && this.state.imageWrp.current.clientWidth != this.state.widthMax) {\n          // console.log(this.state.widthMax);\n          this.setState({\n            widthMax: this.state.imageWrp.current.clientWidth\n          });\n        }\n\n        if (this.state.img) this.fitImage();\n      }, 500);\n      this.setState({\n        interval\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.interval);\n  }\n\n  fitImage(e) {\n    let width, height;\n    width = this.state.imageWrp.current.clientWidth; // width = e.currentTarget.parentElement.clientWidth;\n\n    height = width * this.state.img.height / this.state.img.width;\n    this.setState({\n      width,\n      height\n    });\n  }\n\n  async onLikes(e) {\n    let options = {\n      id: this.props.auth.id,\n      user_id: this.props.profile.id,\n      token: this.props.auth.token,\n      post_id: this.props.post.id\n    };\n    this.setState({\n      like_fetching: true\n    });\n    await this.props.likedPost(options);\n    this.setState({\n      like_fetching: false\n    });\n  }\n\n  async onDelete(e) {\n    let options = {\n      id: this.props.auth.id,\n      token: this.props.auth.token,\n      post_id: this.props.post.id\n    };\n    await this.props.deletePost(options);\n  }\n\n  isLiked() {\n    return this.props.post.likes.includes(this.props.auth.id) ? heart_fool : heart;\n  }\n\n  fullSizeToggle() {\n    this.setState({\n      isFullSize: !this.state.isFullSize\n    });\n  }\n\n  showWhoLikedModalToggle() {\n    this.setState({\n      showWhoLikedModal: !this.state.showWhoLikedModal\n    });\n  }\n\n  render() {\n    window.localState = this.state;\n    let users_ho_liked = this.props.post.likes.map(id => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.user_ho_liked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 14\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.wrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }, this.props.auth.id === this.props.profile.id && /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      onClick: e => {\n        e.preventDefault();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.criss_cross,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CloseButton, {\n      close: this.onDelete.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, getFormatedDate(this.props.post.date)), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.state.imageWrp,\n      className: styles.post_picture_wrp,\n      style: {\n        'max-height': this.state.heightMax\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles['full-size'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FullSizeToggle, {\n      isFullSize: this.state.isFullSize,\n      fullSizeToggle: this.fullSizeToggle.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.post.picture,\n      className: styles.post_picture,\n      onLoad: e => {\n        let img = new Image();\n        img.src = e.currentTarget.currentSrc;\n        this.setState({\n          img,\n          isLoadPicture: true\n        }); //setTimeout(() => this.fitImage(e));\n      },\n      style: {\n        width: '100%',\n        height: this.state.isLoadPicture ? 0 : 200\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        'background-image': `url(\"${this.props.post.picture}\")`,\n        'background-repeat': 'no-repeat',\n        'background-size': 'contain',\n        'background-position': 'center',\n        position: 'relative',\n        width: this.state.width,\n        height: this.state.height\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }), !this.state.isLoadPicture && /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.fetching,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(FetchingToggle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, this.props.post.text), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.likes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      onClick: e => {\n        e.preventDefault();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.count,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.text,\n      onClick: this.showWhoLikedModalToggle.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, this.props.post.likes.length), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.user_ho_liked_wrp,\n      style: {\n        'max-width': this.state.user_count_edit_mode && '120px' || '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, users_ho_liked.splice(0, 3), \"...\"))), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      onClick: e => {\n        e.preventDefault();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.heart,\n      onClick: this.onLikes.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }, !this.state.like_fetching && /*#__PURE__*/React.createElement(\"img\", {\n      src: this.isLiked(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 24\n      }\n    }) || /*#__PURE__*/React.createElement(FetchingToggle, {\n      width: 22,\n      height: 22,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 18\n      }\n    }))))), this.state.isFullSize && /*#__PURE__*/React.createElement(FullSizeImage, {\n      fullSizeToggle: this.fullSizeToggle.bind(this),\n      posts: this.props.posts,\n      picture: this.props.post.picture,\n      width: this.state.width,\n      height: this.state.height,\n      isFullSize: this.state.isFullSize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 16\n      }\n    }), this.state.showWhoLikedModal && /*#__PURE__*/React.createElement(Modal, {\n      changeVisibleModal: this.showWhoLikedModalToggle.bind(this),\n      scrollbar: this.props.scrollbar,\n      likes: this.props.post.likes,\n      post_id: this.props.post.id,\n      user_id: this.props.profile.id,\n      Component: WhoLikedModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 14\n      }\n    }));\n  }\n\n}\n\n;\n\nclass WhoLikedModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      likers: [],\n      isFetching: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isFetching: true\n    });\n    let options = {\n      user_id: this.props.user_id,\n      post_id: this.props.post_id\n    };\n    profileApi.getLikersPost(options).then(data => {\n      if (data.result_code == 0) {\n        // console.log('res' + data.users);\n        this.setState({\n          likers: data.users\n        });\n      } else {}\n\n      this.setState({\n        isFetching: false\n      });\n    });\n  }\n\n  render() {\n    let users = this.state.likers.map(user => {\n      return /*#__PURE__*/React.createElement(UserItem, {\n        user: user,\n        changeVisibleModal: () => {\n          this.props.changeVisibleModal();\n          this.props.scrollbar.current.scrollTop = 0;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 14\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles['likers-wrp'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.scrollbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 7\n      }\n    }, this.state.isFetching && /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.fetching,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(FetchingToggle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }\n    })) || users.length && users || /*#__PURE__*/React.createElement(ListIsEmpty, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 10\n      }\n    })));\n  }\n\n}\n\nexport default connect(() => {}, {\n  likedPost,\n  deletePost\n})(Post);","map":{"version":3,"sources":["/root/Documents/projects/social-network/src/components/Profile/Posts/Post/Post.jsx"],"names":["React","connect","likedPost","deletePost","styles","getFormatedDate","heart","heart_fool","criss_cross","FetchingToggle","FullSizeToggle","FullSizeImage","Modal","UserItem","CloseButton","ListIsEmpty","profileApi","Post","Component","state","interval","undefined","imageWrp","createRef","img","widthMax","heightMax","width","height","withPicture","props","post","picture","isLoadPicture","like_fetching","isFullSize","showWhoLikedModal","componentDidMount","setInterval","current","clientWidth","setState","fitImage","componentWillUnmount","clearInterval","e","onLikes","options","id","auth","user_id","profile","token","post_id","onDelete","isLiked","likes","includes","fullSizeToggle","showWhoLikedModalToggle","render","window","localState","users_ho_liked","map","user_ho_liked","wrapper","preventDefault","bind","date","post_picture_wrp","post_picture","Image","src","currentTarget","currentSrc","position","fetching","text","count","length","user_ho_liked_wrp","user_count_edit_mode","splice","posts","scrollbar","WhoLikedModal","likers","isFetching","getLikersPost","then","data","result_code","users","user","changeVisibleModal","scrollTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {likedPost, deletePost} from '../../../../reducers/profileReducer';\nimport styles from './Post.module.css';\nimport {getFormatedDate} from '../../../../utils/functions';\n\nimport heart from '../../../../assets/images/heart.png';\nimport heart_fool from '../../../../assets/images/heart_fool.png';\nimport criss_cross from '../../../../assets/images/criss-cross.png';\n\nimport FetchingToggle from '../../../commons/FetchingToggle/FetchingToggle';\nimport FullSizeToggle from '../../../commons/FullSizeToggle/FullSizeToggle';\nimport FullSizeImage from '../../../commons/FullSizeImage/FullSizeImage';\nimport Modal from '../../../commons/Modal/Modal';\nimport UserItem from '../../../commons/UserItem/UserItem.jsx';\nimport CloseButton from '../../../commons/CloseButton/CloseButton.jsx';\nimport ListIsEmpty from '../../../commons/ListIsEmpty/ListIsEmpty.jsx';\n\nimport {profileApi} from '../../../../api/api.js';\n\nclass Post extends React.Component {\n\n  componentDidMount() {\n    if(!this.state.interval){\n      let interval = setInterval(() => {\n        // console.log(this.state.interval);\n        if(this.state.imageWrp.current \n          && this.state.imageWrp.current.clientWidth != this.state.widthMax) {\n          // console.log(this.state.widthMax);\n          this.setState({widthMax: this.state.imageWrp.current.clientWidth});\n        }\n        if(this.state.img)\n          this.fitImage();\n      }, 500);\n      this.setState({interval});\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.interval);\n  }\n\n  state = {\n    interval: undefined,\n    imageWrp: React.createRef(),\n    img: undefined,\n    widthMax: 0,\n    heightMax: 400,\n    width: 0,\n    height: 0,\n    withPicture: !!this.props.post.picture,\n    isLoadPicture: false, \n\n    like_fetching: false,\n    isFullSize: false,\n    showWhoLikedModal: false,\n  }\n\n  fitImage (e) {\n    let width, height;\n    width = this.state.imageWrp.current.clientWidth;\n    // width = e.currentTarget.parentElement.clientWidth;\n    height = width * this.state.img.height/ this.state.img.width;\n\n    this.setState({width, height });\n  };\n\n  async onLikes (e) {\n    let options = {\n      id: this.props.auth.id,\n      user_id: this.props.profile.id,\n      token: this.props.auth.token,\n      post_id: this.props.post.id,\n    };\n\n    this.setState({ like_fetching: true });\n    await this.props.likedPost(options);\n    this.setState({ like_fetching: false});\n\n  };\n\n  async onDelete(e) {\n    let options = {\n      id: this.props.auth.id,\n      token: this.props.auth.token,\n      post_id: this.props.post.id,\n    };\n\n    await this.props.deletePost(options);\n  }\n\n  isLiked () {\n    return this.props.post.likes.includes(this.props.auth.id)? heart_fool: heart;\n  }\n\n  fullSizeToggle () {\n    this.setState({isFullSize: !this.state.isFullSize})\n  }\n\n  showWhoLikedModalToggle () {\n    this.setState({showWhoLikedModal: !this.state.showWhoLikedModal});\n  }\n\n  render () {\n    window.localState = this.state;\n\n    let users_ho_liked = this.props.post.likes.map(id => {\n      return <div className={styles.user_ho_liked}></div>\n    });\n\n    return (\n      <div className={styles.wrapper}>\n        {\n          this.props.auth.id === this.props.profile.id \n            && <a href='' onClick={(e) => { e.preventDefault() } }>\n        <div className={styles.criss_cross} >\n          <CloseButton close={this.onDelete.bind(this)} />\n        </div>\n      </a>\n        }\n        <div className={styles.date}>\n          {getFormatedDate(this.props.post.date)}\n        </div>\n        <div className={styles.post}>\n          <div ref={this.state.imageWrp} className={styles.post_picture_wrp}\n            style={ {'max-height': this.state.heightMax} }>\n            <div className={styles['full-size']}>\n            <FullSizeToggle \n              isFullSize={this.state.isFullSize}\n              fullSizeToggle={this.fullSizeToggle.bind(this)}/>\n            </div>\n            <img src={this.props.post.picture} className={styles.post_picture}\n              onLoad={(e) => {\n                let img = new Image();\n                img.src = e.currentTarget.currentSrc;\n                this.setState({img, isLoadPicture: true});\n                //setTimeout(() => this.fitImage(e));\n              } } \n              style={{\n                width: '100%', height: this.state.isLoadPicture? 0:200,\n              }}\n            />\n            <div style={ {\n              'background-image': `url(\"${this.props.post.picture}\")`,\n              'background-repeat': 'no-repeat',\n              'background-size': 'contain',\n              'background-position': 'center',\n              position: 'relative',\n              width: this.state.width,\n              height: this.state.height,\n              }}>\n          </div>\n              { !this.state.isLoadPicture\n                  && <div className={styles.fetching}>\n              <FetchingToggle />\n            </div>\n            }\n          </div>\n\n          <div className={styles.text}>\n            {this.props.post.text}\n          </div>\n\n          <div className={styles.likes} >\n            <a href='' onClick={(e) => { e.preventDefault() }} >\n              <div className={styles.count}>\n                <div className={styles.text} \n                  onClick={this.showWhoLikedModalToggle.bind(this)}>\n                  {this.props.post.likes.length}\n                </div>\n                <div className={styles.user_ho_liked_wrp} \n                  style={{'max-width': this.state.user_count_edit_mode && '120px' || '0px'}} >\n                  {users_ho_liked.splice(0, 3)}\n                  ...\n                </div>\n              </div>\n            </a>\n            <a href='' onClick={(e) => { e.preventDefault() }} >\n              <div className={styles.heart} onClick={this.onLikes.bind(this)}> \n                {\n                  !this.state.like_fetching \n                    && <img src={this.isLiked()} />\n              || <FetchingToggle width={22} height={22}/>\n              }\n              </div>\n            </a>\n          </div>\n        </div>\n        {\n          this.state.isFullSize\n            && <FullSizeImage \n          fullSizeToggle={this.fullSizeToggle.bind(this)}\n        posts={this.props.posts}\n        picture={this.props.post.picture}\n        width={this.state.width}\n        height={this.state.height}\n        isFullSize={this.state.isFullSize}\n        />\n        }\n      {\n        this.state.showWhoLikedModal \n          && <Modal \n            changeVisibleModal={this.showWhoLikedModalToggle.bind(this)}\n            scrollbar={this.props.scrollbar}\n            likes={this.props.post.likes}\n            post_id={this.props.post.id}\n            user_id={this.props.profile.id}\n            Component={WhoLikedModal} />\n      }\n      </div>\n    );\n  }\n};\n\nclass WhoLikedModal extends React.Component {\n  componentDidMount() {\n    this.setState({isFetching: true});\n    let options = {\n      user_id: this.props.user_id,\n      post_id: this.props.post_id,\n    };\n    profileApi.getLikersPost(options)\n      .then(data => {\n        if(data.result_code == 0){\n          // console.log('res' + data.users);\n          this.setState({likers: data.users});\n        }else{\n        }\n        this.setState({isFetching: false});\n      });\n  }\n\n  state = {\n    likers: [],\n    isFetching: false,\n  }\n\n  render () {\n    let users = this.state.likers.map(user => {\n      return <UserItem user={user} \n        changeVisibleModal={() => {\n          this.props.changeVisibleModal();\n          this.props.scrollbar.current.scrollTop = 0;\n        } }\n      />\n    });\n\n    return <div className={styles['likers-wrp']}>\n      <div className={styles.scrollbar} >\n        {\n          this.state.isFetching\n            && <div className={styles.fetching}>\n        <FetchingToggle />\n      </div>\n      ||( users.length\n      && users\n      || <ListIsEmpty />)\n      }\n    </div>\n      </div>\n  }\n}\n\nexport default connect(() => {}, {likedPost, deletePost})(Post);\n\n"]},"metadata":{},"sourceType":"module"}