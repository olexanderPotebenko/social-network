{"ast":null,"code":"var _jsxFileName = \"/root/Documents/projects/social-network/src/components/commons/Anchor/Anchor.jsx\";\nimport React from 'react';\nimport styles from './Anchor.module.css';\nimport arrow from \"../../../assets/images/arrow.svg\";\nimport { Transition } from 'react-transition-group';\nconst svg = /*#__PURE__*/React.createElement(\"svg\", {\n  fill: \"none\",\n  class: \"rubicons chevron-up\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"36\",\n  height: \"36\",\n  viewBox: \"0 0 24 24\",\n  stroke: \"currentColor\",\n  \"stroke-width\": \"1.5\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18 15l-6-6-6 6\",\n  \"stroke-linecap\": \"round\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }\n}));\n\nclass Anchor extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.addScollListener = () => {\n      this.props.scrollbar.current && this.props.scrollbar.current.addEventListener('scroll', e => {\n        let scrollTop = e.target.scrollTop;\n        let clientHeight = e.target.clientHeight;\n        let scrollHeight = e.target.scrollHeight;\n        this.setState({\n          scrollTop,\n          clientHeight,\n          scrollHeight\n        });\n\n        if (this.state.direction === 'up') {\n          if (scrollTop > clientHeight / 4) {\n            this.setState({\n              visible: true\n            });\n          } else {\n            this.setState({\n              visible: false\n            });\n          }\n        } else {\n          if (scrollTop < scrollHeight - clientHeight * 2) {\n            this.setState({\n              visible: true\n            });\n          } else {\n            this.setState({\n              visible: false\n            });\n          }\n        }\n      });\n    };\n\n    this.state = {\n      visible: false,\n      direction: undefined,\n      isMoveUp: false\n    };\n\n    this.move = e => {\n      //console.log(this.props.scrollbar.current.scrollTop);\n      e.preventDefault();\n      let current = this.props.scrollbar.current;\n      let moveUpSpeed = 40;\n      if (this.state.direction === 'down') moveUpSpeed *= -1;\n      this.setState({\n        isMoveUp: true,\n        moveUpSpeed\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isMoveUp: false,\n      visible: false,\n      direction: this.props.direction || 'up'\n    });\n    setTimeout(() => this.addScollListener(), 200);\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    let bool = this.props.scrollbar.current != nextProps.scrollbar.current;\n    this.props.scrollbar && nextProps.scrollbar && bool && this.addScollListener();\n\n    if (nextState.isMoveUp) {\n      setTimeout(() => {\n        this.props.scrollbar.current.scrollTop -= this.state.moveUpSpeed;\n\n        if (this.state.direction === 'up') {\n          if (this.props.scrollbar.current.scrollTop < 20) {\n            this.props.scrollbar.current.scrollTop = 0;\n            this.setState({\n              isMoveUp: false\n            });\n          } else if (this.state.scrollTop > this.state.clientHeight) {\n            this.props.scrollbar.current.scrollTop = this.state.clientHeight;\n          }\n        } else {\n          if (this.props.scrollbar.current.scrollTop > this.props.scrollbar.current.scrollHeight - this.props.scrollbar.current.clientHeight - 100) {\n            this.props.scrollbar.current.scrollTop = this.props.scrollbar.current.scrollHeight;\n            this.setState({\n              isMoveUp: false\n            });\n          } else if (this.props.scrollbar.current.scrollTop < this.props.scrollbar.current.scrollHeight - this.props.scrollbar.current.clientHeight * 2) {\n            this.props.scrollbar.current.scrollTop = this.props.scrollbar.current.scrollHeight - this.props.scrollbar.current.clientHeight * 2;\n          }\n        }\n      }, 50);\n    }\n  }\n\n  render() {\n    const duration = 150;\n    const defaultStyle = {\n      position: 'absolute',\n      transition: `bottom ${duration}ms linear, opacity ${duration}ms linear`,\n      bottom: 0,\n      transform: 'translateY(100%)'\n    };\n    const transitionStyles = {\n      entered: {\n        opacity: 1,\n        bottom: '100%'\n      },\n      exited: {\n        opacity: 0,\n        bottom: '0%'\n      }\n    };\n    setTimeout(() => console.log(this.state.direction), 100);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.wrp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Transition, {\n      in: this.state.visible,\n      timeout: duration,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, state => /*#__PURE__*/React.createElement(\"button\", {\n      className: styles.container,\n      onClick: this.move,\n      style: { ...defaultStyle,\n        ...transitionStyles[state]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: this.state.direction === 'up' ? {} : {\n        transform: 'rotate(180deg)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, svg))));\n  }\n\n}\n\nexport default Anchor;","map":{"version":3,"sources":["/root/Documents/projects/social-network/src/components/commons/Anchor/Anchor.jsx"],"names":["React","styles","Transition","svg","Anchor","Component","addScollListener","props","scrollbar","current","addEventListener","e","scrollTop","target","clientHeight","scrollHeight","setState","state","direction","visible","undefined","isMoveUp","move","preventDefault","moveUpSpeed","componentDidMount","setTimeout","componentWillUpdate","nextProps","nextState","bool","render","duration","defaultStyle","position","transition","bottom","transform","transitionStyles","entered","opacity","exited","console","log","wrp","container"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from './Anchor.module.css';\nimport arrow from '../../../assets/images/arrow.svg';\nimport {Transition} from 'react-transition-group';\n\nconst svg = <svg fill=\"none\" class=\"rubicons chevron-up\" xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"1.5\">\n  <path d=\"M18 15l-6-6-6 6\" stroke-linecap=\"round\"></path>\n</svg>;\n\nclass Anchor extends React.Component {\n\n  componentDidMount() {\n\n    this.setState({ isMoveUp: false, visible: false, direction: this.props.direction || 'up' });\n    setTimeout(() => this.addScollListener(), 200);\n  }\n\n  addScollListener = () => {\n    this.props.scrollbar.current\n      && this.props.scrollbar.current.addEventListener('scroll', e => {\n        let scrollTop = e.target.scrollTop;\n        let clientHeight = e.target.clientHeight;\n        let scrollHeight = e.target.scrollHeight;\n        this.setState({ scrollTop, clientHeight, scrollHeight });\n        if(this.state.direction === 'up') {\n          if(scrollTop > clientHeight/4){\n            this.setState({visible: true})\n          }else{\n            this.setState({visible: false})\n          }\n        } else {\n          if(scrollTop < scrollHeight - clientHeight*2){\n            this.setState({visible: true})\n          }else{\n            this.setState({visible: false})\n          }\n        }\n      });\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n\n    let bool = this.props.scrollbar.current != nextProps.scrollbar.current;\n    this.props.scrollbar && nextProps.scrollbar\n      && bool\n      && this.addScollListener();\n\n    if(nextState.isMoveUp){\n      setTimeout(() => {\n        this.props.scrollbar.current.scrollTop -= this.state.moveUpSpeed;\n        if(this.state.direction === 'up') {\n          if(this.props.scrollbar.current.scrollTop < 20){\n            this.props.scrollbar.current.scrollTop = 0;\n            this.setState({ isMoveUp: false });\n          } else if(this.state.scrollTop > this.state.clientHeight){\n            this.props.scrollbar.current.scrollTop = this.state.clientHeight;\n          }\n        } else {\n          if(this.props.scrollbar.current.scrollTop > \n            this.props.scrollbar.current.scrollHeight - this.props.scrollbar.current.clientHeight - 100) {\n            this.props.scrollbar.current.scrollTop = this.props.scrollbar.current.scrollHeight;\n            this.setState({ isMoveUp: false });\n          } else if(this.props.scrollbar.current.scrollTop < \n            this.props.scrollbar.current.scrollHeight - this.props.scrollbar.current.clientHeight * 2) {\n            this.props.scrollbar.current.scrollTop = \n              this.props.scrollbar.current.scrollHeight - this.props.scrollbar.current.clientHeight * 2;\n          }\n        }\n\n      }, 50);\n    }\n  }\n\n  state = { \n    visible: false,\n    direction: undefined,\n    isMoveUp: false,\n  }\n\n  move = (e) => {\n    //console.log(this.props.scrollbar.current.scrollTop);\n    e.preventDefault();\n    let current = this.props.scrollbar.current;\n    let moveUpSpeed = 40; \n    if(this.state.direction === 'down')\n      moveUpSpeed *= -1;\n    this.setState({isMoveUp: true, moveUpSpeed});\n  }\n\n  render () {\n\n    const duration = 150;\n\n    const defaultStyle = {\n      position: 'absolute',\n      transition: `bottom ${duration}ms linear, opacity ${duration}ms linear`,\n      bottom: 0,\n      transform: 'translateY(100%)',\n    }\n\n    const transitionStyles = {\n      entered: { \n        opacity: 1, \n        bottom: '100%',\n      }, \n      exited: { \n        opacity: 0,\n        bottom: '0%',\n      },\n    };\n\n    setTimeout(() => console.log(this.state.direction), 100);\n    return <div className={styles.wrp}>\n      <Transition in={this.state.visible} timeout={duration}>\n        {state => (\n            <button \n          className={styles.container}\n        onClick={this.move} \n        style={{\n          ...defaultStyle,\n          ...transitionStyles[state]\n        }}>\n        <div style={ this.state.direction === 'up'? {}: {transform: 'rotate(180deg)'} }>\n          {svg}\n        </div>\n      </button>\n        )}\n    </Transition>\n      </div>\n  }\n}\n\nexport default Anchor;\n"]},"metadata":{},"sourceType":"module"}