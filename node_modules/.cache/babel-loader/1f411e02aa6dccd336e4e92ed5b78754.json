{"ast":null,"code":"const MONTHS2 = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst MONTHS1 = [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \"july\", \"august\", \"september\", \"october\", \"november\", \"december\"];\nconst MONTHS = [\"jan.\", \"feb.\", \"mar.\", \"apr.\", \"may\", \"june\", \"july\", \"aug.\", \"sep.\", \"oct.\", \"nov.\", \"dec.\"];\nexport function getFormatedDate(date) {\n  date = new Date(date);\n\n  let getTwoSymb = str => {\n    str += \"\";\n    str = str.length < 2 ? `0${str}` : str;\n    return str;\n  };\n\n  let hrs_mnt_sec = [getTwoSymb(date.getHours()), getTwoSymb(date.getMinutes()), getTwoSymb(date.getSeconds())].join(\":\");\n  let now = new Date();\n  let diff = now - date;\n  let str = '';\n  let pm_or_am = date % (1000 * 3600 * 24) > 1000 * 3600 * 12 ? ' am' : ' pm';\n\n  if (diff > 3600 * 1000 * 24 * 364) {\n    str = 'over a year ago...';\n  } else if (diff > 3600 * 24 * 1000) {\n    str = `${MONTHS2[date.getMonth()]} ${date.getDate()}`;\n  }\n\n  ;\n  return str || hrs_mnt_sec + pm_or_am;\n}\nexport function getHoursMinutes(date) {\n  date = new Date(date);\n  let minutes = date.getMinutes();\n  minutes = minutes > 9 ? minutes : '0' + minutes;\n  let hours = date.getHours();\n  hours = hours > 9 ? hours : '0' + hours;\n  return hours + ':' + minutes;\n}\nexport function getDateMonth(date) {\n  date = new Date(date);\n  let day = date.getDate();\n  let month = MONTHS2[date.getMonth()];\n  return month + ' ' + day;\n}\nexport function getHoursMinutesSeconds(date) {\n  date = new Date(date);\n  let seconds = date.getSeconds();\n  seconds = seconds > 9 ? seconds : '0' + seconds;\n  return getHoursMinutes(date) + ':' + seconds;\n}\nexport function fitImage(e) {\n  let img = new Image();\n  img.src = e.target.currentSrc;\n  let width, height;\n\n  if (true) {\n    width = e.currentTarget.parentElement.clientWidth;\n    height = width * img.height / img.width;\n  } else if (img.width < this.state.widthMin) {\n    width = this.state.widthMin;\n    height = this.state.widthMin * img.height / img.width;\n  } else if (img.width < this.state.widthMax) {\n    width = img.width;\n    height = img.height;\n  } else {\n    width = this.state.widthMax;\n    height = this.state.widthMax * img.height / img.width;\n  }\n\n  ;\n  this.setState({\n    width,\n    height\n  });\n}\n;","map":{"version":3,"sources":["/root/Documents/projects/social-network/src/utils/functions.js"],"names":["MONTHS2","MONTHS1","MONTHS","getFormatedDate","date","Date","getTwoSymb","str","length","hrs_mnt_sec","getHours","getMinutes","getSeconds","join","now","diff","pm_or_am","getMonth","getDate","getHoursMinutes","minutes","hours","getDateMonth","day","month","getHoursMinutesSeconds","seconds","fitImage","e","img","Image","src","target","currentSrc","width","height","currentTarget","parentElement","clientWidth","state","widthMin","widthMax","setState"],"mappings":"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","sourcesContent":["const MONTHS2 = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst MONTHS1 = [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \"july\", \"august\", \"september\", \"october\", \"november\", \"december\"];\nconst MONTHS = [\"jan.\", \"feb.\", \"mar.\", \"apr.\", \"may\", \"june\", \"july\", \"aug.\", \"sep.\", \"oct.\", \"nov.\", \"dec.\"];\n\nexport function getFormatedDate(date){\n\n    date = new Date(date);\n      let getTwoSymb = (str) => {\n        str += \"\";\n        str = str.length < 2 ? `0${str}`: str;\n        return str;\n      };\n\n      let hrs_mnt_sec = [\n        getTwoSymb( date.getHours() ),\n        getTwoSymb( date.getMinutes() ),\n        getTwoSymb( date.getSeconds() )\n      ].join(\":\");\n\n    let now = new Date();\n    let diff = now - date;\n    let str = '';\n\n    let pm_or_am = date % (1000*3600*24) > 1000*3600*12 ? ' am': ' pm';\n\n    if(diff > (3600*1000*24*364)){\n        str = 'over a year ago...';\n    }else if(diff > 3600*24*1000){\n        str = `${MONTHS2[date.getMonth()]} ${date.getDate()}`\n    };\n\n    \n    return str || hrs_mnt_sec + pm_or_am;\n\n}\n\nexport function getHoursMinutes (date) {\n  date = new Date(date);\n  let minutes = date.getMinutes();\n  minutes = minutes > 9? minutes: '0' + minutes;\n  let hours = date.getHours();\n  hours = hours > 9? hours: '0' + hours;\n  return hours + ':' + minutes;\n}\n\nexport function getDateMonth (date) {\n   date = new Date(date);\n  let day = date.getDate();\n  let month = MONTHS2[date.getMonth()];\n\n  return month + ' ' + day;\n}\n\nexport function getHoursMinutesSeconds (date) {\n  date = new Date(date);\n  let seconds = date.getSeconds();\n  seconds = seconds > 9? seconds: '0' + seconds;\n  return getHoursMinutes(date) + ':' + seconds;\n}\n\n\n\nexport function fitImage (e) {\n        let img = new Image();\n        img.src = e.target.currentSrc;\n        let width, height;\n        if(true){\n            width = e.currentTarget.parentElement.clientWidth;\n            height = width * img.height/ img.width;\n        }else if(img.width < this.state.widthMin){\n            width = this.state.widthMin;\n            height = this.state.widthMin * img.height / img.width;\n        }else if(img.width < this.state.widthMax){\n            width = img.width;\n            height = img.height;\n        }else{\n            \n            width = this.state.widthMax;\n            height = this.state.widthMax * img.height / img.width;\n        };\n\n        this.setState({ width, height });\n\n    };\n\n\n"]},"metadata":{},"sourceType":"module"}