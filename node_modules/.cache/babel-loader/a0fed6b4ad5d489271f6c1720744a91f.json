{"ast":null,"code":"var _jsxFileName = \"/root/Documents/projects/social-network/src/components/Messages/Dialog/MessagesHistory/MessagesHistory.jsx\";\nimport React from 'react';\nimport styles from './MessagesHistory.module.css';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport WithAuthData from '../../../../hocs/WithAuthData.jsx';\nimport { getHoursMinutes, getDateMonth } from '../../../../utils/functions.js';\nimport { readMessages } from '../../../../reducers/messagesReducer.js';\nimport Anchor from '../../../commons/Anchor/Anchor.jsx';\n\nclass MessagesHistory extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isRendered: false\n    };\n\n    this.scrollDown = scrollbar => {\n      scrollbar.current.scrollTop = scrollbar.current.scrollHeight;\n    };\n  }\n\n  render() {\n    let getDateComponent = str => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: styles['time-date'],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 51\n        }\n      }, str));\n    };\n\n    let history = 'message list is empty..';\n\n    if (this.props.messages) {\n      let messages = this.props.messages.map((mess, index, arr) => {\n        let isFinal = index === arr.length - 1 || mess.userId != arr[index + 1].userId || new Date(mess.date).getDate() != new Date(arr[index + 1].date).getDate();\n        let time = getHoursMinutes(mess.date);\n        let elem;\n\n        if (mess.userId === this.props.auth.id) {\n          elem = /*#__PURE__*/React.createElement(\"div\", {\n            className: styles['message-wrp'],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 18\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: styles.message + ' ' + styles['message-right'] + ' ' + (isFinal && styles['message-right-with-arrow']),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 13\n            }\n          }, mess.text, /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: styles.read,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            class: \"rubicons check\",\n            width: \"19\",\n            height: \"19\",\n            viewBox: \"0 0 24 24\",\n            stroke: mess.read && \"currentColor\" || \"#335\",\n            \"stroke-width\": \"2.5\",\n            fill: \"none\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"path\", {\n            d: \"M4 13l5 5L20 6\",\n            \"stroke-linecap\": \"round\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: styles.time,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }\n          }, time))));\n        } else {\n          elem = /*#__PURE__*/React.createElement(\"div\", {\n            className: styles['message-wrp'],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 18\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: styles.message + ' ' + styles['message-left'] + ' ' + (isFinal && styles['message-left-with-arrow']),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }\n          }, mess.text, /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: styles.time,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }\n          }, time))));\n        }\n\n        return elem;\n      });\n      history = [];\n      let now = new Date().getDate();\n      this.props.messages.forEach((mess, index, arr) => {\n        let date = new Date(mess.date).getDate();\n\n        if (index === 0 && now != date) {\n          history.push(getDateComponent(getDateMonth(mess.date)));\n          history.push(messages[index]);\n        } else if (arr.length === 1 || index === 0 || date != new Date(arr[index - 1].date).getDate()) {\n          if (date == now) history.push(getDateComponent('Today'));else history.push(getDateComponent(getDateMonth(mess.date)));\n          history.push(messages[index]);\n        } else {\n          history.push(messages[index]);\n        }\n      });\n      history.push( /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: '40px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 20\n        }\n      }));\n    }\n\n    ;\n    let scrollbar = React.createRef();\n    setTimeout(() => {\n      if (scrollbar.current && !this.state.isRendered) this.scrollDown(scrollbar);\n    }, 50); //let {id, token, dialog_id, messages} = options;\n\n    if (this.props.messages) {\n      let unreadMessages = this.props.messages.filter(mess => mess.userId !== this.props.auth.id && !mess.read);\n      console.log('UNREAD MESS');\n      console.log(unreadMessages);\n\n      if (unreadMessages.length) {\n        let options = {\n          id: this.props.auth.id,\n          token: this.props.auth.token,\n          dialog_id: this.props.dialog.dialog_id,\n          messages: unreadMessages\n        }; //alert(options.messages.length);\n\n        this.props.readMessages(options);\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.wrp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        bottom: 0,\n        right: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Anchor, {\n      scrollbar: scrollbar,\n      direction: 'down',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      ref: scrollbar,\n      className: styles.scrollbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, history));\n  }\n\n}\n\n;\n\nconst mapsStateToProps = state => {\n  return {\n    messages: state.messagesPage.dialog.messages,\n    dialog: state.messagesPage.dialog\n  };\n};\n\nconst mapsDispatchToProps = {\n  readMessages\n};\nexport default compose(WithAuthData, connect(mapsStateToProps, mapsDispatchToProps))(MessagesHistory);","map":{"version":3,"sources":["/root/Documents/projects/social-network/src/components/Messages/Dialog/MessagesHistory/MessagesHistory.jsx"],"names":["React","styles","connect","compose","WithAuthData","getHoursMinutes","getDateMonth","readMessages","Anchor","MessagesHistory","Component","state","isRendered","scrollDown","scrollbar","current","scrollTop","scrollHeight","render","getDateComponent","str","history","props","messages","map","mess","index","arr","isFinal","length","userId","Date","date","getDate","time","elem","auth","id","message","text","read","now","forEach","push","height","createRef","setTimeout","unreadMessages","filter","console","log","options","token","dialog_id","dialog","wrp","position","bottom","right","mapsStateToProps","messagesPage","mapsDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from './MessagesHistory.module.css';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport WithAuthData from '../../../../hocs/WithAuthData.jsx';\nimport {getHoursMinutes, getDateMonth} from '../../../../utils/functions.js';\nimport {readMessages} from '../../../../reducers/messagesReducer.js';\nimport Anchor from '../../../commons/Anchor/Anchor.jsx';\n\nclass MessagesHistory extends React.Component {\n\n  state = {\n    isRendered: false,\n  }\n\n  scrollDown = (scrollbar) => {\n    scrollbar.current.scrollTop = scrollbar.current.scrollHeight;\n  }\n\n  render() {\n\n    let getDateComponent = (str) => {\n      return <div className={styles['time-date']}><div>{str}</div></div>\n    };\n\n    let history = 'message list is empty..';\n    if(this.props.messages) {\n      let messages = this.props.messages.map((mess, index, arr) => {\n        let isFinal = index === arr.length -1 \n          || mess.userId != arr[index + 1].userId\n          || new Date(mess.date).getDate() != new Date(arr[index + 1].date).getDate();\n        let time = getHoursMinutes(mess.date);\n        let elem;\n        if(mess.userId === this.props.auth.id) {\n          elem = <div className={styles['message-wrp']}>\n            <div className={styles.message + ' ' + styles['message-right'] \n                + ' ' + (isFinal && styles['message-right-with-arrow'])}>\n              {mess.text}\n              <div>\n                <div className={styles.read}>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" \n                    class=\"rubicons check\" \n                    width=\"19\" height=\"19\" viewBox=\"0 0 24 24\" \n                    stroke={mess.read && \"currentColor\" || \"#335\"} stroke-width=\"2.5\" fill=\"none\">\n                    <path d=\"M4 13l5 5L20 6\" stroke-linecap=\"round\"></path>\n                  </svg>\n                </div>\n                <div className={styles.time}>\n                  {time}\n                </div>\n              </div>\n            </div>\n          </div>\n        } else {\n          elem = <div className={styles['message-wrp']}>\n            <div className={styles.message + ' ' + styles['message-left']\n                + ' ' + (isFinal && styles['message-left-with-arrow'])}>\n              {mess.text}\n              <div>\n                <div className={styles.time}>\n                  {time}\n                </div>\n              </div>\n            </div>\n          </div>\n        }\n        return elem;\n      });\n\n      history = []; \n      let now = new Date().getDate();\n      this.props.messages.forEach((mess, index, arr) => {\n        let date = new Date(mess.date).getDate();\n\n        if (index ===  0 && now != date) {\n          history.push(getDateComponent(getDateMonth(mess.date)));\n          history.push(messages[index]);\n        } else if (arr.length === 1 || index === 0 || date != new Date(arr[index - 1].date).getDate()){\n          if(date == now ) history.push(getDateComponent('Today'));\n          else history.push(getDateComponent(getDateMonth(mess.date))); \n          history.push(messages[index]);\n        } else {\n          history.push(messages[index]);\n        }\n      })\n\n      history.push(<div style={ {\n        height: '40px',\n        } } ></div>);\n    };\n\n    let scrollbar = React.createRef();\n    setTimeout(() => {\n      if(scrollbar.current && !this.state.isRendered) this.scrollDown(scrollbar);\n    }, 50);\n\n    //let {id, token, dialog_id, messages} = options;\n    if(this.props.messages) {\n      let unreadMessages = this.props.messages\n        .filter(mess => mess.userId !== this.props.auth.id && !mess.read);\n\n      console.log('UNREAD MESS');\n      console.log(unreadMessages);\n      if(unreadMessages.length){\n        let options = {\n          id: this.props.auth.id,\n          token: this.props.auth.token,\n          dialog_id: this.props.dialog.dialog_id,\n          messages: unreadMessages,\n        }\n        //alert(options.messages.length);\n        this.props.readMessages(options);\n      }\n    }\n\n    return <div className={styles.wrp}>\n      <div style={ {position: 'absolute', bottom: 0, right: 30} }>\n        <Anchor scrollbar={scrollbar} direction={'down'} />\n      </div>\n      <div ref={scrollbar} className={styles.scrollbar}>\n        {history}\n      </div>\n    </div>\n  }\n};\n\nconst mapsStateToProps = state => {\n  return {\n    messages: state.messagesPage.dialog.messages,\n    dialog: state.messagesPage.dialog,\n  };\n};\n\nconst mapsDispatchToProps = {\n  readMessages,\n};\n\nexport default compose (\n  WithAuthData,\n  connect(mapsStateToProps, mapsDispatchToProps),\n)(MessagesHistory);\n"]},"metadata":{},"sourceType":"module"}