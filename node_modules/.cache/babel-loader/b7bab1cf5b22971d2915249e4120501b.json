{"ast":null,"code":"import { authApi } from '../api/api.js';\nimport { stopSubmit } from 'redux-form';\nconst SET_AUTH_DATA = 'SET-AUTH-DATA';\nconst SET_SERVER_ERROR = 'SET-SERVER-ERROR';\nconst SET_IS_FETCHING = 'SET-IS-FETCHING';\nconst SET_SUBSCRIBED = 'SET-SUBSCRIBED';\nconst SET_SUBSCRIBERS = 'SET-SUBSCRIBERS';\nconst SET_WS = 'SET_WS';\nconst initial_state = {\n  id: null,\n  email: null,\n  name: null,\n  subscribers: null,\n  subscribed_to: null,\n  token: null,\n  photo: null,\n  is_auth: false,\n  is_authed: false,\n  is_fetching: false,\n  server_error: undefined,\n  profile: null,\n  //\n  ws: {\n    readyState: 0\n  }\n};\n\nconst authReducer = (state = initial_state, action) => {\n  switch (action.type) {\n    case SET_AUTH_DATA:\n      return setAuthData(state, action.data);\n\n    case SET_SERVER_ERROR:\n      return setServerError(state, action.server_error);\n\n    case SET_IS_FETCHING:\n      return { ...state,\n        is_fetching: action.is_fetching\n      };\n\n    case SET_SUBSCRIBED:\n      return { ...state,\n        subscribed_to: (() => {\n          if (state.subscribed_to.map(user => user.id).includes(action.user.id)) {\n            return state.subscribed_to.filter(user => user.id != action.user.id);\n          } else {\n            state.subscribed_to.push(action.user);\n            return state.subscribed_to;\n          }\n        })()\n      };\n\n    case SET_WS:\n      return { ...state,\n        ws: action.ws\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nconst setAuthData = (state, data) => {\n  return { ...state,\n    is_auth: true,\n    is_authed: true,\n    ...data,\n    is_fetching: false\n  };\n};\n\nconst setServerError = (state, server_error) => {\n  return { ...state,\n    server_error\n  };\n};\n\nexport const login = data => dispatch => {\n  dispatch(setIsFetching(true));\n  authApi.signIn(data).then(res => {\n    if (res.result_code === 0) {\n      debugger;\n      dispatch(setAuthDataActionCreator(res.data));\n      dispatch(stopSubmit('signin', {\n        _error: res.message\n      }));\n    } else {\n      dispatch(setServerErrorActionCreator(res.message));\n    }\n\n    ;\n    dispatch(setIsFetching(false));\n  });\n};\nexport const signUp = data => dispatch => {\n  dispatch(setIsFetching(true));\n  authApi.signUp(data).then(res => {\n    if (res.result_code === 0) {\n      console.log('User successfuly registered!');\n      dispatch(setServerErrorActionCreator(res.message));\n      dispatch(stopSubmit('signup', {\n        _error: res.message\n      }));\n    } else {\n      dispatch(setServerErrorActionCreator(res.message));\n    }\n\n    ;\n    dispatch(setIsFetching(false));\n  });\n};\nexport const setIsFetching = is_fetching => ({\n  type: SET_IS_FETCHING,\n  is_fetching\n});\nexport const setAuthDataActionCreator = data => ({\n  type: SET_AUTH_DATA,\n  data\n});\nexport const setServerErrorActionCreator = server_error => ({\n  type: SET_SERVER_ERROR,\n  server_error\n});\nexport const setSubscribed = user => ({\n  type: SET_SUBSCRIBED,\n  user\n});\nexport const setWsActionCreator = ws => ({\n  type: SET_WS,\n  ws\n});\nexport default authReducer;","map":{"version":3,"sources":["/home/i/Documents/projects/social-network/src/reducers/authReducer.js"],"names":["authApi","stopSubmit","SET_AUTH_DATA","SET_SERVER_ERROR","SET_IS_FETCHING","SET_SUBSCRIBED","SET_SUBSCRIBERS","SET_WS","initial_state","id","email","name","subscribers","subscribed_to","token","photo","is_auth","is_authed","is_fetching","server_error","undefined","profile","ws","readyState","authReducer","state","action","type","setAuthData","data","setServerError","map","user","includes","filter","push","login","dispatch","setIsFetching","signIn","then","res","result_code","setAuthDataActionCreator","_error","message","setServerErrorActionCreator","signUp","console","log","setSubscribed","setWsActionCreator"],"mappings":"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","sourcesContent":["import {authApi} from '../api/api.js';\nimport {stopSubmit} from 'redux-form';\n\nconst SET_AUTH_DATA = 'SET-AUTH-DATA';\nconst SET_SERVER_ERROR = 'SET-SERVER-ERROR';\nconst SET_IS_FETCHING = 'SET-IS-FETCHING';\nconst SET_SUBSCRIBED = 'SET-SUBSCRIBED';\nconst SET_SUBSCRIBERS = 'SET-SUBSCRIBERS';\nconst SET_WS = 'SET_WS';\n\nconst initial_state = {\n    id: null,\n    email: null,\n    name: null,\n    subscribers: null,\n    subscribed_to: null,\n    token: null,\n    photo: null,\n    is_auth: false,\n    is_authed: false,\n    is_fetching: false,\n    server_error: undefined,\n    profile: null,\n    //\n    ws: {\n        readyState: 0,\n    },\n};\n\nconst authReducer = (state = initial_state, action) => {\n    switch (action.type) {\n        case SET_AUTH_DATA: \n            return setAuthData(state, action.data);\n        case SET_SERVER_ERROR: \n            return setServerError(state, action.server_error);\n        case SET_IS_FETCHING:\n            return {\n                ...state,\n                is_fetching: action.is_fetching,\n            };\n        case SET_SUBSCRIBED:\n            return {\n                ...state,\n                subscribed_to: (() => {\n                    if(state.subscribed_to.map(user => user.id).includes(action.user.id)){\n                        return state.subscribed_to.filter(user => user.id != action.user.id);\n                    }else{\n                        state.subscribed_to.push(action.user);\n                        return state.subscribed_to;\n                    }\n                })(),\n            };\n        case SET_WS:\n            return {\n                ...state,\n                ws: action.ws,\n            };\n        default:\n            return state;\n    };\n};\n\nconst setAuthData = (state, data) => {\n    return {\n        ...state,\n        is_auth: true,\n        is_authed: true,\n        ...data,\n        is_fetching: false,\n    };\n};\n\nconst setServerError = (state, server_error) => {\n    return {\n        ...state, \n        server_error\n    };\n};\n\nexport const login = (data) => (dispatch) => {\n\n    dispatch(setIsFetching(true));\n    authApi.signIn(data)\n        .then(res => {\n            if(res.result_code === 0) {\n              debugger;\n                dispatch(setAuthDataActionCreator(res.data));\n                dispatch(stopSubmit('signin', {_error: res.message}));\n            }else{\n                dispatch(setServerErrorActionCreator(res.message));\n            };\n            dispatch(setIsFetching(false));\n        });\n}\n\nexport const signUp = (data) => (dispatch) => {\n\n    dispatch(setIsFetching(true));\n    authApi.signUp(data)\n        .then(res => {\n            if(res.result_code === 0) {\n                console.log('User successfuly registered!');\n                dispatch(setServerErrorActionCreator(res.message));\n                dispatch(stopSubmit('signup', {_error: res.message}));\n            }else{\n                dispatch(setServerErrorActionCreator(res.message));\n            };\n            dispatch(setIsFetching(false));\n        });\n};\nexport const setIsFetching = is_fetching => ({type: SET_IS_FETCHING, is_fetching});\n\nexport const setAuthDataActionCreator = data => ({type: SET_AUTH_DATA, data});\n\nexport const setServerErrorActionCreator = server_error => ({type: SET_SERVER_ERROR, server_error});\n\nexport const setSubscribed = user => ({type: SET_SUBSCRIBED, user});\n\nexport const setWsActionCreator = ws => ({type: SET_WS, ws});\n\nexport default authReducer;\n"]},"metadata":{},"sourceType":"module"}