{"ast":null,"code":"import { authApi, followApi } from '../api/api.js';\nimport { stopSubmit } from 'redux-form';\nexport const SET_AUTH_DATA = 'SET-AUTH-DATA';\nexport const WS_FOLLOW = 'WS-FOLLOW';\nconst SET_SERVER_ERROR = 'SET-SERVER-ERROR';\nconst SET_IS_FETCHING = 'SET-IS-FETCHING';\nconst SET_SUBSCRIBED = 'SET-SUBSCRIBED';\nconst SET_SUBSCRIBERS = 'SET-SUBSCRIBERS';\nconst SET_WS = 'SET_WS';\nconst initial_state = {\n  id: null,\n  email: null,\n  name: null,\n  subscribers: null,\n  subscribed_to: null,\n  token: null,\n  photo: null,\n  is_auth: false,\n  is_authed: false,\n  is_fetching: false,\n  server_error: undefined,\n  profile: null,\n  //\n  ws: {\n    readyState: 0\n  }\n};\n\nconst authReducer = (state = initial_state, action) => {\n  switch (action.type) {\n    case SET_AUTH_DATA:\n      return setAuthData(state, action.data);\n\n    case SET_SERVER_ERROR:\n      return setServerError(state, action.server_error);\n\n    case SET_IS_FETCHING:\n      return { ...state,\n        is_fetching: action.is_fetching\n      };\n\n    case SET_SUBSCRIBED:\n      return { ...state,\n        subscribed_to: (() => {\n          if (state.subscribed_to.map(user => user.id).includes(action.user.id)) {\n            return state.subscribed_to.filter(user => user.id != action.user.id);\n          } else {\n            state.subscribed_to.push(action.user);\n            return state.subscribed_to;\n          }\n        })()\n      };\n\n    case SET_WS:\n      return { ...state,\n        ws: action.ws\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nconst setAuthData = (state, data) => {\n  return { ...state,\n    is_auth: true,\n    is_authed: true,\n    ...data,\n    is_fetching: false\n  };\n};\n\nconst setServerError = (state, server_error) => {\n  return { ...state,\n    server_error\n  };\n};\n\nexport const login = data => dispatch => {\n  dispatch(setIsFetching(true));\n  authApi.signIn(data).then(res => {\n    if (res.result_code === 0) {\n      dispatch(setAuthDataActionCreator(res.data));\n      dispatch(stopSubmit('signin', {\n        _error: res.message\n      }));\n    } else {\n      dispatch(setServerErrorActionCreator(res.message));\n    }\n\n    ;\n    dispatch(setIsFetching(false));\n  });\n};\nexport const signUp = data => dispatch => {\n  dispatch(setIsFetching(true));\n  authApi.signUp(data).then(res => {\n    if (res.result_code === 0) {\n      console.log('User successfuly registered!');\n      dispatch(setServerErrorActionCreator(res.message));\n      dispatch(stopSubmit('signup', {\n        _error: res.message\n      }));\n    } else {\n      dispatch(setServerErrorActionCreator(res.message));\n    }\n\n    ;\n    dispatch(setIsFetching(false));\n  });\n};\nexport const follow = (options, user, setIsFetching, setIsFollowed) => dispatch => {\n  followApi.follow(options).then(data => {\n    if (data.result_code === 0) {\n      dispatch(setSubscribed(user));\n      setIsFollowed(true);\n      dispatch({\n        type: WS_FOLLOW,\n        user_id: user.id\n      });\n    }\n\n    setIsFetching(false);\n  });\n};\nexport const unfollow = (options, user, setIsFetching, setIsFollowed) => dispatch => {\n  followApi.unfollow(options).then(data => {\n    if (data.result_code === 0) {\n      dispatch(setSubscribed(user));\n      setIsFetching(false);\n      setIsFollowed(false);\n    }\n\n    setIsFetching(false);\n  });\n}; //\n// export const onUnfollow = options => dispatch => {\n//   let options = {\n//     id: this.props.auth.id,\n//     user_id: this.props.user.id,\n//     token: this.props.auth.token,\n//   };\n//\n//   this.setState({isFetching: true});\n//   followApi.unfollow(options)\n//     .then(data => {\n//       if(data.result_code === 0){\n//\n//         this.props.setSubscribed(this.props.user);\n//         this.setState({followed: false})\n//         this.setState({isFetching: false})\n//       }else{\n//\n//         this.setState({isFetching: false})\n//       }\n//     });\n// };\n\nexport const setIsFetching = is_fetching => ({\n  type: SET_IS_FETCHING,\n  is_fetching\n});\nexport const setAuthDataActionCreator = data => ({\n  type: SET_AUTH_DATA,\n  data\n});\nexport const setServerErrorActionCreator = server_error => ({\n  type: SET_SERVER_ERROR,\n  server_error\n});\nexport const setSubscribed = user => ({\n  type: SET_SUBSCRIBED,\n  user\n});\nexport const setWsActionCreator = ws => ({\n  type: SET_WS,\n  ws\n});\nexport default authReducer;","map":{"version":3,"sources":["/root/Documents/projects/social-network/src/reducers/authReducer.js"],"names":["authApi","followApi","stopSubmit","SET_AUTH_DATA","WS_FOLLOW","SET_SERVER_ERROR","SET_IS_FETCHING","SET_SUBSCRIBED","SET_SUBSCRIBERS","SET_WS","initial_state","id","email","name","subscribers","subscribed_to","token","photo","is_auth","is_authed","is_fetching","server_error","undefined","profile","ws","readyState","authReducer","state","action","type","setAuthData","data","setServerError","map","user","includes","filter","push","login","dispatch","setIsFetching","signIn","then","res","result_code","setAuthDataActionCreator","_error","message","setServerErrorActionCreator","signUp","console","log","follow","options","setIsFollowed","setSubscribed","user_id","unfollow","setWsActionCreator"],"mappings":"AAAA,SAAQA,OAAR,EAAiBC,SAAjB,QAAiC,eAAjC;AACA,SAAQC,UAAR,QAAyB,YAAzB;AAEA,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,eAAe,GAAG,iBAAxB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AACA,MAAMC,eAAe,GAAG,iBAAxB;AACA,MAAMC,MAAM,GAAG,QAAf;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,EAAE,EAAE,IADgB;AAEpBC,EAAAA,KAAK,EAAE,IAFa;AAGpBC,EAAAA,IAAI,EAAE,IAHc;AAIpBC,EAAAA,WAAW,EAAE,IAJO;AAKpBC,EAAAA,aAAa,EAAE,IALK;AAMpBC,EAAAA,KAAK,EAAE,IANa;AAOpBC,EAAAA,KAAK,EAAE,IAPa;AAQpBC,EAAAA,OAAO,EAAE,KARW;AASpBC,EAAAA,SAAS,EAAE,KATS;AAUpBC,EAAAA,WAAW,EAAE,KAVO;AAWpBC,EAAAA,YAAY,EAAEC,SAXM;AAYpBC,EAAAA,OAAO,EAAE,IAZW;AAapB;AACAC,EAAAA,EAAE,EAAE;AACFC,IAAAA,UAAU,EAAE;AADV;AAdgB,CAAtB;;AAmBA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGjB,aAAT,EAAwBkB,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK1B,aAAL;AACE,aAAO2B,WAAW,CAACH,KAAD,EAAQC,MAAM,CAACG,IAAf,CAAlB;;AACF,SAAK1B,gBAAL;AACE,aAAO2B,cAAc,CAACL,KAAD,EAAQC,MAAM,CAACP,YAAf,CAArB;;AACF,SAAKf,eAAL;AACE,aAAO,EACL,GAAGqB,KADE;AAELP,QAAAA,WAAW,EAAEQ,MAAM,CAACR;AAFf,OAAP;;AAIF,SAAKb,cAAL;AACE,aAAO,EACL,GAAGoB,KADE;AAELZ,QAAAA,aAAa,EAAE,CAAC,MAAM;AACpB,cAAGY,KAAK,CAACZ,aAAN,CAAoBkB,GAApB,CAAwBC,IAAI,IAAIA,IAAI,CAACvB,EAArC,EAAyCwB,QAAzC,CAAkDP,MAAM,CAACM,IAAP,CAAYvB,EAA9D,CAAH,EAAqE;AACnE,mBAAOgB,KAAK,CAACZ,aAAN,CAAoBqB,MAApB,CAA2BF,IAAI,IAAIA,IAAI,CAACvB,EAAL,IAAWiB,MAAM,CAACM,IAAP,CAAYvB,EAA1D,CAAP;AACD,WAFD,MAEK;AACHgB,YAAAA,KAAK,CAACZ,aAAN,CAAoBsB,IAApB,CAAyBT,MAAM,CAACM,IAAhC;AACA,mBAAOP,KAAK,CAACZ,aAAb;AACD;AACF,SAPc;AAFV,OAAP;;AAWF,SAAKN,MAAL;AACE,aAAO,EACL,GAAGkB,KADE;AAELH,QAAAA,EAAE,EAAEI,MAAM,CAACJ;AAFN,OAAP;;AAIF;AACE,aAAOG,KAAP;AA5BJ;;AA6BC;AACF,CA/BD;;AAiCA,MAAMG,WAAW,GAAG,CAACH,KAAD,EAAQI,IAAR,KAAiB;AACnC,SAAO,EACL,GAAGJ,KADE;AAELT,IAAAA,OAAO,EAAE,IAFJ;AAGLC,IAAAA,SAAS,EAAE,IAHN;AAIL,OAAGY,IAJE;AAKLX,IAAAA,WAAW,EAAE;AALR,GAAP;AAOD,CARD;;AAUA,MAAMY,cAAc,GAAG,CAACL,KAAD,EAAQN,YAAR,KAAyB;AAC9C,SAAO,EACL,GAAGM,KADE;AAELN,IAAAA;AAFK,GAAP;AAID,CALD;;AAOA,OAAO,MAAMiB,KAAK,GAAIP,IAAD,IAAWQ,QAAD,IAAc;AAE3CA,EAAAA,QAAQ,CAACC,aAAa,CAAC,IAAD,CAAd,CAAR;AACAxC,EAAAA,OAAO,CAACyC,MAAR,CAAeV,IAAf,EACGW,IADH,CACQC,GAAG,IAAI;AACX,QAAGA,GAAG,CAACC,WAAJ,KAAoB,CAAvB,EAA0B;AACxBL,MAAAA,QAAQ,CAACM,wBAAwB,CAACF,GAAG,CAACZ,IAAL,CAAzB,CAAR;AACAQ,MAAAA,QAAQ,CAACrC,UAAU,CAAC,QAAD,EAAW;AAAC4C,QAAAA,MAAM,EAAEH,GAAG,CAACI;AAAb,OAAX,CAAX,CAAR;AACD,KAHD,MAGK;AACHR,MAAAA,QAAQ,CAACS,2BAA2B,CAACL,GAAG,CAACI,OAAL,CAA5B,CAAR;AACD;;AAAA;AACDR,IAAAA,QAAQ,CAACC,aAAa,CAAC,KAAD,CAAd,CAAR;AACD,GATH;AAUD,CAbM;AAeP,OAAO,MAAMS,MAAM,GAAIlB,IAAD,IAAWQ,QAAD,IAAc;AAE5CA,EAAAA,QAAQ,CAACC,aAAa,CAAC,IAAD,CAAd,CAAR;AACAxC,EAAAA,OAAO,CAACiD,MAAR,CAAelB,IAAf,EACGW,IADH,CACQC,GAAG,IAAI;AACX,QAAGA,GAAG,CAACC,WAAJ,KAAoB,CAAvB,EAA0B;AACxBM,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAZ,MAAAA,QAAQ,CAACS,2BAA2B,CAACL,GAAG,CAACI,OAAL,CAA5B,CAAR;AACAR,MAAAA,QAAQ,CAACrC,UAAU,CAAC,QAAD,EAAW;AAAC4C,QAAAA,MAAM,EAAEH,GAAG,CAACI;AAAb,OAAX,CAAX,CAAR;AACD,KAJD,MAIK;AACHR,MAAAA,QAAQ,CAACS,2BAA2B,CAACL,GAAG,CAACI,OAAL,CAA5B,CAAR;AACD;;AAAA;AACDR,IAAAA,QAAQ,CAACC,aAAa,CAAC,KAAD,CAAd,CAAR;AACD,GAVH;AAWD,CAdM;AAeP,OAAO,MAAMY,MAAM,GAAG,CAACC,OAAD,EAAUnB,IAAV,EAAgBM,aAAhB,EAA+Bc,aAA/B,KAAiDf,QAAQ,IAAI;AACjFtC,EAAAA,SAAS,CAACmD,MAAV,CAAiBC,OAAjB,EACGX,IADH,CACQX,IAAI,IAAI;AACZ,QAAGA,IAAI,CAACa,WAAL,KAAqB,CAAxB,EAA0B;AACxBL,MAAAA,QAAQ,CAACgB,aAAa,CAACrB,IAAD,CAAd,CAAR;AACAoB,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAf,MAAAA,QAAQ,CAAC;AAACV,QAAAA,IAAI,EAAEzB,SAAP;AAAkBoD,QAAAA,OAAO,EAAEtB,IAAI,CAACvB;AAAhC,OAAD,CAAR;AACD;;AACD6B,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GARH;AASD,CAVM;AAYP,OAAO,MAAMiB,QAAQ,GAAG,CAACJ,OAAD,EAAUnB,IAAV,EAAgBM,aAAhB,EAA+Bc,aAA/B,KAAiDf,QAAQ,IAAI;AACnFtC,EAAAA,SAAS,CAACwD,QAAV,CAAmBJ,OAAnB,EACGX,IADH,CACQX,IAAI,IAAI;AACZ,QAAGA,IAAI,CAACa,WAAL,KAAqB,CAAxB,EAA0B;AACxBL,MAAAA,QAAQ,CAACgB,aAAa,CAACrB,IAAD,CAAd,CAAR;AACAM,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAc,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;;AACDd,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GARH;AASD,CAVM,C,CAWP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,MAAMA,aAAa,GAAGpB,WAAW,KAAK;AAACS,EAAAA,IAAI,EAAEvB,eAAP;AAAwBc,EAAAA;AAAxB,CAAL,CAAjC;AAEP,OAAO,MAAMyB,wBAAwB,GAAGd,IAAI,KAAK;AAACF,EAAAA,IAAI,EAAE1B,aAAP;AAAsB4B,EAAAA;AAAtB,CAAL,CAArC;AAEP,OAAO,MAAMiB,2BAA2B,GAAG3B,YAAY,KAAK;AAACQ,EAAAA,IAAI,EAAExB,gBAAP;AAAyBgB,EAAAA;AAAzB,CAAL,CAAhD;AAEP,OAAO,MAAMkC,aAAa,GAAGrB,IAAI,KAAK;AAACL,EAAAA,IAAI,EAAEtB,cAAP;AAAuB2B,EAAAA;AAAvB,CAAL,CAA1B;AAEP,OAAO,MAAMwB,kBAAkB,GAAGlC,EAAE,KAAK;AAACK,EAAAA,IAAI,EAAEpB,MAAP;AAAee,EAAAA;AAAf,CAAL,CAA7B;AAEP,eAAeE,WAAf","sourcesContent":["import {authApi, followApi} from '../api/api.js';\nimport {stopSubmit} from 'redux-form';\n\nexport const SET_AUTH_DATA = 'SET-AUTH-DATA';\nexport const WS_FOLLOW = 'WS-FOLLOW';\nconst SET_SERVER_ERROR = 'SET-SERVER-ERROR';\nconst SET_IS_FETCHING = 'SET-IS-FETCHING';\nconst SET_SUBSCRIBED = 'SET-SUBSCRIBED';\nconst SET_SUBSCRIBERS = 'SET-SUBSCRIBERS';\nconst SET_WS = 'SET_WS';\n\nconst initial_state = {\n  id: null,\n  email: null,\n  name: null,\n  subscribers: null,\n  subscribed_to: null,\n  token: null,\n  photo: null,\n  is_auth: false,\n  is_authed: false,\n  is_fetching: false,\n  server_error: undefined,\n  profile: null,\n  //\n  ws: {\n    readyState: 0,\n  },\n};\n\nconst authReducer = (state = initial_state, action) => {\n  switch (action.type) {\n    case SET_AUTH_DATA: \n      return setAuthData(state, action.data);\n    case SET_SERVER_ERROR: \n      return setServerError(state, action.server_error);\n    case SET_IS_FETCHING:\n      return {\n        ...state,\n        is_fetching: action.is_fetching,\n      };\n    case SET_SUBSCRIBED:\n      return {\n        ...state,\n        subscribed_to: (() => {\n          if(state.subscribed_to.map(user => user.id).includes(action.user.id)){\n            return state.subscribed_to.filter(user => user.id != action.user.id);\n          }else{\n            state.subscribed_to.push(action.user);\n            return state.subscribed_to;\n          }\n        })(),\n      };\n    case SET_WS:\n      return {\n        ...state,\n        ws: action.ws,\n      };\n    default:\n      return state;\n  };\n};\n\nconst setAuthData = (state, data) => {\n  return {\n    ...state,\n    is_auth: true,\n    is_authed: true,\n    ...data,\n    is_fetching: false,\n  };\n};\n\nconst setServerError = (state, server_error) => {\n  return {\n    ...state, \n    server_error\n  };\n};\n\nexport const login = (data) => (dispatch) => {\n\n  dispatch(setIsFetching(true));\n  authApi.signIn(data)\n    .then(res => {\n      if(res.result_code === 0) {\n        dispatch(setAuthDataActionCreator(res.data));\n        dispatch(stopSubmit('signin', {_error: res.message}));\n      }else{\n        dispatch(setServerErrorActionCreator(res.message));\n      };\n      dispatch(setIsFetching(false));\n    });\n}\n\nexport const signUp = (data) => (dispatch) => {\n\n  dispatch(setIsFetching(true));\n  authApi.signUp(data)\n    .then(res => {\n      if(res.result_code === 0) {\n        console.log('User successfuly registered!');\n        dispatch(setServerErrorActionCreator(res.message));\n        dispatch(stopSubmit('signup', {_error: res.message}));\n      }else{\n        dispatch(setServerErrorActionCreator(res.message));\n      };\n      dispatch(setIsFetching(false));\n    });\n};\nexport const follow = (options, user, setIsFetching, setIsFollowed) => dispatch => {\n  followApi.follow(options)\n    .then(data => {\n      if(data.result_code === 0){\n        dispatch(setSubscribed(user));\n        setIsFollowed(true);\n        dispatch({type: WS_FOLLOW, user_id: user.id});\n      }\n      setIsFetching(false);\n    });\n};\n\nexport const unfollow = (options, user, setIsFetching, setIsFollowed) => dispatch => {\n  followApi.unfollow(options)\n    .then(data => {\n      if(data.result_code === 0){\n        dispatch(setSubscribed(user));\n        setIsFetching(false);\n        setIsFollowed(false);\n      }\n      setIsFetching(false);\n    });\n};\n//\n// export const onUnfollow = options => dispatch => {\n//   let options = {\n//     id: this.props.auth.id,\n//     user_id: this.props.user.id,\n//     token: this.props.auth.token,\n//   };\n//\n//   this.setState({isFetching: true});\n//   followApi.unfollow(options)\n//     .then(data => {\n//       if(data.result_code === 0){\n//\n//         this.props.setSubscribed(this.props.user);\n//         this.setState({followed: false})\n//         this.setState({isFetching: false})\n//       }else{\n//\n//         this.setState({isFetching: false})\n//       }\n//     });\n// };\n\n\nexport const setIsFetching = is_fetching => ({type: SET_IS_FETCHING, is_fetching});\n\nexport const setAuthDataActionCreator = data => ({type: SET_AUTH_DATA, data});\n\nexport const setServerErrorActionCreator = server_error => ({type: SET_SERVER_ERROR, server_error});\n\nexport const setSubscribed = user => ({type: SET_SUBSCRIBED, user});\n\nexport const setWsActionCreator = ws => ({type: SET_WS, ws});\n\nexport default authReducer;\n"]},"metadata":{},"sourceType":"module"}