{"ast":null,"code":"import { SET_AUTH_DATA } from '../reducers/authReducer.js';\nimport { WS_MESSAGE, getDialogs } from '../reducers/messagesReducer.js';\n\nconst authMiddleware = store => next => action => {\n  let state = store.getState();\n  let result;\n\n  switch (action.type) {\n    case SET_AUTH_DATA:\n      result = next(action);\n      state = store.getState();\n      console.log('STATE: ');\n      console.log(state);\n      let options = {\n        id: state.auth.id,\n        token: state.auth.token\n      };\n      console.log('OPTIONS');\n      console.log(options);\n      store.dispatch(getDialogs(options));\n      break;\n\n    default:\n      result = next(action);\n  }\n\n  ;\n  return result;\n};\n\nexport default authMiddleware;","map":{"version":3,"sources":["/root/Documents/projects/social-network/src/middleware/authMiddleware.js"],"names":["SET_AUTH_DATA","WS_MESSAGE","getDialogs","authMiddleware","store","next","action","state","getState","result","type","console","log","options","id","auth","token","dispatch"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,4BAA5B;AACA,SAAQC,UAAR,EAAoBC,UAApB,QAAqC,gCAArC;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AAEhD,MAAIC,KAAK,GAAGH,KAAK,CAACI,QAAN,EAAZ;AACA,MAAIC,MAAJ;;AAEA,UAAOH,MAAM,CAACI,IAAd;AACE,SAAKV,aAAL;AACES,MAAAA,MAAM,GAAGJ,IAAI,CAACC,MAAD,CAAb;AACAC,MAAAA,KAAK,GAAGH,KAAK,CAACI,QAAN,EAAR;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,UAAIM,OAAO,GAAG;AACZC,QAAAA,EAAE,EAAEP,KAAK,CAACQ,IAAN,CAAWD,EADH;AAEZE,QAAAA,KAAK,EAAET,KAAK,CAACQ,IAAN,CAAWC;AAFN,OAAd;AAIAL,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACAT,MAAAA,KAAK,CAACa,QAAN,CAAef,UAAU,CAACW,OAAD,CAAzB;AACA;;AACF;AACEJ,MAAAA,MAAM,GAAGJ,IAAI,CAACC,MAAD,CAAb;AAfJ;;AAgBC;AAED,SAAOG,MAAP;AACD,CAxBD;;AA0BA,eAAeN,cAAf","sourcesContent":["import {SET_AUTH_DATA} from '../reducers/authReducer.js';\nimport {WS_MESSAGE, getDialogs} from '../reducers/messagesReducer.js';\n\nconst authMiddleware = store => next => action => {\n\n  let state = store.getState();\n  let result;\n\n  switch(action.type) {\n    case SET_AUTH_DATA:\n      result = next(action);\n      state = store.getState();\n      console.log('STATE: ');\n      console.log(state);\n      let options = {\n        id: state.auth.id,\n        token: state.auth.token,\n      };\n      console.log('OPTIONS');\n      console.log(options);\n      store.dispatch(getDialogs(options));\n      break;\n    default:\n      result = next(action);\n  };\n\n  return result;\n}\n\nexport default authMiddleware;\n"]},"metadata":{},"sourceType":"module"}