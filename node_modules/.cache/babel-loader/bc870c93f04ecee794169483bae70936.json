{"ast":null,"code":"var _jsxFileName = \"/home/i/Documents/projects/social-network/src/components/Profile/Posts/Post/Post.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { likedPost, deletePost } from '../../../../reducers/profileReducer';\nimport styles from './Post.module.css';\nimport { getFormatedDate } from '../../../../utils/functions';\nimport heart from '../../../../assets/images/heart.png';\nimport heart_fool from '../../../../assets/images/heart_fool.png';\nimport criss_cross from '../../../../assets/images/criss-cross.png';\nimport FetchingToggle from '../../../commons/FetchingToggle/FetchingToggle';\nimport FullSizeToggle from '../../../commons/FullSizeToggle/FullSizeToggle';\nimport FullSizeImage from '../../../commons/FullSizeImage/FullSizeImage';\nimport Modal from '../../../commons/Modal/Modal';\nimport UserItem from '../../../commons/UserItem/UserItem.jsx';\nimport { profileApi } from '../../../../api/api.js';\n\nclass Post extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      widthMax: 900,\n      widthMin: 700,\n      heightMax: 400,\n      width: 0,\n      height: 0,\n      like_fetching: false,\n      isFullSize: false,\n      showWhoLikedModal: false\n    };\n  }\n\n  fitImage(e) {\n    let img = new Image();\n    img.src = e.target.currentSrc;\n    let width, height;\n\n    if (true) {\n      width = e.currentTarget.parentElement.clientWidth;\n      height = width * img.height / img.width;\n    } else if (img.width < this.state.widthMin) {\n      width = this.state.widthMin;\n      height = this.state.widthMin * img.height / img.width;\n    } else if (img.width < this.state.widthMax) {\n      width = img.width;\n      height = img.height;\n    } else {\n      width = this.state.widthMax;\n      height = this.state.widthMax * img.height / img.width;\n    }\n\n    ;\n    this.setState({\n      width,\n      height\n    });\n  }\n\n  async onLikes(e) {\n    let options = {\n      id: this.props.auth.id,\n      user_id: this.props.profile.id,\n      token: this.props.auth.token,\n      post_id: this.props.post.id\n    };\n    this.setState({\n      like_fetching: true\n    });\n    await this.props.likedPost(options);\n    this.setState({\n      like_fetching: false\n    });\n  }\n\n  async onDelete(e) {\n    let options = {\n      id: this.props.auth.id,\n      token: this.props.auth.token,\n      post_id: this.props.post.id\n    };\n    await this.props.deletePost(options);\n  }\n\n  isLiked() {\n    return this.props.post.likes.includes(this.props.auth.id) ? heart_fool : heart;\n  }\n\n  fullSizeToggle() {\n    this.setState({\n      isFullSize: !this.state.isFullSize\n    });\n  }\n\n  showWhoLikedModalToggle() {\n    this.setState({\n      showWhoLikedModal: !this.state.showWhoLikedModal\n    });\n  }\n\n  render() {\n    window.localState = this.state;\n    let users_ho_liked = this.props.post.likes.map(id => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.user_ho_liked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.wrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, this.props.auth.id === this.props.profile.id && /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      onClick: e => {\n        e.preventDefault();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.criss_cross,\n      onClick: this.onDelete.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: criss_cross,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, getFormatedDate(this.props.post.date)), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.post_picture_wrp,\n      style: {\n        'max-height': this.state.heightMax\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FullSizeToggle, {\n      fullSizeToggle: this.fullSizeToggle.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.post.picture,\n      className: styles.post_picture,\n      onLoad: this.fitImage.bind(this),\n      style: {\n        width: 0,\n        height: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        'background-image': `url(\"${this.props.post.picture}\")`,\n        'background-repeat': 'no-repeat',\n        'background-size': 'cover',\n        'background-position': 'center',\n        position: 'relative',\n        width: this.state.width,\n        height: this.state.height\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 37\n      }\n    }, this.props.post.text), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.likes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      onClick: e => {\n        e.preventDefault();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.count,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.text,\n      onClick: this.showWhoLikedModalToggle.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 49\n      }\n    }, this.props.post.likes.length), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.user_ho_liked_wrp,\n      style: {\n        'max-width': this.state.user_count_edit_mode && '120px' || '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 49\n      }\n    }, users_ho_liked.splice(0, 3), \"...\"))), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      onClick: e => {\n        e.preventDefault();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.heart,\n      onClick: this.onLikes.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, !this.state.like_fetching && /*#__PURE__*/React.createElement(\"img\", {\n      src: this.isLiked(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 20\n      }\n    }) || /*#__PURE__*/React.createElement(FetchingToggle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 20\n      }\n    }))))), this.state.isFullSize && /*#__PURE__*/React.createElement(FullSizeImage, {\n      fullSizeToggle: this.fullSizeToggle.bind(this),\n      posts: this.props.posts,\n      picture: this.props.post.picture,\n      width: this.state.width,\n      height: this.state.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 24\n      }\n    }), this.state.showWhoLikedModal && /*#__PURE__*/React.createElement(Modal, {\n      width: 800,\n      changeVisibleModal: this.showWhoLikedModalToggle.bind(this),\n      scrollbar: this.props.scrollbar,\n      likes: this.props.post.likes,\n      post_id: this.props.post.id,\n      user_id: this.props.profile.id,\n      Component: WhoLikedModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 36\n      }\n    }));\n  }\n\n}\n\n;\n\nclass WhoLikedModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      likers: [],\n      isFetching: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isFetching: true\n    });\n    let options = {\n      user_id: this.props.user_id,\n      post_id: this.props.post_id\n    };\n    profileApi.getLikersPost(options).then(data => {\n      if (data.result_code == 0) {\n        console.log('res' + data.users);\n        this.setState({\n          likers: data.users\n        });\n      } else {}\n\n      this.setState({\n        isFetching: false\n      });\n    });\n  }\n\n  render() {\n    let users = this.state.likers.map(user => {\n      return /*#__PURE__*/React.createElement(UserItem, {\n        user: user,\n        changeVisibleModal: () => {\n          this.props.changeVisibleModal();\n          this.props.scrollbar.current.scrollTop = 0;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 20\n        }\n      });\n    });\n    let height = users.length > 4 ? 570 : users.length * 130 + 50; // 130 * n + 50\n\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: 'custom_scroll_bar',\n      style: {\n        width: '100%',\n        height\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 16\n      }\n    }, users.length && users || /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 20\n      }\n    }, \"list is empty\"));\n  }\n\n}\n\nexport default connect(() => {}, {\n  likedPost,\n  deletePost\n})(Post);","map":{"version":3,"sources":["/home/i/Documents/projects/social-network/src/components/Profile/Posts/Post/Post.jsx"],"names":["React","connect","likedPost","deletePost","styles","getFormatedDate","heart","heart_fool","criss_cross","FetchingToggle","FullSizeToggle","FullSizeImage","Modal","UserItem","profileApi","Post","Component","state","widthMax","widthMin","heightMax","width","height","like_fetching","isFullSize","showWhoLikedModal","fitImage","e","img","Image","src","target","currentSrc","currentTarget","parentElement","clientWidth","setState","onLikes","options","id","props","auth","user_id","profile","token","post_id","post","onDelete","isLiked","likes","includes","fullSizeToggle","showWhoLikedModalToggle","render","window","localState","users_ho_liked","map","user_ho_liked","wrapper","preventDefault","bind","date","post_picture_wrp","picture","post_picture","position","text","count","length","user_ho_liked_wrp","user_count_edit_mode","splice","posts","scrollbar","WhoLikedModal","likers","isFetching","componentDidMount","getLikersPost","then","data","result_code","console","log","users","user","changeVisibleModal","current","scrollTop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,EAAmBC,UAAnB,QAAoC,qCAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,eAAR,QAA8B,6BAA9B;AAEA,OAAOC,KAAP,MAAkB,qCAAlB;AACA,OAAOC,UAAP,MAAuB,0CAAvB;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AAEA,OAAOC,cAAP,MAA2B,gDAA3B;AACA,OAAOC,cAAP,MAA2B,gDAA3B;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,QAAP,MAAqB,wCAArB;AAEA,SAAQC,UAAR,QAAyB,wBAAzB;;AAEA,MAAMC,IAAN,SAAmBf,KAAK,CAACgB,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE/BC,KAF+B,GAEvB;AACJC,MAAAA,QAAQ,EAAE,GADN;AAEJC,MAAAA,QAAQ,EAAE,GAFN;AAGJC,MAAAA,SAAS,EAAE,GAHP;AAIJC,MAAAA,KAAK,EAAE,CAJH;AAKJC,MAAAA,MAAM,EAAE,CALJ;AAMJC,MAAAA,aAAa,EAAE,KANX;AAOJC,MAAAA,UAAU,EAAE,KAPR;AAQJC,MAAAA,iBAAiB,EAAE;AARf,KAFuB;AAAA;;AAa/BC,EAAAA,QAAQ,CAAEC,CAAF,EAAK;AACT,QAAIC,GAAG,GAAG,IAAIC,KAAJ,EAAV;AACAD,IAAAA,GAAG,CAACE,GAAJ,GAAUH,CAAC,CAACI,MAAF,CAASC,UAAnB;AACA,QAAIX,KAAJ,EAAWC,MAAX;;AACA,QAAG,IAAH,EAAQ;AACJD,MAAAA,KAAK,GAAGM,CAAC,CAACM,aAAF,CAAgBC,aAAhB,CAA8BC,WAAtC;AACAb,MAAAA,MAAM,GAAGD,KAAK,GAAGO,GAAG,CAACN,MAAZ,GAAoBM,GAAG,CAACP,KAAjC;AACH,KAHD,MAGM,IAAGO,GAAG,CAACP,KAAJ,GAAY,KAAKJ,KAAL,CAAWE,QAA1B,EAAmC;AACrCE,MAAAA,KAAK,GAAG,KAAKJ,KAAL,CAAWE,QAAnB;AACAG,MAAAA,MAAM,GAAG,KAAKL,KAAL,CAAWE,QAAX,GAAsBS,GAAG,CAACN,MAA1B,GAAmCM,GAAG,CAACP,KAAhD;AACH,KAHK,MAGA,IAAGO,GAAG,CAACP,KAAJ,GAAY,KAAKJ,KAAL,CAAWC,QAA1B,EAAmC;AACrCG,MAAAA,KAAK,GAAGO,GAAG,CAACP,KAAZ;AACAC,MAAAA,MAAM,GAAGM,GAAG,CAACN,MAAb;AACH,KAHK,MAGD;AAEDD,MAAAA,KAAK,GAAG,KAAKJ,KAAL,CAAWC,QAAnB;AACAI,MAAAA,MAAM,GAAG,KAAKL,KAAL,CAAWC,QAAX,GAAsBU,GAAG,CAACN,MAA1B,GAAmCM,GAAG,CAACP,KAAhD;AACH;;AAAA;AAED,SAAKe,QAAL,CAAc;AAAEf,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAd;AAEH;;AAED,QAAMe,OAAN,CAAeV,CAAf,EAAkB;AACd,QAAIW,OAAO,GAAG;AACVC,MAAAA,EAAE,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBF,EADV;AAEVG,MAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,OAAX,CAAmBJ,EAFlB;AAGVK,MAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,IAAX,CAAgBG,KAHb;AAIVC,MAAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,IAAX,CAAgBP;AAJf,KAAd;AAOA,SAAKH,QAAL,CAAc;AAAEb,MAAAA,aAAa,EAAE;AAAjB,KAAd;AACA,UAAM,KAAKiB,KAAL,CAAWtC,SAAX,CAAqBoC,OAArB,CAAN;AACA,SAAKF,QAAL,CAAc;AAAEb,MAAAA,aAAa,EAAE;AAAjB,KAAd;AAEH;;AAED,QAAMwB,QAAN,CAAepB,CAAf,EAAkB;AACd,QAAIW,OAAO,GAAG;AACVC,MAAAA,EAAE,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBF,EADV;AAEVK,MAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,IAAX,CAAgBG,KAFb;AAGVC,MAAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,IAAX,CAAgBP;AAHf,KAAd;AAMA,UAAM,KAAKC,KAAL,CAAWrC,UAAX,CAAsBmC,OAAtB,CAAN;AACH;;AAEDU,EAAAA,OAAO,GAAI;AACP,WAAO,KAAKR,KAAL,CAAWM,IAAX,CAAgBG,KAAhB,CAAsBC,QAAtB,CAA+B,KAAKV,KAAL,CAAWC,IAAX,CAAgBF,EAA/C,IAAoDhC,UAApD,GAAgED,KAAvE;AACH;;AAED6C,EAAAA,cAAc,GAAI;AACd,SAAKf,QAAL,CAAc;AAACZ,MAAAA,UAAU,EAAE,CAAC,KAAKP,KAAL,CAAWO;AAAzB,KAAd;AACH;;AAED4B,EAAAA,uBAAuB,GAAI;AACvB,SAAKhB,QAAL,CAAc;AAACX,MAAAA,iBAAiB,EAAE,CAAC,KAAKR,KAAL,CAAWQ;AAAhC,KAAd;AACH;;AAED4B,EAAAA,MAAM,GAAI;AACNC,IAAAA,MAAM,CAACC,UAAP,GAAoB,KAAKtC,KAAzB;AAEA,QAAIuC,cAAc,GAAG,KAAKhB,KAAL,CAAWM,IAAX,CAAgBG,KAAhB,CAAsBQ,GAAtB,CAA0BlB,EAAE,IAAI;AACjD,0BAAO;AAAK,QAAA,SAAS,EAAEnC,MAAM,CAACsD,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFoB,CAArB;AAIA,wBACI;AAAK,MAAA,SAAS,EAAEtD,MAAM,CAACuD,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKnB,KAAL,CAAWC,IAAX,CAAgBF,EAAhB,KAAuB,KAAKC,KAAL,CAAWG,OAAX,CAAmBJ,EAA1C,iBACG;AAAG,MAAA,IAAI,EAAC,EAAR;AAAW,MAAA,OAAO,EAAGZ,CAAD,IAAO;AAAEA,QAAAA,CAAC,CAACiC,cAAF;AAAoB,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAExD,MAAM,CAACI,WAAvB;AAAoC,MAAA,OAAO,EAAE,KAAKuC,QAAL,CAAcc,IAAd,CAAmB,IAAnB,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAErD,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADD,CAHX,eASQ;AAAK,MAAA,SAAS,EAAEJ,MAAM,CAAC0D,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKzD,eAAe,CAAC,KAAKmC,KAAL,CAAWM,IAAX,CAAgBgB,IAAjB,CADpB,CATR,eAYQ;AAAK,MAAA,SAAS,EAAE1D,MAAM,CAAC0C,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAE1C,MAAM,CAAC2D,gBAAvB;AACI,MAAA,KAAK,EAAG;AAAC,sBAAc,KAAK9C,KAAL,CAAWG;AAA1B,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,cAAD;AACI,MAAA,cAAc,EAAE,KAAK+B,cAAL,CAAoBU,IAApB,CAAyB,IAAzB,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAIQ;AAAK,MAAA,GAAG,EAAE,KAAKrB,KAAL,CAAWM,IAAX,CAAgBkB,OAA1B;AAAmC,MAAA,SAAS,EAAE5D,MAAM,CAAC6D,YAArD;AACI,MAAA,MAAM,EAAE,KAAKvC,QAAL,CAAcmC,IAAd,CAAmB,IAAnB,CADZ;AAEI,MAAA,KAAK,EAAE;AACHxC,QAAAA,KAAK,EAAE,CADJ;AACOC,QAAAA,MAAM,EAAE;AADf,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR,eAUgB;AAAK,MAAA,KAAK,EAAG;AACT,4BAAqB,QAAO,KAAKkB,KAAL,CAAWM,IAAX,CAAgBkB,OAAQ,IAD3C;AAET,6BAAqB,WAFZ;AAGT,2BAAmB,OAHV;AAIT,+BAAuB,QAJd;AAKTE,QAAAA,QAAQ,EAAE,UALD;AAMT7C,QAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWI,KANT;AAOTC,QAAAA,MAAM,EAAE,KAAKL,KAAL,CAAWK;AAPV,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVhB,CADJ,eAuBgB;AAAK,MAAA,SAAS,EAAElB,MAAM,CAAC+D,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK3B,KAAL,CAAWM,IAAX,CAAgBqB,IADrB,CAvBhB,eA2BgB;AAAK,MAAA,SAAS,EAAE/D,MAAM,CAAC6C,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,IAAI,EAAC,EAAR;AAAW,MAAA,OAAO,EAAGtB,CAAD,IAAO;AAAEA,QAAAA,CAAC,CAACiC,cAAF;AAAoB,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAExD,MAAM,CAACgE,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAEhE,MAAM,CAAC+D,IAAvB;AACA,MAAA,OAAO,EAAE,KAAKf,uBAAL,CAA6BS,IAA7B,CAAkC,IAAlC,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKrB,KAAL,CAAWM,IAAX,CAAgBG,KAAhB,CAAsBoB,MAF3B,CADJ,eAKI;AAAK,MAAA,SAAS,EAAEjE,MAAM,CAACkE,iBAAvB;AACI,MAAA,KAAK,EAAE;AAAC,qBAAa,KAAKrD,KAAL,CAAWsD,oBAAX,IAAmC,OAAnC,IAA8C;AAA5D,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKf,cAAc,CAACgB,MAAf,CAAsB,CAAtB,EAAyB,CAAzB,CAFL,QALJ,CADJ,CADJ,eAchC;AAAG,MAAA,IAAI,EAAC,EAAR;AAAW,MAAA,OAAO,EAAG7C,CAAD,IAAO;AAAEA,QAAAA,CAAC,CAACiC,cAAF;AAAoB,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAExD,MAAM,CAACE,KAAvB;AAA8B,MAAA,OAAO,EAAE,KAAK+B,OAAL,CAAawB,IAAb,CAAkB,IAAlB,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,CAAC,KAAK5C,KAAL,CAAWM,aAAZ,iBACG;AAAK,MAAA,GAAG,EAAE,KAAKyB,OAAL,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,iBAEG,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJX,CADJ,CAdgC,CA3BhB,CAZR,EAiEI,KAAK/B,KAAL,CAAWO,UAAX,iBACO,oBAAC,aAAD;AACC,MAAA,cAAc,EAAE,KAAK2B,cAAL,CAAoBU,IAApB,CAAyB,IAAzB,CADjB;AAEC,MAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWiC,KAFnB;AAGC,MAAA,OAAO,EAAE,KAAKjC,KAAL,CAAWM,IAAX,CAAgBkB,OAH1B;AAIC,MAAA,KAAK,EAAE,KAAK/C,KAAL,CAAWI,KAJnB;AAKC,MAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWK,MALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlEX,EA2EgB,KAAKL,KAAL,CAAWQ,iBAAX,iBACO,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,GAAd;AACC,MAAA,kBAAkB,EAAE,KAAK2B,uBAAL,CAA6BS,IAA7B,CAAkC,IAAlC,CADrB;AAEC,MAAA,SAAS,EAAE,KAAKrB,KAAL,CAAWkC,SAFvB;AAGC,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWM,IAAX,CAAgBG,KAHxB;AAIC,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWM,IAAX,CAAgBP,EAJ1B;AAKC,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWG,OAAX,CAAmBJ,EAL7B;AAMC,MAAA,SAAS,EAAEoC,aANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5EvB,CADJ;AAuFH;;AAtK8B;;AAuKlC;;AAED,MAAMA,aAAN,SAA4B3E,KAAK,CAACgB,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAkBxCC,KAlBwC,GAkBhC;AACJ2D,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,UAAU,EAAE;AAFR,KAlBgC;AAAA;;AACxCC,EAAAA,iBAAiB,GAAG;AAChB,SAAK1C,QAAL,CAAc;AAACyC,MAAAA,UAAU,EAAE;AAAb,KAAd;AACA,QAAIvC,OAAO,GAAG;AACVI,MAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE,OADV;AAEVG,MAAAA,OAAO,EAAE,KAAKL,KAAL,CAAWK;AAFV,KAAd;AAIA/B,IAAAA,UAAU,CAACiE,aAAX,CAAyBzC,OAAzB,EACK0C,IADL,CACUC,IAAI,IAAI;AACV,UAAGA,IAAI,CAACC,WAAL,IAAoB,CAAvB,EAAyB;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAQH,IAAI,CAACI,KAAzB;AACA,aAAKjD,QAAL,CAAc;AAACwC,UAAAA,MAAM,EAAEK,IAAI,CAACI;AAAd,SAAd;AACH,OAHD,MAGK,CACJ;;AACD,WAAKjD,QAAL,CAAc;AAACyC,QAAAA,UAAU,EAAE;AAAb,OAAd;AACH,KARL;AASH;;AAODxB,EAAAA,MAAM,GAAI;AACN,QAAIgC,KAAK,GAAG,KAAKpE,KAAL,CAAW2D,MAAX,CAAkBnB,GAAlB,CAAsB6B,IAAI,IAAI;AACtC,0BAAO,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEA,IAAhB;AACH,QAAA,kBAAkB,EAAE,MAAM;AACtB,eAAK9C,KAAL,CAAW+C,kBAAX;AACA,eAAK/C,KAAL,CAAWkC,SAAX,CAAqBc,OAArB,CAA6BC,SAA7B,GAAyC,CAAzC;AACH,SAJE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAMH,KAPW,CAAZ;AASA,QAAInE,MAAM,GAAG+D,KAAK,CAAChB,MAAN,GAAe,CAAf,GAAkB,GAAlB,GAAuBgB,KAAK,CAAChB,MAAN,GAAe,GAAf,GAAqB,EAAzD,CAVM,CAUuD;;AAC7Dc,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK5C,KAAjB;AACA,wBAAO;AAAK,MAAA,SAAS,EAAE,mBAAhB;AACH,MAAA,KAAK,EAAG;AACJnB,QAAAA,KAAK,EAAE,MADH;AAEJC,QAAAA;AAFI,OADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMC+D,KAAK,CAAChB,MAAN,IACGgB,KADH,iBAEG;AAAM,MAAA,KAAK,EAAG;AACbhE,QAAAA,KAAK,EAAE,MADM;AAEbC,QAAAA,MAAM,EAAE;AAFK,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBARJ,CAAP;AAgBH;;AAnDuC;;AAsD5C,eAAerB,OAAO,CAAC,MAAM,CAAE,CAAT,EAAW;AAACC,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,CAAX,CAAP,CAA2CY,IAA3C,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {likedPost, deletePost} from '../../../../reducers/profileReducer';\nimport styles from './Post.module.css';\nimport {getFormatedDate} from '../../../../utils/functions';\n\nimport heart from '../../../../assets/images/heart.png';\nimport heart_fool from '../../../../assets/images/heart_fool.png';\nimport criss_cross from '../../../../assets/images/criss-cross.png';\n\nimport FetchingToggle from '../../../commons/FetchingToggle/FetchingToggle';\nimport FullSizeToggle from '../../../commons/FullSizeToggle/FullSizeToggle';\nimport FullSizeImage from '../../../commons/FullSizeImage/FullSizeImage';\nimport Modal from '../../../commons/Modal/Modal';\nimport UserItem from '../../../commons/UserItem/UserItem.jsx';\n\nimport {profileApi} from '../../../../api/api.js';\n\nclass Post extends React.Component {\n\n    state = {\n        widthMax: 900,\n        widthMin: 700,\n        heightMax: 400,\n        width: 0,\n        height: 0,\n        like_fetching: false,\n        isFullSize: false,\n        showWhoLikedModal: false,\n    }\n\n    fitImage (e) {\n        let img = new Image();\n        img.src = e.target.currentSrc;\n        let width, height;\n        if(true){\n            width = e.currentTarget.parentElement.clientWidth;\n            height = width * img.height/ img.width;\n        }else if(img.width < this.state.widthMin){\n            width = this.state.widthMin;\n            height = this.state.widthMin * img.height / img.width;\n        }else if(img.width < this.state.widthMax){\n            width = img.width;\n            height = img.height;\n        }else{\n\n            width = this.state.widthMax;\n            height = this.state.widthMax * img.height / img.width;\n        };\n\n        this.setState({ width, height });\n\n    };\n\n    async onLikes (e) {\n        let options = {\n            id: this.props.auth.id,\n            user_id: this.props.profile.id,\n            token: this.props.auth.token,\n            post_id: this.props.post.id,\n        };\n\n        this.setState({ like_fetching: true });\n        await this.props.likedPost(options);\n        this.setState({ like_fetching: false});\n\n    };\n\n    async onDelete(e) {\n        let options = {\n            id: this.props.auth.id,\n            token: this.props.auth.token,\n            post_id: this.props.post.id,\n        };\n\n        await this.props.deletePost(options);\n    }\n\n    isLiked () {\n        return this.props.post.likes.includes(this.props.auth.id)? heart_fool: heart;\n    }\n\n    fullSizeToggle () {\n        this.setState({isFullSize: !this.state.isFullSize})\n    }\n\n    showWhoLikedModalToggle () {\n        this.setState({showWhoLikedModal: !this.state.showWhoLikedModal});\n    }\n\n    render () {\n        window.localState = this.state;\n\n        let users_ho_liked = this.props.post.likes.map(id => {\n            return <div className={styles.user_ho_liked}></div>\n        });\n\n        return (\n            <div className={styles.wrapper}>\n                {\n                    this.props.auth.id === this.props.profile.id \n                    && <a href='' onClick={(e) => { e.preventDefault() } }>\n                        <div className={styles.criss_cross} onClick={this.onDelete.bind(this)}>\n                            <img src={criss_cross} />\n                        </div>\n                    </a>\n                }\n                    <div className={styles.date}>\n                        {getFormatedDate(this.props.post.date)}\n                    </div>\n                    <div className={styles.post}>\n                        <div className={styles.post_picture_wrp}\n                            style={ {'max-height': this.state.heightMax} }>\n                            <FullSizeToggle \n                                fullSizeToggle={this.fullSizeToggle.bind(this)}/>\n                                <img src={this.props.post.picture} className={styles.post_picture}\n                                    onLoad={this.fitImage.bind(this)} \n                                    style={{\n                                        width: 0, height: 0,\n                                    }}\n                                />\n                                        <div style={ {\n                                            'background-image': `url(\"${this.props.post.picture}\")`,\n                                            'background-repeat': 'no-repeat',\n                                            'background-size': 'cover',\n                                            'background-position': 'center',\n                                            position: 'relative',\n                                            width: this.state.width,\n                                            height: this.state.height,\n                                        }}>\n                                        </div>\n                                    </div>\n\n                                    <div className={styles.text}>\n                                        {this.props.post.text}\n                                    </div>\n\n                                    <div className={styles.likes} >\n                                        <a href='' onClick={(e) => { e.preventDefault() }} >\n                                            <div className={styles.count}>\n                                                <div className={styles.text} \n                                                onClick={this.showWhoLikedModalToggle.bind(this)}>\n                                                    {this.props.post.likes.length}\n                                                </div>\n                                                <div className={styles.user_ho_liked_wrp} \n                                                    style={{'max-width': this.state.user_count_edit_mode && '120px' || '0px'}} >\n                                                    {users_ho_liked.splice(0, 3)}\n                                                    ...\n            </div>\n        </div>\n    </a>\n    <a href='' onClick={(e) => { e.preventDefault() }} >\n        <div className={styles.heart} onClick={this.onLikes.bind(this)}> \n            {\n                !this.state.like_fetching \n                && <img src={this.isLiked()} />\n                || <FetchingToggle />\n            }\n            </div>\n        </a>\n    </div>\n            </div>\n            {\n                this.state.isFullSize\n                    && <FullSizeImage \n                        fullSizeToggle={this.fullSizeToggle.bind(this)}\n                        posts={this.props.posts}\n                        picture={this.props.post.picture}\n                        width={this.state.width}\n                        height={this.state.height}\n                    />\n            }\n                        {\n                            this.state.showWhoLikedModal \n                                && <Modal width={800} \n                                    changeVisibleModal={this.showWhoLikedModalToggle.bind(this)}\n                                    scrollbar={this.props.scrollbar}\n                                    likes={this.props.post.likes}\n                                    post_id={this.props.post.id}\n                                    user_id={this.props.profile.id}\n                                    Component={WhoLikedModal} />\n                        }\n                    </div>\n        );\n    }\n};\n\nclass WhoLikedModal extends React.Component {\n    componentDidMount() {\n        this.setState({isFetching: true});\n        let options = {\n            user_id: this.props.user_id,\n            post_id: this.props.post_id,\n        };\n        profileApi.getLikersPost(options)\n            .then(data => {\n                if(data.result_code == 0){\n                    console.log('res' + data.users);\n                    this.setState({likers: data.users});\n                }else{\n                }\n                this.setState({isFetching: false});\n            });\n    }\n\n    state = {\n        likers: [],\n        isFetching: false,\n    }\n\n    render () {\n        let users = this.state.likers.map(user => {\n            return <UserItem user={user} \n                changeVisibleModal={() => {\n                    this.props.changeVisibleModal();\n                    this.props.scrollbar.current.scrollTop = 0;\n                } }\n                    />\n        });\n\n        let height = users.length > 4? 570: users.length * 130 + 50; // 130 * n + 50\n        console.log(this.props);\n        return <div className={'custom_scroll_bar'}\n            style={ {\n                width: '100%',\n                height, \n            } }>\n            {\n                users.length\n                && users\n                || <span style={ {\n                    width: '100%',\n                    height: '100%',\n                } }>\n                    list is empty\n                </span>\n            }\n        </div>\n    }\n}\n\nexport default connect(() => {}, {likedPost, deletePost})(Post);\n\n"]},"metadata":{},"sourceType":"module"}