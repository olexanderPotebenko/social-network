{"ast":null,"code":"export const requiredFields = value => {\n  return value ? undefined : 'Field is required !';\n};\nexport const maxLengthCreator = max_length => value => {\n  return value && value.length <= max_length ? undefined : `Max length is ${max_length}`;\n};\nexport const maxLengthOrNothingCreator = max_length => value => {\n  return !value || value.length <= max_length ? undefined : `Max length is ${max_length}`;\n};\nexport const minLengthCreator = min_length => value => {\n  return value && value.length >= min_length ? undefined : `Min length is ${min_length}`;\n};\nexport const minLengthOrNothingCreator = min_length => value => {\n  return !value || value.length >= min_length ? undefined : `Min length is ${min_length}`;\n};\nexport const matchPasswords = (password, all_values) => {\n  return password === all_values.password ? undefined : 'Enter passwords is no match';\n};\nexport const emailValidate = address => {\n  let reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n  return reg.test(address) ? undefined : 'Enter correct email address';\n};\nexport const phoneNumberValidate = phone => {\n  let phoneno = /^\\(?([0-9]{12})\\)$/;\n  return !phone || 1 ? undefined : 'Enter corrrect phone number';\n};\nexport const onlyLetters = value => {\n  let reg = /\\W/;\n  return !value.match(reg) ? undefined : 'Fields must been equals english letters only';\n};","map":{"version":3,"sources":["/home/i/Documents/projects/social-network/src/utils/validators.js"],"names":["requiredFields","value","undefined","maxLengthCreator","max_length","length","maxLengthOrNothingCreator","minLengthCreator","min_length","minLengthOrNothingCreator","matchPasswords","password","all_values","emailValidate","address","reg","test","phoneNumberValidate","phone","phoneno","onlyLetters","match"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAGC,KAAK,IAAI;AACnC,SAAOA,KAAK,GAAGC,SAAH,GAAc,qBAA1B;AACH,CAFM;AAIP,OAAO,MAAMC,gBAAgB,GAAIC,UAAD,IAAiBH,KAAD,IAAW;AACvD,SAAOA,KAAK,IAAIA,KAAK,CAACI,MAAN,IAAgBD,UAAzB,GAAqCF,SAArC,GAAiD,iBAAgBE,UAAW,EAAnF;AACH,CAFM;AAIP,OAAO,MAAME,yBAAyB,GAAIF,UAAD,IAAiBH,KAAD,IAAW;AAChE,SAAO,CAACA,KAAD,IAAUA,KAAK,CAACI,MAAN,IAAgBD,UAA1B,GAAsCF,SAAtC,GAAkD,iBAAgBE,UAAW,EAApF;AACH,CAFM;AAIP,OAAO,MAAMG,gBAAgB,GAAIC,UAAD,IAAiBP,KAAD,IAAW;AACvD,SAAOA,KAAK,IAAIA,KAAK,CAACI,MAAN,IAAgBG,UAAzB,GAAqCN,SAArC,GAAiD,iBAAgBM,UAAW,EAAnF;AACH,CAFM;AAIP,OAAO,MAAMC,yBAAyB,GAAID,UAAD,IAAiBP,KAAD,IAAW;AAChE,SAAO,CAACA,KAAD,IAAUA,KAAK,CAACI,MAAN,IAAgBG,UAA1B,GAAsCN,SAAtC,GAAkD,iBAAgBM,UAAW,EAApF;AACH,CAFM;AAIP,OAAO,MAAME,cAAc,GAAG,CAACC,QAAD,EAAWC,UAAX,KAA0B;AACpD,SAAOD,QAAQ,KAAKC,UAAU,CAACD,QAAxB,GAAkCT,SAAlC,GAA6C,6BAApD;AACH,CAFM;AAIP,OAAO,MAAMW,aAAa,GAAIC,OAAD,IAAa;AACvC,MAAIC,GAAG,GAAG,6DAAV;AACA,SAAOA,GAAG,CAACC,IAAJ,CAASF,OAAT,IAAmBZ,SAAnB,GAA8B,6BAArC;AACF,CAHM;AAKP,OAAO,MAAMe,mBAAmB,GAAGC,KAAK,IAAI;AACxC,MAAIC,OAAO,GAAG,oBAAd;AACA,SAAO,CAACD,KAAD,IAAU,CAAV,GAAahB,SAAb,GAAwB,6BAA/B;AACH,CAHM;AAMP,OAAO,MAAMkB,WAAW,GAAGnB,KAAK,IAAI;AAChC,MAAIc,GAAG,GAAG,IAAV;AACI,SAAO,CAACd,KAAK,CAACoB,KAAN,CAAYN,GAAZ,CAAD,GAAoBb,SAApB,GAA+B,8CAAtC;AACP,CAHM","sourcesContent":["export const requiredFields = value => {\n    return value ? undefined: 'Field is required !';\n};\n\nexport const maxLengthCreator = (max_length) => (value) => {\n    return value && value.length <= max_length? undefined: `Max length is ${max_length}`;\n};\n\nexport const maxLengthOrNothingCreator = (max_length) => (value) => {\n    return !value || value.length <= max_length? undefined: `Max length is ${max_length}`;\n};\n\nexport const minLengthCreator = (min_length) => (value) => {\n    return value && value.length >= min_length? undefined: `Min length is ${min_length}`;\n};\n\nexport const minLengthOrNothingCreator = (min_length) => (value) => {\n    return !value || value.length >= min_length? undefined: `Min length is ${min_length}`;\n};\n\nexport const matchPasswords = (password, all_values) => {\n    return password === all_values.password? undefined: 'Enter passwords is no match';\n}\n\nexport const emailValidate = (address) => {\n   let reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n   return reg.test(address)? undefined: 'Enter correct email address';\n}\n\nexport const phoneNumberValidate = phone => {\n    let phoneno = /^\\(?([0-9]{12})\\)$/;\n    return !phone || 1? undefined: 'Enter corrrect phone number';\n}\n\n\nexport const onlyLetters = value => {\n    let reg = /\\W/;\n        return !value.match(reg) ? undefined: 'Fields must been equals english letters only';\n}\n"]},"metadata":{},"sourceType":"module"}