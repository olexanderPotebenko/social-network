{"ast":null,"code":"var _jsxFileName = \"/root/Documents/projects/social-network/src/components/Auth/SignInForm.jsx\";\nimport React from 'react';\nimport styles from './Auth.module.css';\nimport { change, reset, Field, reduxForm, formValueSelector } from 'redux-form';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { requiredFields, maxLengthCreator } from '../../utils/validators.js';\nimport { Input, Button, ErrorForm } from '../commons/FormsControls/FormsControls.jsx';\nimport FetchingToggle from '../commons/FetchingToggle/FetchingToggle.jsx';\nconst accounts = [{\n  email: 'alina.lukianenko@gmail.com',\n  password: '111111'\n}, {\n  email: 'viktoriya.dyachenko@gmail.com',\n  password: '111111'\n}];\nconst maxLength30 = maxLengthCreator(30);\n\nclass SignInForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shown: false\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      if (!this.props.auth.is_auth) {\n        alert('Нажмите на поле ввода адреса почты и выберите один из предложенных вариантов');\n      }\n    }, 1000);\n  }\n\n  componentWillUpdate(nextProps) {\n    if (nextProps.email != this.props.email || nextProps.password != this.props.password) {\n      const acc = accounts.find(acc => acc.email === nextProps.email);\n      if (acc) this.props.change('password', acc.password);\n    }\n  }\n\n  render() {\n    const {\n      handleSubmit\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: styles.items_container,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, this.props.auth.is_fetching && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles['fetching-wrp'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles['fetching'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FetchingToggle, {\n      width: 50,\n      height: 50,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    })))) || this.props.server_error && /*#__PURE__*/React.createElement(ErrorForm, {\n      message: this.props.server_error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 39\n      }\n    }) || /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 12\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"email\",\n      autoFocus: true,\n      reference: this.emailInput,\n      validate: [requiredFields, maxLength30],\n      component: Input,\n      onActive: \"true\",\n      list: \"defaultEmails\",\n      placeholder: \" Enter your email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"datalist\", {\n      id: \"defaultEmails\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, accounts.map(acc => /*#__PURE__*/React.createElement(\"option\", {\n      value: acc.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 34\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"password\",\n      component: Input,\n      type: \"password\",\n      validate: [requiredFields, maxLength30],\n      reference: this.state.emailInput,\n      placeholder: \" Enter your password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.button_wrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      error: this.props.error,\n      name: 'Sign In',\n      type: \"submit\",\n      disabled: this.props.auth.is_fetching,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \"Or registration\")));\n  }\n\n}\n\n;\nconst selector = formValueSelector('signin');\nexport default compose(connect(state => {\n  const {\n    email,\n    password\n  } = selector(state, 'email', 'password');\n  return {\n    email,\n    password\n  };\n}), reduxForm({\n  form: 'signin'\n}))(SignInForm);","map":{"version":3,"sources":["/root/Documents/projects/social-network/src/components/Auth/SignInForm.jsx"],"names":["React","styles","change","reset","Field","reduxForm","formValueSelector","NavLink","connect","compose","requiredFields","maxLengthCreator","Input","Button","ErrorForm","FetchingToggle","accounts","email","password","maxLength30","SignInForm","Component","constructor","props","state","shown","componentDidMount","setTimeout","auth","is_auth","alert","componentWillUpdate","nextProps","acc","find","render","handleSubmit","items_container","is_fetching","server_error","emailInput","map","button_wrapper","error","selector","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from './Auth.module.css';\nimport {change, reset, Field, reduxForm, formValueSelector} from 'redux-form';\nimport {NavLink} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\n\nimport {requiredFields, maxLengthCreator, } from '../../utils/validators.js';\nimport {Input, Button, ErrorForm} from '../commons/FormsControls/FormsControls.jsx';\nimport FetchingToggle from '../commons/FetchingToggle/FetchingToggle.jsx';\n\nconst accounts = [\n  {\n    email: 'alina.lukianenko@gmail.com',\n    password: '111111',\n  }, \n  {\n    email: 'viktoriya.dyachenko@gmail.com',\n    password: '111111',\n  },\n];\n\nconst maxLength30 = maxLengthCreator(30);\n\nclass SignInForm extends React.Component {\n\n  constructor (props) {\n    super(props);\n  }\n\n  state = {\n    shown: false,\n  }\n\n  componentDidMount () {\n    setTimeout(() => {\n      if(!this.props.auth.is_auth) {\n        alert('Нажмите на поле ввода адреса почты и выберите один из предложенных вариантов')\n      }\n    }, 1000);\n  }\n\n  componentWillUpdate (nextProps) {\n    if(nextProps.email != this.props.email || nextProps.password != this.props.password) {\n      const acc = accounts.find(acc => acc.email === nextProps.email);\n      if(acc) this.props.change('password', acc.password);\n    }\n  }\n\n  render () {\n    const {handleSubmit} = this.props;\n\n    return <div>\n      <form className={styles.items_container} onSubmit={handleSubmit}>\n        {\n          this.props.auth.is_fetching \n            && <div>\n            <div className={styles['fetching-wrp']}>\n        <div className={styles['fetching']}>\n          <FetchingToggle width={50} height={50}/>\n        </div>\n      </div>\n    </div>\n        || this.props.server_error && <ErrorForm message={this.props.server_error} /> \n        || <div> </div>\n        }\n        <div>\n          <Field name='email' autoFocus={true} \n            reference={this.emailInput}\n            validate={[requiredFields, maxLength30]}\n            component={Input} \n            onActive='true'\n            list='defaultEmails'\n            placeholder=' Enter your email' />\n          <datalist id=\"defaultEmails\">\n            {accounts.map(acc => <option value={acc.email} />)}\n          </datalist>\n\n        </div>\n        <div>\n          <Field name='password' component={Input} \n            type='password'\n            validate={[requiredFields, maxLength30, ]} \n            reference={this.state.emailInput}\n            placeholder=' Enter your password' />\n        </div>\n        <div className={styles.button_wrapper} >\n          <div>\n          </div>\n          <Button error={this.props.error} name={'Sign In'} type='submit' \n            disabled={this.props.auth.is_fetching}/>\n        </div>\n        <NavLink to='/signup'>\n          Or registration\n        </NavLink>\n  </form>\n                    </div>\n  }\n};\n\nconst selector = formValueSelector('signin');\n\nexport default compose(\n  connect(\n    state => {\n      const {email, password} = selector(state, 'email', 'password');\n      return {email, password}\n    },\n  ),\n  reduxForm({form: 'signin',\n  })\n)(SignInForm);\n"]},"metadata":{},"sourceType":"module"}