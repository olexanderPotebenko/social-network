{"ast":null,"code":"var _jsxFileName = \"/home/i/Documents/projects/social-network/src/components/Messages/Messages.jsx\";\nimport React from 'react';\nimport cls from './Messages.module.css';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux'; //hoocs\n\nimport WithSignInRedirect from '../../hocs/WithSignInRedirect.jsx';\nimport WithAuthData from '../../hocs/WithAuthData.jsx'; //components\n\nimport FetchingToggle from '../commons/FetchingToggle/FetchingToggle';\nimport Dialog from './Dialog/Dialog'; //reducers\n\nimport { getDialogs, sendMessage } from '../../reducers/messagesReducer';\n\nclass Messages extends React.Component {\n  componentDidMount() {\n    let options = {\n      id: this.props.auth.id,\n      token: this.props.auth.token\n    };\n    this.props.getDialogs(options);\n  }\n\n  render() {\n    debugger; // в компонене Messages будут отображаться только существующие диалоги, создать новый невозможно\n\n    let dialogs = this.props.dialogs;\n\n    if (dialogs.length === 0) {\n      dialogs = 'Dialogs list is empty';\n    } else {\n      dialogs = dialogs.map(item => {\n        return /*#__PURE__*/React.createElement(Dialog, {\n          item: item,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 16\n          }\n        });\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, dialogs);\n  }\n\n}\n\n;\n\nlet mapsStateToProps = state => {\n  return {\n    isFetching: state.messagesPage.isFetching,\n    dialogs: state.messagesPage.dialogs\n  };\n};\n\nexport default compose(WithAuthData, WithSignInRedirect, connect(mapsStateToProps, {\n  getDialogs,\n  sendMessage\n}))(Messages);","map":{"version":3,"sources":["/home/i/Documents/projects/social-network/src/components/Messages/Messages.jsx"],"names":["React","cls","compose","connect","WithSignInRedirect","WithAuthData","FetchingToggle","Dialog","getDialogs","sendMessage","Messages","Component","componentDidMount","options","id","props","auth","token","render","dialogs","length","map","item","mapsStateToProps","state","isFetching","messagesPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CACA;;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,YAAP,MAAyB,6BAAzB,C,CACA;;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,OAAOC,MAAP,MAAmB,iBAAnB,C,CACA;;AACA,SAAQC,UAAR,EAAoBC,WAApB,QAAsC,gCAAtC;;AAEA,MAAMC,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;AAErCC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,OAAO,GAAG;AACZC,MAAAA,EAAE,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBF,EADR;AAEZG,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,IAAX,CAAgBC;AAFX,KAAd;AAIA,SAAKF,KAAL,CAAWP,UAAX,CAAsBK,OAAtB;AAED;;AAEDK,EAAAA,MAAM,GAAG;AACP,aADO,CAEP;;AAEA,QAAIC,OAAO,GAAG,KAAKJ,KAAL,CAAWI,OAAzB;;AACA,QAAGA,OAAO,CAACC,MAAR,KAAmB,CAAtB,EAAyB;AACvBD,MAAAA,OAAO,GAAG,uBAAV;AACD,KAFD,MAEM;AACJA,MAAAA,OAAO,GAAGA,OAAO,CAACE,GAAR,CAAYC,IAAI,IAAI;AAC5B,4BAAO,oBAAC,MAAD;AAAQ,UAAA,IAAI,EAAEA,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFS,CAAV;AAGD;;AACD,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,OADH,CADF;AAMD;;AA7BoC;;AA8BtC;;AAED,IAAII,gBAAgB,GAAGC,KAAK,IAAI;AAC9B,SAAO;AACLC,IAAAA,UAAU,EAAED,KAAK,CAACE,YAAN,CAAmBD,UAD1B;AAELN,IAAAA,OAAO,EAAEK,KAAK,CAACE,YAAN,CAAmBP;AAFvB,GAAP;AAID,CALD;;AAOA,eAAejB,OAAO,CACpBG,YADoB,EAEpBD,kBAFoB,EAGpBD,OAAO,CAACoB,gBAAD,EAAmB;AAACf,EAAAA,UAAD;AAAaC,EAAAA;AAAb,CAAnB,CAHa,CAAP,CAIbC,QAJa,CAAf","sourcesContent":["import React from 'react';\nimport cls from './Messages.module.css';\n\nimport {compose} from 'redux';\nimport {connect} from 'react-redux';\n//hoocs\nimport WithSignInRedirect from '../../hocs/WithSignInRedirect.jsx';\nimport WithAuthData from '../../hocs/WithAuthData.jsx';\n//components\nimport FetchingToggle from '../commons/FetchingToggle/FetchingToggle';\nimport Dialog from './Dialog/Dialog'\n//reducers\nimport {getDialogs, sendMessage} from '../../reducers/messagesReducer';\n\nclass Messages extends React.Component {\n\n  componentDidMount() {\n    let options = {\n      id: this.props.auth.id,\n      token: this.props.auth.token,\n    };\n    this.props.getDialogs(options);\n\n  }\n\n  render() {\n    debugger;\n    // в компонене Messages будут отображаться только существующие диалоги, создать новый невозможно\n\n    let dialogs = this.props.dialogs;\n    if(dialogs.length === 0) {\n      dialogs = 'Dialogs list is empty'\n    }else {\n      dialogs = dialogs.map(item => {\n        return <Dialog item={item} />\n      })\n    }\n    return (\n      <div>\n        {dialogs}\n\n      </div>\n    );\n  };\n};\n\nlet mapsStateToProps = state => {\n  return {\n    isFetching: state.messagesPage.isFetching,\n    dialogs: state.messagesPage.dialogs,\n  };\n};\n\nexport default compose(\n  WithAuthData,\n  WithSignInRedirect,\n  connect(mapsStateToProps, {getDialogs, sendMessage}),\n)(Messages);\n"]},"metadata":{},"sourceType":"module"}