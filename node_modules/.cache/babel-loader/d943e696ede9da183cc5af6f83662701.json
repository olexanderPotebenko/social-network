{"ast":null,"code":"import { messageApi } from '../api/api';\nexport const ADD_NEW_TEXT_MESSAGE = 'ADD-NEW-TEXT-MESSAGE';\nexport const ADD_NEW_MESSAGE = 'ADD-NEW-MESSAGE';\nexport const SET_DIALOGS = 'SET-DIALOGS';\nexport const SET_DIALOG = 'SET-DIALOG';\nexport const SELECT_DIALOG = 'SELECT-DIALOG';\nexport const WS_MESSAGE = 'WS-MESSAGE';\nexport const READ_MESSAGES = 'READ-MESSAGES';\nconst SET_DIALOGS_IS_FETCHING = 'SET-DIALOGS-IS-FETCHING';\nconst SET_DIALOG_IS_FETCHING = 'SET-DIALOG-IS-FETCHING';\nlet initial_state = {\n  dialogsIsFetching: true,\n  dialogIsFetching: true,\n  currentDialog: '',\n  newMessage: 0,\n  dialogs: [],\n  dialog: {}\n};\n\nlet messagesReducer = (state = initial_state, action) => {\n  switch (action.type) {\n    case SET_DIALOGS_IS_FETCHING:\n      return { ...state,\n        dialogsIsFetching: action.dialogsIsFetching\n      };\n\n    case SET_DIALOG_IS_FETCHING:\n      return { ...state,\n        dialogIsFetching: action.dialogIsFetching\n      };\n\n    case SET_DIALOGS:\n      return { ...state,\n        dialogs: action.dialogs\n      };\n\n    case SET_DIALOG:\n      return { ...state,\n        dialog: action.dialog\n      };\n\n    case SELECT_DIALOG:\n      return { ...state,\n        currentDialog: action.dialog_id\n      };\n\n    case READ_MESSAGES:\n      let newState = { ...state,\n        dialog: { ...state.dialog,\n          messages: state.dialog.messages.map(mess => {\n            return action.messages.find(item => mess.id == item.id) ? { ...mess,\n              read: true\n            } : mess;\n          })\n        }\n      };\n      return newState;\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nconst setDialogsIsFetching = dialogsIsFetching => ({\n  type: SET_DIALOGS_IS_FETCHING,\n  dialogsIsFetching\n});\n\nexport const setDialogIsFetching = dialogIsFetching => ({\n  type: SET_DIALOG_IS_FETCHING,\n  dialogIsFetching\n});\n\nconst setDialogsActionCreator = dialogs => ({\n  type: SET_DIALOGS,\n  dialogs\n});\n\nconst setDialogActionCreator = dialog => ({\n  type: SET_DIALOG,\n  dialog\n});\n\nconst readMessagesActionCreator = messages => ({\n  type: READ_MESSAGES,\n  messages\n});\n\nexport const selectDialog = dialog_id => ({\n  type: SELECT_DIALOG,\n  dialog_id\n});\nexport const getDialogs = options => dispatch => {\n  dispatch(setDialogsIsFetching(true));\n  return messageApi.getDialogs(options).then(res => {\n    dispatch(setDialogsIsFetching(false));\n\n    if (res.data.result_code == 0) {\n      return dispatch(setDialogsActionCreator(res.data.dialogs));\n    } else {}\n\n    ;\n  });\n};\nexport const getDialogsWithoutToggle = options => dispatch => {\n  return messageApi.getDialogs(options).then(res => {\n    if (res.data.result_code == 0) {\n      return dispatch(setDialogsActionCreator(res.data.dialogs));\n    } else {}\n\n    ;\n  });\n};\nexport const getDialog = options => dispatch => {\n  return messageApi.getDialog(options).then(res => {\n    if (res.data.result_code === 0) {\n      let dialog = {\n        date: res.data.date,\n        dateLastModified: res.data.dateLastModified,\n        user_id: res.data.user_id,\n        messages: res.data.messages,\n        user_avatar: res.data.user_avatar,\n        user_name: res.data.user_name,\n        dialog_id: res.data.dialog_id\n      };\n      return dispatch(setDialogActionCreator(dialog));\n    } else {}\n  });\n};\nexport const deleteDialog = options => dispatch => {\n  messageApi.deleteDialog(options).then(res => {\n    if (res.data.result_code === 0) {\n      dispatch(getDialogs(options));\n      dispatch(selectDialog(''));\n    } else {}\n  });\n};\nexport const sendMessage = options => dispatch => {\n  return messageApi.sendMessage(options).then(data => {\n    if (data.result_code == 0) {\n      dispatch(selectDialog(data.id));\n      dispatch({\n        type: WS_MESSAGE,\n        user_id: data.user_id\n      });\n      dispatch(getDialogsWithoutToggle(options));\n    }\n  });\n};\nexport const readMessages = options => dispatch => {\n  console.log(options);\n  messageApi.readMessages(options).then(data => {\n    if (data.data.result_code === 0) {\n      console.log('readMessages');\n      console.log(data);\n      dispatch(readMessagesActionCreator(options.messages)); //dispatch(getDialog(options));\n    }\n  });\n};\nexport default messagesReducer;","map":{"version":3,"sources":["/root/Documents/projects/social-network/src/reducers/messagesReducer.js"],"names":["messageApi","ADD_NEW_TEXT_MESSAGE","ADD_NEW_MESSAGE","SET_DIALOGS","SET_DIALOG","SELECT_DIALOG","WS_MESSAGE","READ_MESSAGES","SET_DIALOGS_IS_FETCHING","SET_DIALOG_IS_FETCHING","initial_state","dialogsIsFetching","dialogIsFetching","currentDialog","newMessage","dialogs","dialog","messagesReducer","state","action","type","dialog_id","newState","messages","map","mess","find","item","id","read","setDialogsIsFetching","setDialogIsFetching","setDialogsActionCreator","setDialogActionCreator","readMessagesActionCreator","selectDialog","getDialogs","options","dispatch","then","res","data","result_code","getDialogsWithoutToggle","getDialog","date","dateLastModified","user_id","user_avatar","user_name","deleteDialog","sendMessage","readMessages","console","log"],"mappings":"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","sourcesContent":["import {messageApi} from '../api/api';\n\nexport const ADD_NEW_TEXT_MESSAGE = 'ADD-NEW-TEXT-MESSAGE';\nexport const ADD_NEW_MESSAGE = 'ADD-NEW-MESSAGE';\nexport const SET_DIALOGS = 'SET-DIALOGS';\nexport const SET_DIALOG = 'SET-DIALOG';\nexport const SELECT_DIALOG = 'SELECT-DIALOG';\nexport const WS_MESSAGE = 'WS-MESSAGE';\nexport const READ_MESSAGES = 'READ-MESSAGES';\nconst SET_DIALOGS_IS_FETCHING = 'SET-DIALOGS-IS-FETCHING';\nconst SET_DIALOG_IS_FETCHING = 'SET-DIALOG-IS-FETCHING';\n\nlet initial_state = {\n  dialogsIsFetching: true,\n  dialogIsFetching: true,\n  currentDialog: '',\n  newMessage: 0,\n  dialogs: [],\n  dialog: {},\n};\n\nlet messagesReducer = (state = initial_state, action) => {\n  switch (action.type) {\n    case SET_DIALOGS_IS_FETCHING: \n      return {\n        ...state, \n        dialogsIsFetching: action.dialogsIsFetching,\n      };\n    case SET_DIALOG_IS_FETCHING: \n      return {\n        ...state, \n        dialogIsFetching: action.dialogIsFetching,\n      };\n    case SET_DIALOGS: \n      return {\n        ...state,\n        dialogs: action.dialogs,\n      };\n    case SET_DIALOG: \n      return {\n        ...state,\n        dialog: action.dialog,\n      };\n    case SELECT_DIALOG:\n      return {\n        ...state,\n        currentDialog: action.dialog_id,\n      }\n    case READ_MESSAGES: \n      let newState = {\n        ...state,\n        dialog: {...state.dialog,\n          messages: state.dialog.messages.map(mess => {\n            return action.messages.find(item => mess.id == item.id)? {...mess, read: true}: mess;\n          }),\n        },\n      }\n      return newState;\n    default: return state;\n  };\n};\n\nconst setDialogsIsFetching = dialogsIsFetching => ({type: SET_DIALOGS_IS_FETCHING, dialogsIsFetching});\nexport const setDialogIsFetching = dialogIsFetching => ({type: SET_DIALOG_IS_FETCHING, dialogIsFetching});\n\nconst setDialogsActionCreator = dialogs => ({type: SET_DIALOGS, dialogs});\n\nconst setDialogActionCreator = dialog => ({type: SET_DIALOG, dialog});\n\nconst readMessagesActionCreator = messages => ({type: READ_MESSAGES, messages});\n\nexport const selectDialog = dialog_id => ({type: SELECT_DIALOG, dialog_id});\n\nexport const getDialogs = options => dispatch => {\n  dispatch(setDialogsIsFetching(true));\n  return messageApi.getDialogs(options)\n    .then(res => {\n      dispatch(setDialogsIsFetching(false));\n      if(res.data.result_code == 0){\n        return dispatch(setDialogsActionCreator(res.data.dialogs) );\n      }else{\n      };\n    });\n}\nexport const getDialogsWithoutToggle = options => dispatch => {\n  return messageApi.getDialogs(options)\n    .then(res => {\n      if(res.data.result_code == 0){\n        return dispatch(setDialogsActionCreator(res.data.dialogs) );\n      }else{\n      };\n    });\n}\n\nexport const getDialog = options => dispatch => {\n  return messageApi.getDialog(options)\n    .then(res => {\n      if(res.data.result_code === 0){\n        let dialog = {\n          date: res.data.date,\n          dateLastModified: res.data.dateLastModified,\n          user_id: res.data.user_id,\n          messages: res.data.messages,\n          user_avatar: res.data.user_avatar,\n          user_name: res.data.user_name,\n          dialog_id: res.data.dialog_id,\n        };\n        return dispatch(setDialogActionCreator(dialog))\n      } else {\n      }\n    });\n}\n\nexport const deleteDialog = options => dispatch => {\n  messageApi.deleteDialog(options)\n    .then(res => {\n      if(res.data.result_code === 0) {\n        dispatch(getDialogs(options));\n        dispatch(selectDialog(''));\n      } else {\n      }\n    });\n}\n\nexport const sendMessage = options => dispatch => {\n  return messageApi.sendMessage(options)\n    .then(data => {\n      if(data.result_code == 0){\n        dispatch(selectDialog(data.id));\n        dispatch({type: WS_MESSAGE, user_id: data.user_id});\n        dispatch(getDialogsWithoutToggle(options));\n      }\n    });\n};\n\nexport const readMessages = options => dispatch => {\n  console.log(options)\n  messageApi.readMessages(options)\n    .then(data => {\n      if(data.data.result_code === 0){\n        console.log('readMessages');\n        console.log(data);\n        dispatch(readMessagesActionCreator(options.messages));\n        //dispatch(getDialog(options));\n      }\n    });\n}\n\nexport default messagesReducer;\n\n"]},"metadata":{},"sourceType":"module"}