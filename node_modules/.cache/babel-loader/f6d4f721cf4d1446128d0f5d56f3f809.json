{"ast":null,"code":"import { profileApi } from '../api/api.js';\nimport { stopSubmit } from 'redux-form';\nconst ADD_POST = 'ADD-POST';\nconst ADD_NEW_TEXT = 'ADD-NEW-TEXT';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_USER_POSTS = 'SET-USER-POSTS';\nexport const SET_LIKES_POST = 'SET-LIKES-POST';\nconst DELETE_POST = 'DELETE-POST';\nconst UPDATE_PROFILE = 'UPDATE-PROFILE';\nconst SET_PROFILE_FETCHING = 'SET-PROFILE-FETCHING';\nconst SET_POSTS_FETCHING = 'SET-POSTS-FETCHING';\nconst RESET_PROFILE_STATE = 'RESET-PROFILE-STATE';\nlet initial_state = {\n  profile: null,\n  postsIsFetching: false,\n  profileIsFetching: false,\n  posts: []\n};\n\nlet profileReducer = (state = initial_state, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      return { ...state,\n        posts: state.posts.concat(action.post)\n      };\n\n    case ADD_NEW_TEXT:\n      return addNewText(state, action.text);\n\n    case SET_USER_PROFILE:\n      return setUserProfile(state, action.profile);\n\n    case SET_USER_POSTS:\n      return { ...state,\n        //...state.profile,\n        posts: action.posts\n      };\n\n    case SET_LIKES_POST:\n      let posts = state.posts.map(post => {\n        if (post.id != action.post.id) {\n          return post;\n        } else {\n          return action.post;\n        }\n\n        ;\n      });\n      return { ...state,\n        posts\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => {\n          return post.id != action.post.id;\n        })\n      };\n\n    case UPDATE_PROFILE:\n      return { ...state,\n        profile: { ...state.profile\n        }\n      };\n\n    case SET_PROFILE_FETCHING:\n      return { ...state,\n        profileIsFetching: action.profileIsFetching\n      };\n\n    case SET_POSTS_FETCHING:\n      return { ...state,\n        postsIsFetching: action.postsIsFetching\n      };\n\n    case RESET_PROFILE_STATE:\n      return initial_state;\n  }\n\n  ;\n  return state;\n};\n\nfunction addNewText(state, text) {\n  let state_copy = { ...state\n  };\n  state_copy.textNewPost = text;\n  return state_copy;\n}\n\n;\n\nfunction setUserProfile(state, profile) {\n  let state_copy = { ...state\n  }; // debugger;\n\n  state_copy.profile = profile; // debugger;\n\n  return state_copy;\n}\n\n;\nexport const getProfile = options => dispatch => {\n  dispatch(setProfileFetchingAC(true));\n  profileApi.getProfile(options).then(data => {\n    dispatch(setProfileFetchingAC(false));\n\n    if (data.data.result_code === 0) {\n      dispatch(setUserProfileActionCreator(data.data));\n    }\n  });\n};\nexport const getPosts = options => dispatch => {\n  dispatch(setPostsFetchingAC(true));\n  profileApi.getPosts(options).then(data => {\n    dispatch(setPostsFetchingAC(false));\n\n    if (data.result_code === 0) {\n      dispatch(setUserPosts(data.posts));\n    }\n  });\n};\nexport const createPost = options => dispatch => {\n  profileApi.createPost(options).then(data => {\n    if (data.result_code === 0) {\n      dispatch(addPost(data.post));\n    } else {\n      dispatch(stopSubmit('create_post', {\n        _error: data.message\n      }));\n    }\n\n    ;\n  });\n};\nexport const likedPost = options => dispatch => {\n  return profileApi.likedPost(options).then(data => {\n    if (data.result_code === 0) {\n      return dispatch(setPostLikes(data.post));\n    } else {}\n\n    ;\n  });\n};\nexport const deletePost = options => dispatch => {\n  profileApi.deletePost(options).then(data => {\n    if (data.result_code === 0) {\n      dispatch(deletePostActionCreator(data.post));\n    } else {}\n\n    ;\n  });\n};\nexport const updateProfile = options => dispatch => {\n  return profileApi.updateProfile(options).then(data => {\n    if (data.result_code === 0) {\n      return dispatch(updateProfileActionCreator());\n    } else {}\n\n    ;\n  });\n};\nexport const setUserProfileActionCreator = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setUserPosts = posts => ({\n  type: SET_USER_POSTS,\n  posts\n});\nexport const addPost = post => ({\n  type: ADD_POST,\n  post\n});\nexport const setPostLikes = post => ({\n  type: SET_LIKES_POST,\n  post\n});\nexport const deletePostActionCreator = post => ({\n  type: DELETE_POST,\n  post\n});\nexport const updateProfileActionCreator = () => ({\n  type: UPDATE_PROFILE\n});\n\nconst setProfileFetchingAC = profileIsFetching => ({\n  type: SET_PROFILE_FETCHING,\n  profileIsFetching\n});\n\nconst setPostsFetchingAC = postsIsFetching => ({\n  type: SET_POSTS_FETCHING,\n  postsIsFetching\n});\n\nexport const resetProfileState = () => ({\n  type: RESET_PROFILE_STATE\n});\nexport default profileReducer;","map":{"version":3,"sources":["/root/Documents/projects/social-network/src/reducers/profileReducer.js"],"names":["profileApi","stopSubmit","ADD_POST","ADD_NEW_TEXT","SET_USER_PROFILE","SET_USER_POSTS","SET_LIKES_POST","DELETE_POST","UPDATE_PROFILE","SET_PROFILE_FETCHING","SET_POSTS_FETCHING","RESET_PROFILE_STATE","initial_state","profile","postsIsFetching","profileIsFetching","posts","profileReducer","state","action","type","concat","post","addNewText","text","setUserProfile","map","id","filter","state_copy","textNewPost","getProfile","options","dispatch","setProfileFetchingAC","then","data","result_code","setUserProfileActionCreator","getPosts","setPostsFetchingAC","setUserPosts","createPost","addPost","_error","message","likedPost","setPostLikes","deletePost","deletePostActionCreator","updateProfile","updateProfileActionCreator","resetProfileState"],"mappings":"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","sourcesContent":["import {profileApi} from '../api/api.js';\nimport {stopSubmit} from 'redux-form';\n\nconst ADD_POST = 'ADD-POST';\nconst ADD_NEW_TEXT = 'ADD-NEW-TEXT';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_USER_POSTS = 'SET-USER-POSTS';\nexport const SET_LIKES_POST = 'SET-LIKES-POST';\nconst DELETE_POST = 'DELETE-POST';\nconst UPDATE_PROFILE = 'UPDATE-PROFILE';\nconst SET_PROFILE_FETCHING = 'SET-PROFILE-FETCHING';\nconst SET_POSTS_FETCHING = 'SET-POSTS-FETCHING';\nconst RESET_PROFILE_STATE = 'RESET-PROFILE-STATE';\n\nlet initial_state = {\n  profile: null,\n  postsIsFetching: false,\n  profileIsFetching: false,\n  posts: [\n  ],\n};\n\nlet profileReducer = (state = initial_state, action) => {\n\n  switch (action.type) {\n    case(ADD_POST):\n      return {\n        ...state,\n        posts: state.posts.concat(action.post),\n      };\n    case(ADD_NEW_TEXT):\n      return addNewText(state, action.text);\n    case(SET_USER_PROFILE):\n      return setUserProfile(state, action.profile);\n    case SET_USER_POSTS:\n      return {\n        ...state, \n        //...state.profile,\n        posts: action.posts\n      };\n    case SET_LIKES_POST:\n      let posts = state.posts.map(post => {\n        if(post.id != action.post.id){\n          return post;\n        }else{\n          return action.post;\n        };\n      });\n      return {\n        ...state,\n        posts,\n      };\n    case DELETE_POST: \n      return {\n        ...state,\n        posts: state.posts.filter(post => {\n          return (post.id != action.post.id)\n        }),\n      };\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        profile: {...state.profile},\n      };\n    case SET_PROFILE_FETCHING: \n      return {\n        ...state,\n        profileIsFetching: action.profileIsFetching,\n      };\n    case SET_POSTS_FETCHING:\n      return {\n        ...state,\n        postsIsFetching: action.postsIsFetching,\n      };\n    case RESET_PROFILE_STATE:\n      return initial_state;\n  };\n  return state;\n};\n\nfunction addNewText (state, text) {\n  let state_copy = {...state};\n  state_copy.textNewPost = text;\n  return state_copy;\n};\n\nfunction setUserProfile (state, profile) {\n  let state_copy = {...state};\n  // debugger;\n  state_copy.profile = profile;\n  // debugger;\n  return state_copy;\n};\n\nexport const getProfile = options => dispatch => {\n  dispatch(setProfileFetchingAC(true));\n  profileApi.getProfile(options)\n    .then(data => {\n      dispatch(setProfileFetchingAC(false));\n      if(data.data.result_code === 0){\n        dispatch(setUserProfileActionCreator(data.data));\n      }\n    });\n};\n\nexport const getPosts = options => dispatch => {\n  dispatch(setPostsFetchingAC(true));\n  profileApi.getPosts(options)\n    .then(data => {\n      dispatch(setPostsFetchingAC(false));\n      if(data.result_code === 0 ){\n        dispatch(setUserPosts(data.posts));\n      }\n    });\n};\n\nexport const createPost = options => dispatch => {\n  profileApi.createPost(options)\n    .then(data => {\n      if(data.result_code === 0) {\n        dispatch(addPost(data.post));\n      }else{\n        dispatch(stopSubmit('create_post', {_error: data.message}));\n      };\n    });\n};\n\nexport const likedPost = options => dispatch => {\n  return profileApi.likedPost(options)\n    .then(data => {\n      if(data.result_code === 0) {\n        return dispatch(setPostLikes( data.post, ));\n      }else{\n      };\n    });\n};\n\nexport const deletePost = options => dispatch => {\n  profileApi.deletePost(options)\n    .then(data => {\n      if(data.result_code === 0) {\n        dispatch(deletePostActionCreator( data.post ));\n      }else{\n      };\n    });\n};\n\nexport const updateProfile = options => dispatch => {\n  return profileApi.updateProfile(options)\n    .then(data => {\n      if(data.result_code === 0) {\n        return dispatch(updateProfileActionCreator() );\n      }else{\n      };\n    });\n};\n\n\nexport const setUserProfileActionCreator = profile => ({type: SET_USER_PROFILE, profile});\nexport const setUserPosts = posts => ({type: SET_USER_POSTS, posts});\nexport const addPost = post => ({type: ADD_POST, post});\nexport const setPostLikes = (post) => ({type: SET_LIKES_POST, post}); \nexport const deletePostActionCreator = (post) => ({type: DELETE_POST, post});\nexport const updateProfileActionCreator = () => ({type: UPDATE_PROFILE});\nconst setProfileFetchingAC = profileIsFetching => ({type: SET_PROFILE_FETCHING, profileIsFetching});\nconst setPostsFetchingAC = postsIsFetching => ({type: SET_POSTS_FETCHING, postsIsFetching});\nexport const resetProfileState = () => ({type: RESET_PROFILE_STATE});\n\nexport default profileReducer;\n\n\n"]},"metadata":{},"sourceType":"module"}